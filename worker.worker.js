/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@zappar/zappar-cv/lib/deserializer.js":
/*!************************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/deserializer.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MessageDeserializer = void 0;\nclass MessageDeserializer {\n    constructor() {\n        this._buffer = new ArrayBuffer(0);\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 0;\n        this._length = 0;\n        this._startOffset = -1;\n        this._processor = {\n            int: () => this._i32View[this._startOffset++],\n            bool: () => (this._i32View[this._startOffset++] === 1),\n            type: () => this._i32View[this._startOffset++],\n            float: () => this._f32View[this._startOffset++],\n            timestamp: () => {\n                if (this._startOffset % 2 === 1)\n                    this._startOffset++;\n                let ret = this._f64View[this._startOffset / 2];\n                this._startOffset += 2;\n                return ret;\n            },\n            string: () => {\n                let len = this._i32View[this._startOffset++];\n                let decoder = new TextDecoder();\n                let res = decoder.decode(new Uint8Array(this._buffer, this._startOffset * 4, len));\n                this._startOffset += (len >> 2);\n                if ((len & 3) !== 0)\n                    this._startOffset++;\n                return res;\n            },\n            dataWithLength: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Uint8Array(len);\n                ret.set(this._u8View.subarray(this._startOffset * 4, this._startOffset * 4 + len));\n                this._startOffset += (ret.byteLength >> 2);\n                if ((ret.byteLength & 3) !== 0)\n                    this._startOffset++;\n                return ret.buffer;\n            },\n            matrix4x4: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 16));\n                this._startOffset += len;\n                return ret;\n            },\n            identityCoefficients: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 50));\n                this._startOffset += len;\n                return ret;\n            },\n            expressionCoefficients: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 29));\n                this._startOffset += len;\n                return ret;\n            },\n            cameraModel: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 6));\n                this._startOffset += len;\n                return ret;\n            },\n            barcodeFormat: () => this._i32View[this._startOffset++],\n            faceLandmarkName: () => this._i32View[this._startOffset++],\n            instantTrackerTransformOrientation: () => this._i32View[this._startOffset++],\n            logLevel: () => this._i32View[this._startOffset++],\n        };\n    }\n    setData(data) {\n        this._buffer = data;\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 0;\n        this._length = 0;\n        if (data.byteLength >= 4) {\n            this._offset = 1;\n            this._length = this._i32View[0];\n        }\n        this._startOffset = -1;\n    }\n    hasMessage() {\n        return this._offset + 1 < this._length;\n    }\n    forMessages(cb) {\n        while (this.hasMessage()) {\n            let len = this._i32View[this._offset];\n            let messageId = this._i32View[this._offset + 1];\n            this._startOffset = this._offset + 2;\n            this._offset += len;\n            cb(messageId, this._processor);\n        }\n    }\n}\nexports.MessageDeserializer = MessageDeserializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL2Rlc2VyaWFsaXplci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0B6YXBwYXIvemFwcGFyLXRocmVlanMvLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL2Rlc2VyaWFsaXplci5qcz8yNGZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZXNzYWdlRGVzZXJpYWxpemVyID0gdm9pZCAwO1xuY2xhc3MgTWVzc2FnZURlc2VyaWFsaXplciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2J1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcigwKTtcbiAgICAgICAgdGhpcy5faTMyVmlldyA9IG5ldyBJbnQzMkFycmF5KHRoaXMuX2J1ZmZlcik7XG4gICAgICAgIHRoaXMuX2YzMlZpZXcgPSBuZXcgRmxvYXQzMkFycmF5KHRoaXMuX2J1ZmZlcik7XG4gICAgICAgIHRoaXMuX2Y2NFZpZXcgPSBuZXcgRmxvYXQ2NEFycmF5KHRoaXMuX2J1ZmZlcik7XG4gICAgICAgIHRoaXMuX3U4VmlldyA9IG5ldyBVaW50OEFycmF5KHRoaXMuX2J1ZmZlcik7XG4gICAgICAgIHRoaXMuX3UxNlZpZXcgPSBuZXcgVWludDE2QXJyYXkodGhpcy5fYnVmZmVyKTtcbiAgICAgICAgdGhpcy5fdTMyVmlldyA9IG5ldyBVaW50MzJBcnJheSh0aGlzLl9idWZmZXIpO1xuICAgICAgICB0aGlzLl9vZmZzZXQgPSAwO1xuICAgICAgICB0aGlzLl9sZW5ndGggPSAwO1xuICAgICAgICB0aGlzLl9zdGFydE9mZnNldCA9IC0xO1xuICAgICAgICB0aGlzLl9wcm9jZXNzb3IgPSB7XG4gICAgICAgICAgICBpbnQ6ICgpID0+IHRoaXMuX2kzMlZpZXdbdGhpcy5fc3RhcnRPZmZzZXQrK10sXG4gICAgICAgICAgICBib29sOiAoKSA9PiAodGhpcy5faTMyVmlld1t0aGlzLl9zdGFydE9mZnNldCsrXSA9PT0gMSksXG4gICAgICAgICAgICB0eXBlOiAoKSA9PiB0aGlzLl9pMzJWaWV3W3RoaXMuX3N0YXJ0T2Zmc2V0KytdLFxuICAgICAgICAgICAgZmxvYXQ6ICgpID0+IHRoaXMuX2YzMlZpZXdbdGhpcy5fc3RhcnRPZmZzZXQrK10sXG4gICAgICAgICAgICB0aW1lc3RhbXA6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fc3RhcnRPZmZzZXQgJSAyID09PSAxKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9zdGFydE9mZnNldCsrO1xuICAgICAgICAgICAgICAgIGxldCByZXQgPSB0aGlzLl9mNjRWaWV3W3RoaXMuX3N0YXJ0T2Zmc2V0IC8gMl07XG4gICAgICAgICAgICAgICAgdGhpcy5fc3RhcnRPZmZzZXQgKz0gMjtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0cmluZzogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBsZW4gPSB0aGlzLl9pMzJWaWV3W3RoaXMuX3N0YXJ0T2Zmc2V0KytdO1xuICAgICAgICAgICAgICAgIGxldCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG4gICAgICAgICAgICAgICAgbGV0IHJlcyA9IGRlY29kZXIuZGVjb2RlKG5ldyBVaW50OEFycmF5KHRoaXMuX2J1ZmZlciwgdGhpcy5fc3RhcnRPZmZzZXQgKiA0LCBsZW4pKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9zdGFydE9mZnNldCArPSAobGVuID4+IDIpO1xuICAgICAgICAgICAgICAgIGlmICgobGVuICYgMykgIT09IDApXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3N0YXJ0T2Zmc2V0Kys7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkYXRhV2l0aExlbmd0aDogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBsZW4gPSB0aGlzLl9pMzJWaWV3W3RoaXMuX3N0YXJ0T2Zmc2V0KytdO1xuICAgICAgICAgICAgICAgIGxldCByZXQgPSBuZXcgVWludDhBcnJheShsZW4pO1xuICAgICAgICAgICAgICAgIHJldC5zZXQodGhpcy5fdThWaWV3LnN1YmFycmF5KHRoaXMuX3N0YXJ0T2Zmc2V0ICogNCwgdGhpcy5fc3RhcnRPZmZzZXQgKiA0ICsgbGVuKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fc3RhcnRPZmZzZXQgKz0gKHJldC5ieXRlTGVuZ3RoID4+IDIpO1xuICAgICAgICAgICAgICAgIGlmICgocmV0LmJ5dGVMZW5ndGggJiAzKSAhPT0gMClcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fc3RhcnRPZmZzZXQrKztcbiAgICAgICAgICAgICAgICByZXR1cm4gcmV0LmJ1ZmZlcjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtYXRyaXg0eDQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgbGVuID0gdGhpcy5faTMyVmlld1t0aGlzLl9zdGFydE9mZnNldCsrXTtcbiAgICAgICAgICAgICAgICBsZXQgcmV0ID0gbmV3IEZsb2F0MzJBcnJheShsZW4pO1xuICAgICAgICAgICAgICAgIHJldC5zZXQodGhpcy5fZjMyVmlldy5zdWJhcnJheSh0aGlzLl9zdGFydE9mZnNldCwgdGhpcy5fc3RhcnRPZmZzZXQgKyAxNikpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3N0YXJ0T2Zmc2V0ICs9IGxlbjtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlkZW50aXR5Q29lZmZpY2llbnRzOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IGxlbiA9IHRoaXMuX2kzMlZpZXdbdGhpcy5fc3RhcnRPZmZzZXQrK107XG4gICAgICAgICAgICAgICAgbGV0IHJldCA9IG5ldyBGbG9hdDMyQXJyYXkobGVuKTtcbiAgICAgICAgICAgICAgICByZXQuc2V0KHRoaXMuX2YzMlZpZXcuc3ViYXJyYXkodGhpcy5fc3RhcnRPZmZzZXQsIHRoaXMuX3N0YXJ0T2Zmc2V0ICsgNTApKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9zdGFydE9mZnNldCArPSBsZW47XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleHByZXNzaW9uQ29lZmZpY2llbnRzOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IGxlbiA9IHRoaXMuX2kzMlZpZXdbdGhpcy5fc3RhcnRPZmZzZXQrK107XG4gICAgICAgICAgICAgICAgbGV0IHJldCA9IG5ldyBGbG9hdDMyQXJyYXkobGVuKTtcbiAgICAgICAgICAgICAgICByZXQuc2V0KHRoaXMuX2YzMlZpZXcuc3ViYXJyYXkodGhpcy5fc3RhcnRPZmZzZXQsIHRoaXMuX3N0YXJ0T2Zmc2V0ICsgMjkpKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9zdGFydE9mZnNldCArPSBsZW47XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjYW1lcmFNb2RlbDogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBsZW4gPSB0aGlzLl9pMzJWaWV3W3RoaXMuX3N0YXJ0T2Zmc2V0KytdO1xuICAgICAgICAgICAgICAgIGxldCByZXQgPSBuZXcgRmxvYXQzMkFycmF5KGxlbik7XG4gICAgICAgICAgICAgICAgcmV0LnNldCh0aGlzLl9mMzJWaWV3LnN1YmFycmF5KHRoaXMuX3N0YXJ0T2Zmc2V0LCB0aGlzLl9zdGFydE9mZnNldCArIDYpKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9zdGFydE9mZnNldCArPSBsZW47XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBiYXJjb2RlRm9ybWF0OiAoKSA9PiB0aGlzLl9pMzJWaWV3W3RoaXMuX3N0YXJ0T2Zmc2V0KytdLFxuICAgICAgICAgICAgZmFjZUxhbmRtYXJrTmFtZTogKCkgPT4gdGhpcy5faTMyVmlld1t0aGlzLl9zdGFydE9mZnNldCsrXSxcbiAgICAgICAgICAgIGluc3RhbnRUcmFja2VyVHJhbnNmb3JtT3JpZW50YXRpb246ICgpID0+IHRoaXMuX2kzMlZpZXdbdGhpcy5fc3RhcnRPZmZzZXQrK10sXG4gICAgICAgICAgICBsb2dMZXZlbDogKCkgPT4gdGhpcy5faTMyVmlld1t0aGlzLl9zdGFydE9mZnNldCsrXSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc2V0RGF0YShkYXRhKSB7XG4gICAgICAgIHRoaXMuX2J1ZmZlciA9IGRhdGE7XG4gICAgICAgIHRoaXMuX2kzMlZpZXcgPSBuZXcgSW50MzJBcnJheSh0aGlzLl9idWZmZXIpO1xuICAgICAgICB0aGlzLl9mMzJWaWV3ID0gbmV3IEZsb2F0MzJBcnJheSh0aGlzLl9idWZmZXIpO1xuICAgICAgICB0aGlzLl9mNjRWaWV3ID0gbmV3IEZsb2F0NjRBcnJheSh0aGlzLl9idWZmZXIpO1xuICAgICAgICB0aGlzLl91OFZpZXcgPSBuZXcgVWludDhBcnJheSh0aGlzLl9idWZmZXIpO1xuICAgICAgICB0aGlzLl91MTZWaWV3ID0gbmV3IFVpbnQxNkFycmF5KHRoaXMuX2J1ZmZlcik7XG4gICAgICAgIHRoaXMuX3UzMlZpZXcgPSBuZXcgVWludDMyQXJyYXkodGhpcy5fYnVmZmVyKTtcbiAgICAgICAgdGhpcy5fb2Zmc2V0ID0gMDtcbiAgICAgICAgdGhpcy5fbGVuZ3RoID0gMDtcbiAgICAgICAgaWYgKGRhdGEuYnl0ZUxlbmd0aCA+PSA0KSB7XG4gICAgICAgICAgICB0aGlzLl9vZmZzZXQgPSAxO1xuICAgICAgICAgICAgdGhpcy5fbGVuZ3RoID0gdGhpcy5faTMyVmlld1swXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9zdGFydE9mZnNldCA9IC0xO1xuICAgIH1cbiAgICBoYXNNZXNzYWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fb2Zmc2V0ICsgMSA8IHRoaXMuX2xlbmd0aDtcbiAgICB9XG4gICAgZm9yTWVzc2FnZXMoY2IpIHtcbiAgICAgICAgd2hpbGUgKHRoaXMuaGFzTWVzc2FnZSgpKSB7XG4gICAgICAgICAgICBsZXQgbGVuID0gdGhpcy5faTMyVmlld1t0aGlzLl9vZmZzZXRdO1xuICAgICAgICAgICAgbGV0IG1lc3NhZ2VJZCA9IHRoaXMuX2kzMlZpZXdbdGhpcy5fb2Zmc2V0ICsgMV07XG4gICAgICAgICAgICB0aGlzLl9zdGFydE9mZnNldCA9IHRoaXMuX29mZnNldCArIDI7XG4gICAgICAgICAgICB0aGlzLl9vZmZzZXQgKz0gbGVuO1xuICAgICAgICAgICAgY2IobWVzc2FnZUlkLCB0aGlzLl9wcm9jZXNzb3IpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5NZXNzYWdlRGVzZXJpYWxpemVyID0gTWVzc2FnZURlc2VyaWFsaXplcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/deserializer.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/event.js":
/*!*****************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/event.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Event5 = exports.Event3 = exports.Event2 = exports.Event1 = exports.Event = void 0;\nclass Event {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit() {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i]();\n        }\n    }\n}\nexports.Event = Event;\nclass Event1 {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit(a) {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i](a);\n        }\n    }\n}\nexports.Event1 = Event1;\nclass Event2 {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit(a, b) {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i](a, b);\n        }\n    }\n}\nexports.Event2 = Event2;\nclass Event3 {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit(a, b, c) {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i](a, b, c);\n        }\n    }\n}\nexports.Event3 = Event3;\nclass Event5 {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit(a, b, c, d, e) {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i](a, b, c, d, e);\n        }\n    }\n}\nexports.Event5 = Event5;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL2V2ZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHphcHBhci96YXBwYXItdGhyZWVqcy8uL25vZGVfbW9kdWxlcy9AemFwcGFyL3phcHBhci1jdi9saWIvZXZlbnQuanM/NTZjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXZlbnQ1ID0gZXhwb3J0cy5FdmVudDMgPSBleHBvcnRzLkV2ZW50MiA9IGV4cG9ydHMuRXZlbnQxID0gZXhwb3J0cy5FdmVudCA9IHZvaWQgMDtcbmNsYXNzIEV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5fZnVuY3MgPSBbXTtcbiAgICB9XG4gICAgYmluZChmKSB7XG4gICAgICAgIHRoaXMuX2Z1bmNzLnB1c2goZik7XG4gICAgfVxuICAgIHVuYmluZChmKSB7XG4gICAgICAgIGxldCBpbmR4ID0gdGhpcy5fZnVuY3MuaW5kZXhPZihmKTtcbiAgICAgICAgaWYgKGluZHggPiAtMSkge1xuICAgICAgICAgICAgdGhpcy5fZnVuY3Muc3BsaWNlKGluZHgsIDEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVtaXQoKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCB0b3RhbCA9IHRoaXMuX2Z1bmNzLmxlbmd0aDsgaSA8IHRvdGFsOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX2Z1bmNzW2ldKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkV2ZW50ID0gRXZlbnQ7XG5jbGFzcyBFdmVudDEge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9mdW5jcyA9IFtdO1xuICAgIH1cbiAgICBiaW5kKGYpIHtcbiAgICAgICAgdGhpcy5fZnVuY3MucHVzaChmKTtcbiAgICB9XG4gICAgdW5iaW5kKGYpIHtcbiAgICAgICAgbGV0IGluZHggPSB0aGlzLl9mdW5jcy5pbmRleE9mKGYpO1xuICAgICAgICBpZiAoaW5keCA+IC0xKSB7XG4gICAgICAgICAgICB0aGlzLl9mdW5jcy5zcGxpY2UoaW5keCwgMSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZW1pdChhKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCB0b3RhbCA9IHRoaXMuX2Z1bmNzLmxlbmd0aDsgaSA8IHRvdGFsOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX2Z1bmNzW2ldKGEpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5FdmVudDEgPSBFdmVudDE7XG5jbGFzcyBFdmVudDIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9mdW5jcyA9IFtdO1xuICAgIH1cbiAgICBiaW5kKGYpIHtcbiAgICAgICAgdGhpcy5fZnVuY3MucHVzaChmKTtcbiAgICB9XG4gICAgdW5iaW5kKGYpIHtcbiAgICAgICAgbGV0IGluZHggPSB0aGlzLl9mdW5jcy5pbmRleE9mKGYpO1xuICAgICAgICBpZiAoaW5keCA+IC0xKSB7XG4gICAgICAgICAgICB0aGlzLl9mdW5jcy5zcGxpY2UoaW5keCwgMSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZW1pdChhLCBiKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCB0b3RhbCA9IHRoaXMuX2Z1bmNzLmxlbmd0aDsgaSA8IHRvdGFsOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX2Z1bmNzW2ldKGEsIGIpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5FdmVudDIgPSBFdmVudDI7XG5jbGFzcyBFdmVudDMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9mdW5jcyA9IFtdO1xuICAgIH1cbiAgICBiaW5kKGYpIHtcbiAgICAgICAgdGhpcy5fZnVuY3MucHVzaChmKTtcbiAgICB9XG4gICAgdW5iaW5kKGYpIHtcbiAgICAgICAgbGV0IGluZHggPSB0aGlzLl9mdW5jcy5pbmRleE9mKGYpO1xuICAgICAgICBpZiAoaW5keCA+IC0xKSB7XG4gICAgICAgICAgICB0aGlzLl9mdW5jcy5zcGxpY2UoaW5keCwgMSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZW1pdChhLCBiLCBjKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCB0b3RhbCA9IHRoaXMuX2Z1bmNzLmxlbmd0aDsgaSA8IHRvdGFsOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX2Z1bmNzW2ldKGEsIGIsIGMpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5FdmVudDMgPSBFdmVudDM7XG5jbGFzcyBFdmVudDUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9mdW5jcyA9IFtdO1xuICAgIH1cbiAgICBiaW5kKGYpIHtcbiAgICAgICAgdGhpcy5fZnVuY3MucHVzaChmKTtcbiAgICB9XG4gICAgdW5iaW5kKGYpIHtcbiAgICAgICAgbGV0IGluZHggPSB0aGlzLl9mdW5jcy5pbmRleE9mKGYpO1xuICAgICAgICBpZiAoaW5keCA+IC0xKSB7XG4gICAgICAgICAgICB0aGlzLl9mdW5jcy5zcGxpY2UoaW5keCwgMSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZW1pdChhLCBiLCBjLCBkLCBlKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCB0b3RhbCA9IHRoaXMuX2Z1bmNzLmxlbmd0aDsgaSA8IHRvdGFsOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX2Z1bmNzW2ldKGEsIGIsIGMsIGQsIGUpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5FdmVudDUgPSBFdmVudDU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/event.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js":
/*!****************************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRuntimeObject = void 0;\nfunction getRuntimeObject(mod) {\n    let log_level_wrapped = mod.cwrap(\"zappar_log_level\", \"number\", []);\n    let log_level_set_wrapped = mod.cwrap(\"zappar_log_level_set\", null, [\n        \"number\"\n    ]);\n    let analytics_project_id_set_wrapped = mod.cwrap(\"zappar_analytics_project_id_set\", null, [\n        \"string\"\n    ]);\n    let pipeline_create_wrapped = mod.cwrap(\"zappar_pipeline_create\", \"number\", []);\n    let pipeline_destroy_wrapped = mod.cwrap(\"zappar_pipeline_destroy\", null, [\"number\"]);\n    let pipeline_frame_update_wrapped = mod.cwrap(\"zappar_pipeline_frame_update\", null, [\n        \"number\"\n    ]);\n    let pipeline_frame_number_wrapped = mod.cwrap(\"zappar_pipeline_frame_number\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_model_wrapped = mod.cwrap(\"zappar_pipeline_camera_model\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_frame_user_data_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_user_data\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_frame_submit_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_camera_frame_camera_attitude_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_camera_attitude\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_motion_accelerometer_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_accelerometer_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_motion_rotation_rate_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_rotation_rate_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_motion_attitude_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_attitude_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let camera_source_create_wrapped = mod.cwrap(\"zappar_camera_source_create\", \"number\", [\"number\", \"string\"]);\n    let camera_source_destroy_wrapped = mod.cwrap(\"zappar_camera_source_destroy\", null, [\"number\"]);\n    let image_tracker_create_wrapped = mod.cwrap(\"zappar_image_tracker_create\", \"number\", [\"number\"]);\n    let image_tracker_destroy_wrapped = mod.cwrap(\"zappar_image_tracker_destroy\", null, [\"number\"]);\n    let image_tracker_target_load_from_memory_wrapped = mod.cwrap(\"zappar_image_tracker_target_load_from_memory\", null, [\n        \"number\",\n        \"number\", \"number\"\n    ]);\n    let image_tracker_target_loaded_version_wrapped = mod.cwrap(\"zappar_image_tracker_target_loaded_version\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_target_count_wrapped = mod.cwrap(\"zappar_image_tracker_target_count\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_enabled_wrapped = mod.cwrap(\"zappar_image_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_image_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let image_tracker_anchor_count_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_count\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_anchor_id_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_id\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let image_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_pose_raw\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_create_wrapped = mod.cwrap(\"zappar_face_tracker_create\", \"number\", [\"number\"]);\n    let face_tracker_destroy_wrapped = mod.cwrap(\"zappar_face_tracker_destroy\", null, [\"number\"]);\n    let face_tracker_model_load_from_memory_wrapped = mod.cwrap(\"zappar_face_tracker_model_load_from_memory\", null, [\n        \"number\",\n        \"number\", \"number\"\n    ]);\n    let face_tracker_model_loaded_version_wrapped = mod.cwrap(\"zappar_face_tracker_model_loaded_version\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_face_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_enabled_wrapped = mod.cwrap(\"zappar_face_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_max_faces_set_wrapped = mod.cwrap(\"zappar_face_tracker_max_faces_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_max_faces_wrapped = mod.cwrap(\"zappar_face_tracker_max_faces\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_anchor_count_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_count\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_anchor_id_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_id\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_pose_raw\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_identity_coefficients_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_identity_coefficients\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_expression_coefficients_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_expression_coefficients\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_mesh_create_wrapped = mod.cwrap(\"zappar_face_mesh_create\", \"number\", []);\n    let face_mesh_destroy_wrapped = mod.cwrap(\"zappar_face_mesh_destroy\", null, [\"number\"]);\n    let face_landmark_create_wrapped = mod.cwrap(\"zappar_face_landmark_create\", \"number\", [\"number\"]);\n    let face_landmark_destroy_wrapped = mod.cwrap(\"zappar_face_landmark_destroy\", null, [\"number\"]);\n    let barcode_finder_create_wrapped = mod.cwrap(\"zappar_barcode_finder_create\", \"number\", [\"number\"]);\n    let barcode_finder_destroy_wrapped = mod.cwrap(\"zappar_barcode_finder_destroy\", null, [\"number\"]);\n    let barcode_finder_enabled_set_wrapped = mod.cwrap(\"zappar_barcode_finder_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_enabled_wrapped = mod.cwrap(\"zappar_barcode_finder_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_found_number_wrapped = mod.cwrap(\"zappar_barcode_finder_found_number\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_found_text_wrapped = mod.cwrap(\"zappar_barcode_finder_found_text\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_found_format_wrapped = mod.cwrap(\"zappar_barcode_finder_found_format\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_formats_wrapped = mod.cwrap(\"zappar_barcode_finder_formats\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_formats_set_wrapped = mod.cwrap(\"zappar_barcode_finder_formats_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let instant_world_tracker_create_wrapped = mod.cwrap(\"zappar_instant_world_tracker_create\", \"number\", [\"number\"]);\n    let instant_world_tracker_destroy_wrapped = mod.cwrap(\"zappar_instant_world_tracker_destroy\", null, [\"number\"]);\n    let instant_world_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_instant_world_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let instant_world_tracker_enabled_wrapped = mod.cwrap(\"zappar_instant_world_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let instant_world_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_instant_world_tracker_anchor_pose_raw\", \"number\", [\n        \"number\"\n    ]);\n    let instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped = mod.cwrap(\"zappar_instant_world_tracker_anchor_pose_set_from_camera_offset\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let dataArrayArgLength = 32;\n    let dataArrayArg = mod._malloc(dataArrayArgLength);\n    let floatDataArrayArgLength = 16 * 4;\n    let floatDataArrayArg = mod._malloc(floatDataArrayArgLength);\n    return {\n        log_level: () => {\n            let ret = log_level_wrapped();\n            return ret;\n        },\n        log_level_set: (level) => {\n            let arg_level = level;\n            let ret = log_level_set_wrapped(arg_level);\n            return ret;\n        },\n        analytics_project_id_set: (id) => {\n            let arg_id = id;\n            let ret = analytics_project_id_set_wrapped(arg_id);\n            return ret;\n        },\n        pipeline_create: () => {\n            return pipeline_create_wrapped();\n        },\n        pipeline_destroy: () => {\n            pipeline_destroy_wrapped();\n        },\n        pipeline_frame_update: (o) => {\n            let ret = pipeline_frame_update_wrapped(o);\n            return ret;\n        },\n        pipeline_frame_number: (o) => {\n            let ret = pipeline_frame_number_wrapped(o);\n            return ret;\n        },\n        pipeline_camera_model: (o) => {\n            let ret = pipeline_camera_model_wrapped(o);\n            let ab = new Float32Array(6);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 6 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        pipeline_camera_frame_user_data: (o) => {\n            let ret = pipeline_camera_frame_user_data_wrapped(o);\n            return ret;\n        },\n        pipeline_camera_frame_submit: (o, data, width, height, user_data, camera_to_device_transform) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let arg_width = width;\n            let arg_height = height;\n            let arg_user_data = user_data;\n            if (floatDataArrayArgLength < camera_to_device_transform.byteLength) {\n                mod._free(floatDataArrayArgLength);\n                floatDataArrayArgLength = camera_to_device_transform.byteLength;\n                floatDataArrayArg = mod._malloc(floatDataArrayArgLength);\n            }\n            let arg_camera_to_device_transform = floatDataArrayArg;\n            mod.HEAPF32.set(camera_to_device_transform, floatDataArrayArg / 4);\n            let ret = pipeline_camera_frame_submit_wrapped(o, arg_data, arg_len_data, arg_width, arg_height, arg_user_data, arg_camera_to_device_transform);\n            return ret;\n        },\n        pipeline_camera_frame_camera_attitude: (o) => {\n            let ret = pipeline_camera_frame_camera_attitude_wrapped(o);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        pipeline_motion_accelerometer_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_accelerometer_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        pipeline_motion_rotation_rate_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_rotation_rate_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        pipeline_motion_attitude_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_attitude_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        camera_source_create: (pipeline, device_id) => {\n            let arg_pipeline = pipeline;\n            let arg_device_id = device_id;\n            return camera_source_create_wrapped(arg_pipeline, arg_device_id);\n        },\n        camera_source_destroy: () => {\n            camera_source_destroy_wrapped();\n        },\n        image_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return image_tracker_create_wrapped(arg_pipeline);\n        },\n        image_tracker_destroy: () => {\n            image_tracker_destroy_wrapped();\n        },\n        image_tracker_target_load_from_memory: (o, data) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let ret = image_tracker_target_load_from_memory_wrapped(o, arg_data, arg_len_data);\n            return ret;\n        },\n        image_tracker_target_loaded_version: (o) => {\n            let ret = image_tracker_target_loaded_version_wrapped(o);\n            return ret;\n        },\n        image_tracker_target_count: (o) => {\n            let ret = image_tracker_target_count_wrapped(o);\n            return ret;\n        },\n        image_tracker_enabled: (o) => {\n            let ret = image_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        image_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = image_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        image_tracker_anchor_count: (o) => {\n            let ret = image_tracker_anchor_count_wrapped(o);\n            return ret;\n        },\n        image_tracker_anchor_id: (o, indx) => {\n            let arg_indx = indx;\n            let ret = image_tracker_anchor_id_wrapped(o, arg_indx);\n            return ret;\n        },\n        image_tracker_anchor_pose_raw: (o, indx) => {\n            let arg_indx = indx;\n            let ret = image_tracker_anchor_pose_raw_wrapped(o, arg_indx);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return face_tracker_create_wrapped(arg_pipeline);\n        },\n        face_tracker_destroy: () => {\n            face_tracker_destroy_wrapped();\n        },\n        face_tracker_model_load_from_memory: (o, data) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let ret = face_tracker_model_load_from_memory_wrapped(o, arg_data, arg_len_data);\n            return ret;\n        },\n        face_tracker_model_loaded_version: (o) => {\n            let ret = face_tracker_model_loaded_version_wrapped(o);\n            return ret;\n        },\n        face_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = face_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        face_tracker_enabled: (o) => {\n            let ret = face_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        face_tracker_max_faces_set: (o, num) => {\n            let arg_num = num;\n            let ret = face_tracker_max_faces_set_wrapped(o, arg_num);\n            return ret;\n        },\n        face_tracker_max_faces: (o) => {\n            let ret = face_tracker_max_faces_wrapped(o);\n            return ret;\n        },\n        face_tracker_anchor_count: (o) => {\n            let ret = face_tracker_anchor_count_wrapped(o);\n            return ret;\n        },\n        face_tracker_anchor_id: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_id_wrapped(o, arg_indx);\n            return ret;\n        },\n        face_tracker_anchor_pose_raw: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_pose_raw_wrapped(o, arg_indx);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_anchor_identity_coefficients: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_identity_coefficients_wrapped(o, arg_indx);\n            let ab = new Float32Array(50);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 50 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_anchor_expression_coefficients: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_expression_coefficients_wrapped(o, arg_indx);\n            let ab = new Float32Array(29);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 29 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_mesh_create: () => {\n            return face_mesh_create_wrapped();\n        },\n        face_mesh_destroy: () => {\n            face_mesh_destroy_wrapped();\n        },\n        face_landmark_create: (landmark) => {\n            let arg_landmark = landmark;\n            return face_landmark_create_wrapped(arg_landmark);\n        },\n        face_landmark_destroy: () => {\n            face_landmark_destroy_wrapped();\n        },\n        barcode_finder_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return barcode_finder_create_wrapped(arg_pipeline);\n        },\n        barcode_finder_destroy: () => {\n            barcode_finder_destroy_wrapped();\n        },\n        barcode_finder_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = barcode_finder_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        barcode_finder_enabled: (o) => {\n            let ret = barcode_finder_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        barcode_finder_found_number: (o) => {\n            let ret = barcode_finder_found_number_wrapped(o);\n            return ret;\n        },\n        barcode_finder_found_text: (o, indx) => {\n            let arg_indx = indx;\n            let ret = barcode_finder_found_text_wrapped(o, arg_indx);\n            return ret;\n        },\n        barcode_finder_found_format: (o, indx) => {\n            let arg_indx = indx;\n            let ret = barcode_finder_found_format_wrapped(o, arg_indx);\n            return ret;\n        },\n        barcode_finder_formats: (o) => {\n            let ret = barcode_finder_formats_wrapped(o);\n            return ret;\n        },\n        barcode_finder_formats_set: (o, f) => {\n            let arg_f = f;\n            let ret = barcode_finder_formats_set_wrapped(o, arg_f);\n            return ret;\n        },\n        instant_world_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return instant_world_tracker_create_wrapped(arg_pipeline);\n        },\n        instant_world_tracker_destroy: () => {\n            instant_world_tracker_destroy_wrapped();\n        },\n        instant_world_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = instant_world_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        instant_world_tracker_enabled: (o) => {\n            let ret = instant_world_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        instant_world_tracker_anchor_pose_raw: (o) => {\n            let ret = instant_world_tracker_anchor_pose_raw_wrapped(o);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        instant_world_tracker_anchor_pose_set_from_camera_offset: (o, x, y, z, orientation) => {\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let arg_orientation = orientation;\n            let ret = instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped(o, arg_x, arg_y, arg_z, arg_orientation);\n            return ret;\n        },\n    };\n}\nexports.getRuntimeObject = getRuntimeObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/gen/zappar-server.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/gen/zappar-server.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.zappar_server = void 0;\nconst serializer_1 = __webpack_require__(/*! ../serializer */ \"./node_modules/@zappar/zappar-cv/lib/serializer.js\");\nconst deserializer_1 = __webpack_require__(/*! ../deserializer */ \"./node_modules/@zappar/zappar-cv/lib/deserializer.js\");\nclass zappar_server {\n    constructor(_impl, _sender) {\n        this._impl = _impl;\n        this._sender = _sender;\n        this._deserializer = new deserializer_1.MessageDeserializer();\n        this.serializersByPipelineId = new Map();\n        this._pipeline_id_by_pipeline_id = new Map();\n        this._pipeline_by_instance = new Map();\n        this._pipeline_id_by_camera_source_id = new Map();\n        this._camera_source_by_instance = new Map();\n        this._pipeline_id_by_image_tracker_id = new Map();\n        this._image_tracker_by_instance = new Map();\n        this._pipeline_id_by_face_tracker_id = new Map();\n        this._face_tracker_by_instance = new Map();\n        this._pipeline_id_by_face_mesh_id = new Map();\n        this._face_mesh_by_instance = new Map();\n        this._pipeline_id_by_face_landmark_id = new Map();\n        this._face_landmark_by_instance = new Map();\n        this._pipeline_id_by_barcode_finder_id = new Map();\n        this._barcode_finder_by_instance = new Map();\n        this._pipeline_id_by_instant_world_tracker_id = new Map();\n        this._instant_world_tracker_by_instance = new Map();\n    }\n    processBuffer(b) {\n        this._deserializer.setData(b);\n        this._deserializer.forMessages((messageId, msg) => {\n            switch (messageId) {\n                case 33: {\n                    this._impl.log_level_set(msg.logLevel());\n                    break;\n                }\n                case 30: {\n                    this._impl.analytics_project_id_set(msg.string());\n                    break;\n                }\n                case 26: {\n                    let clientId = msg.type();\n                    let handle = this._impl.pipeline_create();\n                    this._pipeline_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_pipeline_id.set(clientId, clientId);\n                    this.serializersByPipelineId.set(clientId, new serializer_1.MessageSerializer(ab => {\n                        this._sender(clientId, ab);\n                    }));\n                    break;\n                }\n                case 27: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_destroy(obj);\n                    this._pipeline_by_instance.delete(clientId);\n                    break;\n                }\n                case 9: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_frame_update(obj);\n                    break;\n                }\n                case 8: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_camera_frame_submit(obj, msg.dataWithLength(), msg.int(), msg.int(), msg.int(), msg.matrix4x4());\n                    break;\n                }\n                case 10: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_motion_accelerometer_submit(obj, msg.timestamp(), msg.float(), msg.float(), msg.float());\n                    break;\n                }\n                case 11: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_motion_rotation_rate_submit(obj, msg.timestamp(), msg.float(), msg.float(), msg.float());\n                    break;\n                }\n                case 12: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_motion_attitude_submit(obj, msg.timestamp(), msg.float(), msg.float(), msg.float());\n                    break;\n                }\n                case 28: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let arg_device_id = msg.string();\n                    let handle = this._impl.camera_source_create(arg_pipeline, arg_device_id);\n                    this._camera_source_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_camera_source_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 29: {\n                    let clientId = msg.type();\n                    let obj = this._camera_source_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.camera_source_destroy(obj);\n                    this._camera_source_by_instance.delete(clientId);\n                    break;\n                }\n                case 2: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let handle = this._impl.image_tracker_create(arg_pipeline);\n                    this._image_tracker_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_image_tracker_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 13: {\n                    let clientId = msg.type();\n                    let obj = this._image_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.image_tracker_destroy(obj);\n                    this._image_tracker_by_instance.delete(clientId);\n                    break;\n                }\n                case 4: {\n                    let clientId = msg.type();\n                    let obj = this._image_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.image_tracker_target_load_from_memory(obj, msg.dataWithLength());\n                    break;\n                }\n                case 3: {\n                    let clientId = msg.type();\n                    let obj = this._image_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.image_tracker_enabled_set(obj, msg.bool());\n                    break;\n                }\n                case 19: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let handle = this._impl.face_tracker_create(arg_pipeline);\n                    this._face_tracker_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_face_tracker_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 20: {\n                    let clientId = msg.type();\n                    let obj = this._face_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_tracker_destroy(obj);\n                    this._face_tracker_by_instance.delete(clientId);\n                    break;\n                }\n                case 21: {\n                    let clientId = msg.type();\n                    let obj = this._face_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_tracker_model_load_from_memory(obj, msg.dataWithLength());\n                    break;\n                }\n                case 22: {\n                    let clientId = msg.type();\n                    let obj = this._face_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_tracker_enabled_set(obj, msg.bool());\n                    break;\n                }\n                case 23: {\n                    let clientId = msg.type();\n                    let obj = this._face_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_tracker_max_faces_set(obj, msg.int());\n                    break;\n                }\n                case 24: {\n                    let clientId = msg.type();\n                    let handle = this._impl.face_mesh_create();\n                    this._face_mesh_by_instance.set(clientId, handle);\n                    break;\n                }\n                case 25: {\n                    let clientId = msg.type();\n                    let obj = this._face_mesh_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_mesh_destroy(obj);\n                    this._face_mesh_by_instance.delete(clientId);\n                    break;\n                }\n                case 31: {\n                    let clientId = msg.type();\n                    let arg_landmark = msg.faceLandmarkName();\n                    let handle = this._impl.face_landmark_create(arg_landmark);\n                    this._face_landmark_by_instance.set(clientId, handle);\n                    break;\n                }\n                case 32: {\n                    let clientId = msg.type();\n                    let obj = this._face_landmark_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_landmark_destroy(obj);\n                    this._face_landmark_by_instance.delete(clientId);\n                    break;\n                }\n                case 15: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let handle = this._impl.barcode_finder_create(arg_pipeline);\n                    this._barcode_finder_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_barcode_finder_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 16: {\n                    let clientId = msg.type();\n                    let obj = this._barcode_finder_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.barcode_finder_destroy(obj);\n                    this._barcode_finder_by_instance.delete(clientId);\n                    break;\n                }\n                case 17: {\n                    let clientId = msg.type();\n                    let obj = this._barcode_finder_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.barcode_finder_enabled_set(obj, msg.bool());\n                    break;\n                }\n                case 18: {\n                    let clientId = msg.type();\n                    let obj = this._barcode_finder_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.barcode_finder_formats_set(obj, msg.barcodeFormat());\n                    break;\n                }\n                case 5: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let handle = this._impl.instant_world_tracker_create(arg_pipeline);\n                    this._instant_world_tracker_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_instant_world_tracker_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 14: {\n                    let clientId = msg.type();\n                    let obj = this._instant_world_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.instant_world_tracker_destroy(obj);\n                    this._instant_world_tracker_by_instance.delete(clientId);\n                    break;\n                }\n                case 6: {\n                    let clientId = msg.type();\n                    let obj = this._instant_world_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.instant_world_tracker_enabled_set(obj, msg.bool());\n                    break;\n                }\n                case 7: {\n                    let clientId = msg.type();\n                    let obj = this._instant_world_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.instant_world_tracker_anchor_pose_set_from_camera_offset(obj, msg.float(), msg.float(), msg.float(), msg.instantTrackerTransformOrientation());\n                    break;\n                }\n            }\n        });\n    }\n    exploreState() {\n        for (let [k, v] of this._pipeline_by_instance) {\n            let pipeline = this._pipeline_id_by_pipeline_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(7, msg => {\n                msg.type(k);\n                msg.int(this._impl.pipeline_frame_number(v));\n            });\n            serializer.sendMessage(6, msg => {\n                msg.type(k);\n                msg.cameraModel(this._impl.pipeline_camera_model(v));\n            });\n            serializer.sendMessage(5, msg => {\n                msg.type(k);\n                msg.int(this._impl.pipeline_camera_frame_user_data(v));\n            });\n            serializer.sendMessage(11, msg => {\n                msg.type(k);\n                msg.matrix4x4(this._impl.pipeline_camera_frame_camera_attitude(v));\n            });\n        }\n        for (let [k, v] of this._camera_source_by_instance) {\n            let pipeline = this._pipeline_id_by_camera_source_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n        }\n        for (let [k, v] of this._image_tracker_by_instance) {\n            let pipeline = this._pipeline_id_by_image_tracker_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(18, msg => {\n                msg.type(k);\n                msg.int(this._impl.image_tracker_target_loaded_version(v));\n            });\n            serializer.sendMessage(20, msg => {\n                msg.type(k);\n                msg.int(this._impl.image_tracker_target_count(v));\n            });\n            serializer.sendMessage(1, msg => {\n                msg.type(k);\n                msg.int(this._impl.image_tracker_anchor_count(v));\n            });\n            for (let i = 0; i < this._impl.image_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(2, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.string(this._impl.image_tracker_anchor_id(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.image_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(3, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.matrix4x4(this._impl.image_tracker_anchor_pose_raw(v, i));\n                });\n            }\n        }\n        for (let [k, v] of this._face_tracker_by_instance) {\n            let pipeline = this._pipeline_id_by_face_tracker_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(17, msg => {\n                msg.type(k);\n                msg.int(this._impl.face_tracker_model_loaded_version(v));\n            });\n            serializer.sendMessage(12, msg => {\n                msg.type(k);\n                msg.int(this._impl.face_tracker_anchor_count(v));\n            });\n            for (let i = 0; i < this._impl.face_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(13, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.string(this._impl.face_tracker_anchor_id(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.face_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(14, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.matrix4x4(this._impl.face_tracker_anchor_pose_raw(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.face_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(15, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.identityCoefficients(this._impl.face_tracker_anchor_identity_coefficients(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.face_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(16, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.expressionCoefficients(this._impl.face_tracker_anchor_expression_coefficients(v, i));\n                });\n            }\n        }\n        for (let [k, v] of this._face_mesh_by_instance) {\n            let pipeline = this._pipeline_id_by_face_mesh_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n        }\n        for (let [k, v] of this._face_landmark_by_instance) {\n            let pipeline = this._pipeline_id_by_face_landmark_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n        }\n        for (let [k, v] of this._barcode_finder_by_instance) {\n            let pipeline = this._pipeline_id_by_barcode_finder_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(8, msg => {\n                msg.type(k);\n                msg.int(this._impl.barcode_finder_found_number(v));\n            });\n            for (let i = 0; i < this._impl.barcode_finder_found_number(v); i++) {\n                serializer.sendMessage(9, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.string(this._impl.barcode_finder_found_text(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.barcode_finder_found_number(v); i++) {\n                serializer.sendMessage(10, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.barcodeFormat(this._impl.barcode_finder_found_format(v, i));\n                });\n            }\n        }\n        for (let [k, v] of this._instant_world_tracker_by_instance) {\n            let pipeline = this._pipeline_id_by_instant_world_tracker_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(4, msg => {\n                msg.type(k);\n                msg.matrix4x4(this._impl.instant_world_tracker_anchor_pose_raw(v));\n            });\n        }\n    }\n}\nexports.zappar_server = zappar_server;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/gen/zappar-server.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/messages.js":
/*!********************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/messages.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MsgManager = void 0;\nconst event_1 = __webpack_require__(/*! ./event */ \"./node_modules/@zappar/zappar-cv/lib/event.js\");\nclass MsgManager {\n    constructor() {\n        this.onOutgoingMessage = new event_1.Event();\n        this.onIncomingMessage = new event_1.Event1();\n        this._outgoingMessages = [];\n    }\n    postIncomingMessage(msg) {\n        this.onIncomingMessage.emit(msg);\n    }\n    postOutgoingMessage(msg, trans) {\n        this._outgoingMessages.push({\n            msg: msg,\n            transferables: trans\n        });\n        this.onOutgoingMessage.emit();\n    }\n    getOutgoingMessages() {\n        let ret = this._outgoingMessages;\n        this._outgoingMessages = [];\n        return ret;\n    }\n}\nexports.MsgManager = MsgManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL21lc3NhZ2VzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHphcHBhci96YXBwYXItdGhyZWVqcy8uL25vZGVfbW9kdWxlcy9AemFwcGFyL3phcHBhci1jdi9saWIvbWVzc2FnZXMuanM/ODVkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXNnTWFuYWdlciA9IHZvaWQgMDtcbmNvbnN0IGV2ZW50XzEgPSByZXF1aXJlKFwiLi9ldmVudFwiKTtcbmNsYXNzIE1zZ01hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLm9uT3V0Z29pbmdNZXNzYWdlID0gbmV3IGV2ZW50XzEuRXZlbnQoKTtcbiAgICAgICAgdGhpcy5vbkluY29taW5nTWVzc2FnZSA9IG5ldyBldmVudF8xLkV2ZW50MSgpO1xuICAgICAgICB0aGlzLl9vdXRnb2luZ01lc3NhZ2VzID0gW107XG4gICAgfVxuICAgIHBvc3RJbmNvbWluZ01lc3NhZ2UobXNnKSB7XG4gICAgICAgIHRoaXMub25JbmNvbWluZ01lc3NhZ2UuZW1pdChtc2cpO1xuICAgIH1cbiAgICBwb3N0T3V0Z29pbmdNZXNzYWdlKG1zZywgdHJhbnMpIHtcbiAgICAgICAgdGhpcy5fb3V0Z29pbmdNZXNzYWdlcy5wdXNoKHtcbiAgICAgICAgICAgIG1zZzogbXNnLFxuICAgICAgICAgICAgdHJhbnNmZXJhYmxlczogdHJhbnNcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub25PdXRnb2luZ01lc3NhZ2UuZW1pdCgpO1xuICAgIH1cbiAgICBnZXRPdXRnb2luZ01lc3NhZ2VzKCkge1xuICAgICAgICBsZXQgcmV0ID0gdGhpcy5fb3V0Z29pbmdNZXNzYWdlcztcbiAgICAgICAgdGhpcy5fb3V0Z29pbmdNZXNzYWdlcyA9IFtdO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH1cbn1cbmV4cG9ydHMuTXNnTWFuYWdlciA9IE1zZ01hbmFnZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/messages.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/serializer.js":
/*!**********************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/serializer.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MessageSerializer = void 0;\nclass MessageSerializer {\n    constructor(_messageSender) {\n        this._messageSender = _messageSender;\n        this._freeBufferPool = [];\n        this._buffer = new ArrayBuffer(16);\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u8cView = new Uint8ClampedArray(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 1;\n        this._startOffset = -1;\n        this._timeoutSet = false;\n        this._appender = {\n            int: i => this.int(i),\n            bool: i => this.int(i ? 1 : 0),\n            float: i => this.float(i),\n            string: i => this.string(i),\n            dataWithLength: i => this.arrayBuffer(i),\n            type: i => this.int(i),\n            matrix4x4: i => this.float32ArrayBuffer(i),\n            identityCoefficients: i => this.float32ArrayBuffer(i),\n            expressionCoefficients: i => this.float32ArrayBuffer(i),\n            cameraModel: i => this.float32ArrayBuffer(i),\n            timestamp: i => this.double(i),\n            barcodeFormat: i => this.int(i),\n            faceLandmarkName: i => this.int(i),\n            instantTrackerTransformOrientation: i => this.int(i),\n            logLevel: i => this.int(i),\n        };\n        this._freeBufferPool.push(new ArrayBuffer(16));\n        this._freeBufferPool.push(new ArrayBuffer(16));\n    }\n    bufferReturn(ab) {\n        this._freeBufferPool.push(ab);\n    }\n    // public copySerializedData(): ArrayBuffer {\n    //     let data = this._buffer.slice(0, this._offset * Int32Array.BYTES_PER_ELEMENT);\n    //     this._offset = 0;\n    //     this._startOffset = -1;\n    //     return data;\n    // }\n    _ensureArrayBuffer(incremental) {\n        let requirement = (this._offset + incremental + 8) * 4;\n        if (this._buffer && this._buffer.byteLength >= requirement)\n            return;\n        let newBuffer = undefined;\n        // for (let i = 0; i < this._freeBufferPool.length; i++) {\n        //     if (this._freeBufferPool[i].byteLength > requirement) {\n        //         newBuffer = this._freeBufferPool[i];\n        //         this._freeBufferPool.splice(i, 1);\n        //         break;\n        //     }\n        // }\n        if (!newBuffer) {\n            let nextPow2 = requirement;\n            nextPow2--;\n            nextPow2 |= nextPow2 >> 1;\n            nextPow2 |= nextPow2 >> 2;\n            nextPow2 |= nextPow2 >> 4;\n            nextPow2 |= nextPow2 >> 8;\n            nextPow2 |= nextPow2 >> 16;\n            nextPow2++;\n            newBuffer = new ArrayBuffer(nextPow2);\n        }\n        let oldView = this._buffer ? this._i32View : undefined;\n        this._buffer = newBuffer;\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u8cView = new Uint8ClampedArray(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        if (oldView)\n            this._i32View.set(oldView.subarray(0, this._offset));\n        // this._offset = 1; // First int is whole length\n        // this._startOffset = -1;\n    }\n    sendMessage(messageId, cb) {\n        this._ensureArrayBuffer(4);\n        this._startOffset = this._offset;\n        this._i32View[this._offset + 1] = messageId;\n        this._offset += 2;\n        cb(this._appender);\n        this._i32View[this._startOffset] = this._offset - this._startOffset;\n        this._startOffset = -1;\n        this._sendOneTime();\n    }\n    _sendOneTime() {\n        if (this._timeoutSet === false) {\n            this._timeoutSet = true;\n            setTimeout(() => {\n                this._timeoutSet = false;\n                this._send();\n            }, 0);\n        }\n    }\n    _send() {\n        // Continue filling the current buffer unless have a new buffer to fill\n        if (this._freeBufferPool.length === 0) {\n            this._sendOneTime();\n            return;\n        }\n        this._i32View[0] = this._offset;\n        this._messageSender(this._buffer);\n        this._buffer = undefined;\n        this._buffer = this._freeBufferPool.pop();\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u8cView = new Uint8ClampedArray(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 1;\n        this._startOffset = -1;\n    }\n    int(arg) {\n        this._ensureArrayBuffer(1);\n        this._i32View[this._offset] = arg;\n        this._offset++;\n    }\n    double(arg) {\n        this._ensureArrayBuffer(2);\n        if (this._offset % 2 === 1)\n            this._offset++;\n        this._f64View[this._offset / 2] = arg;\n        this._offset += 2;\n    }\n    float(arg) {\n        this._ensureArrayBuffer(1);\n        this._f32View[this._offset] = arg;\n        this._offset++;\n    }\n    int32Array(args) {\n        this._ensureArrayBuffer(args.length);\n        for (let i = 0; i < args.length; ++i) {\n            this._i32View[this._offset + i] = args[i];\n        }\n        this._offset += args.length;\n    }\n    float32Array(args) {\n        this._ensureArrayBuffer(args.length);\n        for (let i = 0; i < args.length; ++i) {\n            this._f32View[this._offset + i] = args[i];\n        }\n        this._offset += args.length;\n    }\n    booleanArray(args) {\n        this._ensureArrayBuffer(args.length);\n        for (let i = 0; i < args.length; ++i) {\n            this._i32View[this._offset + i] = args[i] ? 1 : 0;\n        }\n        this._offset += args.length;\n    }\n    uint8ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.byteLength;\n        this._offset++;\n        this._u8View.set(data, this._offset * 4);\n        // Update the int32 offset\n        this._offset += (data.byteLength >> 2);\n        if ((data.byteLength & 3) !== 0)\n            this._offset++;\n    }\n    arrayBuffer(data) {\n        let view = new Uint8Array(data);\n        this.uint8ArrayBuffer(view);\n    }\n    uint8ClampedArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.byteLength;\n        this._offset++;\n        this._u8cView.set(data, this._offset * 4);\n        // Update the int32 offset\n        this._offset += (data.byteLength >> 2);\n        if ((data.byteLength & 3) !== 0)\n            this._offset++;\n    }\n    float32ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.length;\n        this._offset++;\n        this._f32View.set(data, this._offset);\n        this._offset += data.length;\n    }\n    uint16ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.length;\n        this._offset++;\n        let u16Offset = this._offset * 2;\n        this._u16View.set(data, u16Offset);\n        // Update the int32 offset\n        this._offset += (data.length >> 1);\n        if ((data.length & 1) !== 0)\n            this._offset++;\n    }\n    int32ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.length;\n        this._offset++;\n        this._i32View.set(data, this._offset);\n        this._offset += data.length;\n    }\n    uint32ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.length;\n        this._offset++;\n        this._u32View.set(data, this._offset);\n        this._offset += data.length;\n    }\n    string(data) {\n        let encoder = new TextEncoder();\n        let res = encoder.encode(data);\n        this._ensureArrayBuffer(res.byteLength / 4);\n        this._i32View[this._offset] = res.byteLength;\n        this._offset++;\n        this._u8View.set(res, this._offset * 4);\n        // Update the int32 offset\n        this._offset += (res.byteLength >> 2);\n        if ((res.byteLength & 3) !== 0)\n            this._offset++;\n    }\n}\nexports.MessageSerializer = MessageSerializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/serializer.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/worker-server.js":
/*!*************************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/worker-server.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.launchWorkerServer = exports.messageManager = void 0;\nconst ZNM = __webpack_require__(/*! ./zcv */ \"./node_modules/@zappar/zappar-cv/lib/zcv.js\");\nconst zappar_cwrap_1 = __webpack_require__(/*! ./gen/zappar-cwrap */ \"./node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js\");\nconst zappar_server_1 = __webpack_require__(/*! ./gen/zappar-server */ \"./node_modules/@zappar/zappar-cv/lib/gen/zappar-server.js\");\nconst messages_1 = __webpack_require__(/*! ./messages */ \"./node_modules/@zappar/zappar-cv/lib/messages.js\");\nconst gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nexports.messageManager = new messages_1.MsgManager();\nfunction launchWorkerServer(wasmUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let mod = ZNM.default({\n            locateFile: (path, prefix) => {\n                if (path.endsWith(\"zcv.wasm\")) {\n                    return wasmUrl;\n                }\n                return prefix + path;\n            },\n            onRuntimeInitialized: () => {\n                let r = zappar_cwrap_1.getRuntimeObject(mod);\n                let server = new zappar_server_1.zappar_server(r, (pipelineId, ab) => {\n                    exports.messageManager.postOutgoingMessage({\n                        p: pipelineId,\n                        t: \"zappar\",\n                        d: ab\n                    }, [ab]);\n                });\n                exports.messageManager.postOutgoingMessage(\"loaded\", []);\n                exports.messageManager.onIncomingMessage.bind((msg) => {\n                    var _a;\n                    switch (msg.t) {\n                        case \"zappar\":\n                            server.processBuffer(msg.d);\n                            exports.messageManager.postOutgoingMessage({ t: \"buf\", d: msg.d }, [msg.d]);\n                            break;\n                        case \"buf\":\n                            (_a = server.serializersByPipelineId.get(msg.p)) === null || _a === void 0 ? void 0 : _a.bufferReturn(msg.d);\n                            break;\n                        case \"cameraFrameC2S\":\n                            let msgt = msg;\n                            // PROCESS DATA\n                            let cameraToDeviceTransform = gl_matrix_1.mat4.create();\n                            if (msgt.userFacing) {\n                                gl_matrix_1.mat4.fromScaling(cameraToDeviceTransform, [-1, 1, -1]);\n                            }\n                            let pipeline = server._pipeline_by_instance.get(msgt.p);\n                            if (pipeline) {\n                                r.pipeline_camera_frame_submit(pipeline, msgt.d, msgt.width, msgt.height, msgt.token, cameraToDeviceTransform);\n                                r.pipeline_frame_update(pipeline);\n                                server.exploreState();\n                            }\n                            let ret = {\n                                token: msgt.token,\n                                d: msgt.d,\n                                p: msgt.p,\n                                t: \"cameraFrameRecycleS2C\"\n                            };\n                            exports.messageManager.postOutgoingMessage(ret, [msgt.d]);\n                            break;\n                    }\n                });\n            }\n        });\n    });\n}\nexports.launchWorkerServer = launchWorkerServer;\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL3dvcmtlci1zZXJ2ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AemFwcGFyL3phcHBhci10aHJlZWpzLy4vbm9kZV9tb2R1bGVzL0B6YXBwYXIvemFwcGFyLWN2L2xpYi93b3JrZXItc2VydmVyLmpzP2M1MWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubGF1bmNoV29ya2VyU2VydmVyID0gZXhwb3J0cy5tZXNzYWdlTWFuYWdlciA9IHZvaWQgMDtcbmNvbnN0IFpOTSA9IHJlcXVpcmUoXCIuL3pjdlwiKTtcbmNvbnN0IHphcHBhcl9jd3JhcF8xID0gcmVxdWlyZShcIi4vZ2VuL3phcHBhci1jd3JhcFwiKTtcbmNvbnN0IHphcHBhcl9zZXJ2ZXJfMSA9IHJlcXVpcmUoXCIuL2dlbi96YXBwYXItc2VydmVyXCIpO1xuY29uc3QgbWVzc2FnZXNfMSA9IHJlcXVpcmUoXCIuL21lc3NhZ2VzXCIpO1xuY29uc3QgZ2xfbWF0cml4XzEgPSByZXF1aXJlKFwiZ2wtbWF0cml4XCIpO1xuZXhwb3J0cy5tZXNzYWdlTWFuYWdlciA9IG5ldyBtZXNzYWdlc18xLk1zZ01hbmFnZXIoKTtcbmZ1bmN0aW9uIGxhdW5jaFdvcmtlclNlcnZlcih3YXNtVXJsKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgbGV0IG1vZCA9IFpOTS5kZWZhdWx0KHtcbiAgICAgICAgICAgIGxvY2F0ZUZpbGU6IChwYXRoLCBwcmVmaXgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocGF0aC5lbmRzV2l0aChcInpjdi53YXNtXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB3YXNtVXJsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcHJlZml4ICsgcGF0aDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblJ1bnRpbWVJbml0aWFsaXplZDogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCByID0gemFwcGFyX2N3cmFwXzEuZ2V0UnVudGltZU9iamVjdChtb2QpO1xuICAgICAgICAgICAgICAgIGxldCBzZXJ2ZXIgPSBuZXcgemFwcGFyX3NlcnZlcl8xLnphcHBhcl9zZXJ2ZXIociwgKHBpcGVsaW5lSWQsIGFiKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGV4cG9ydHMubWVzc2FnZU1hbmFnZXIucG9zdE91dGdvaW5nTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBwOiBwaXBlbGluZUlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdDogXCJ6YXBwYXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGQ6IGFiXG4gICAgICAgICAgICAgICAgICAgIH0sIFthYl0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGV4cG9ydHMubWVzc2FnZU1hbmFnZXIucG9zdE91dGdvaW5nTWVzc2FnZShcImxvYWRlZFwiLCBbXSk7XG4gICAgICAgICAgICAgICAgZXhwb3J0cy5tZXNzYWdlTWFuYWdlci5vbkluY29taW5nTWVzc2FnZS5iaW5kKChtc2cpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKG1zZy50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiemFwcGFyXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyLnByb2Nlc3NCdWZmZXIobXNnLmQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cG9ydHMubWVzc2FnZU1hbmFnZXIucG9zdE91dGdvaW5nTWVzc2FnZSh7IHQ6IFwiYnVmXCIsIGQ6IG1zZy5kIH0sIFttc2cuZF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImJ1ZlwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChfYSA9IHNlcnZlci5zZXJpYWxpemVyc0J5UGlwZWxpbmVJZC5nZXQobXNnLnApKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYnVmZmVyUmV0dXJuKG1zZy5kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJjYW1lcmFGcmFtZUMyU1wiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtc2d0ID0gbXNnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFBST0NFU1MgREFUQVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjYW1lcmFUb0RldmljZVRyYW5zZm9ybSA9IGdsX21hdHJpeF8xLm1hdDQuY3JlYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1zZ3QudXNlckZhY2luZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnbF9tYXRyaXhfMS5tYXQ0LmZyb21TY2FsaW5nKGNhbWVyYVRvRGV2aWNlVHJhbnNmb3JtLCBbLTEsIDEsIC0xXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwaXBlbGluZSA9IHNlcnZlci5fcGlwZWxpbmVfYnlfaW5zdGFuY2UuZ2V0KG1zZ3QucCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBpcGVsaW5lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIucGlwZWxpbmVfY2FtZXJhX2ZyYW1lX3N1Ym1pdChwaXBlbGluZSwgbXNndC5kLCBtc2d0LndpZHRoLCBtc2d0LmhlaWdodCwgbXNndC50b2tlbiwgY2FtZXJhVG9EZXZpY2VUcmFuc2Zvcm0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByLnBpcGVsaW5lX2ZyYW1lX3VwZGF0ZShwaXBlbGluZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlci5leHBsb3JlU3RhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJldCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW46IG1zZ3QudG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ6IG1zZ3QuZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcDogbXNndC5wLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0OiBcImNhbWVyYUZyYW1lUmVjeWNsZVMyQ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBvcnRzLm1lc3NhZ2VNYW5hZ2VyLnBvc3RPdXRnb2luZ01lc3NhZ2UocmV0LCBbbXNndC5kXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5leHBvcnRzLmxhdW5jaFdvcmtlclNlcnZlciA9IGxhdW5jaFdvcmtlclNlcnZlcjtcbjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/worker-server.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/worker.js":
/*!******************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/worker.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst worker_server_1 = __webpack_require__(/*! ./worker-server */ \"./node_modules/@zappar/zappar-cv/lib/worker-server.js\");\nconst ctx = self;\nworker_server_1.messageManager.onOutgoingMessage.bind(() => {\n    let msgs = worker_server_1.messageManager.getOutgoingMessages();\n    for (let msg of msgs) {\n        ctx.postMessage(msg.msg, msg.transferables);\n    }\n});\nlet launchHandler = (evt) => {\n    if (evt && evt.data && evt.data.t === \"wasm\") {\n        let url = location.href.startsWith(\"blob\") ? evt.data.url : __webpack_require__(/*! ./zcv.wasm */ \"./node_modules/@zappar/zappar-cv/lib/zcv.wasm\");\n        if (url.default)\n            url = url.default;\n        worker_server_1.launchWorkerServer(url);\n        ctx.removeEventListener(\"message\", launchHandler);\n    }\n};\nctx.addEventListener(\"message\", launchHandler);\nctx.addEventListener(\"message\", evt => {\n    worker_server_1.messageManager.postIncomingMessage(evt.data);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL3dvcmtlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0B6YXBwYXIvemFwcGFyLXRocmVlanMvLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL3dvcmtlci5qcz8zMmM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgd29ya2VyX3NlcnZlcl8xID0gcmVxdWlyZShcIi4vd29ya2VyLXNlcnZlclwiKTtcbmNvbnN0IGN0eCA9IHNlbGY7XG53b3JrZXJfc2VydmVyXzEubWVzc2FnZU1hbmFnZXIub25PdXRnb2luZ01lc3NhZ2UuYmluZCgoKSA9PiB7XG4gICAgbGV0IG1zZ3MgPSB3b3JrZXJfc2VydmVyXzEubWVzc2FnZU1hbmFnZXIuZ2V0T3V0Z29pbmdNZXNzYWdlcygpO1xuICAgIGZvciAobGV0IG1zZyBvZiBtc2dzKSB7XG4gICAgICAgIGN0eC5wb3N0TWVzc2FnZShtc2cubXNnLCBtc2cudHJhbnNmZXJhYmxlcyk7XG4gICAgfVxufSk7XG5sZXQgbGF1bmNoSGFuZGxlciA9IChldnQpID0+IHtcbiAgICBpZiAoZXZ0ICYmIGV2dC5kYXRhICYmIGV2dC5kYXRhLnQgPT09IFwid2FzbVwiKSB7XG4gICAgICAgIGxldCB1cmwgPSBsb2NhdGlvbi5ocmVmLnN0YXJ0c1dpdGgoXCJibG9iXCIpID8gZXZ0LmRhdGEudXJsIDogcmVxdWlyZShcIi4vemN2Lndhc21cIik7XG4gICAgICAgIGlmICh1cmwuZGVmYXVsdClcbiAgICAgICAgICAgIHVybCA9IHVybC5kZWZhdWx0O1xuICAgICAgICB3b3JrZXJfc2VydmVyXzEubGF1bmNoV29ya2VyU2VydmVyKHVybCk7XG4gICAgICAgIGN0eC5yZW1vdmVFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBsYXVuY2hIYW5kbGVyKTtcbiAgICB9XG59O1xuY3R4LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGxhdW5jaEhhbmRsZXIpO1xuY3R4LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGV2dCA9PiB7XG4gICAgd29ya2VyX3NlcnZlcl8xLm1lc3NhZ2VNYW5hZ2VyLnBvc3RJbmNvbWluZ01lc3NhZ2UoZXZ0LmRhdGEpO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/worker.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/zcv.js":
/*!***************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/zcv.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\nvar ZCV = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(ZCV) {\n  ZCV = ZCV || {};\n\nvar c;c||(c=typeof ZCV !== 'undefined' ? ZCV : {});var aa={},l;for(l in c)c.hasOwnProperty(l)&&(aa[l]=c[l]);c.arguments=[];c.thisProgram=\"./this.program\";c.quit=function(a,b){throw b;};c.preRun=[];c.postRun=[];var n=\"\";function ba(a){return c.locateFile?c.locateFile(a,n):n+a}n=self.location.href;_scriptDir&&(n=_scriptDir);0!==n.indexOf(\"blob:\")?n=n.substr(0,n.lastIndexOf(\"/\")+1):n=\"\";c.read=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText};\nc.readBinary=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)};c.readAsync=function(a,b,d){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){200==e.status||0==e.status&&e.response?b(e.response):d()};e.onerror=d;e.send(null)};c.setWindowTitle=function(a){document.title=a};\nvar ca=c.print||(\"undefined\"!==typeof console?console.log.bind(console):\"undefined\"!==typeof print?print:null),p=c.printErr||(\"undefined\"!==typeof printErr?printErr:\"undefined\"!==typeof console&&console.warn.bind(console)||ca);for(l in aa)aa.hasOwnProperty(l)&&(c[l]=aa[l]);aa=void 0;function da(a){var b=u;u=u+a+15&-16;return b}function ea(a){var b=v[x>>2];a=b+a+15&-16;v[x>>2]=a;return a>=y&&!fa()?(v[x>>2]=b,0):b}function ha(a){var b;b||(b=16);return Math.ceil(a/b)*b}\nfunction ia(a){ja||(ja={});ja[a]||(ja[a]=1,p(a))}var ja,ka={\"f64-rem\":function(a,b){return a%b},\"debugger\":function(){debugger}},la={};function ma(a){if(a){assert(\"vi\");la.vi||(la.vi={});var b=la.vi;b[a]||(b[a]=function(b){return na(\"vi\",a,[b])});return b[a]}}function na(a,b,d){return d&&d.length?c[\"dynCall_\"+a].apply(null,[b].concat(d)):c[\"dynCall_\"+a].call(null,b)}var pa=!1;function assert(a,b){a||z(\"Assertion failed: \"+b)}\nfunction qa(a){var b=c[\"_\"+a];assert(b,\"Cannot call unknown function \"+a+\", make sure it is exported\");return b}var sa={stackSave:function(){B()},stackRestore:function(){C()},arrayToC:function(a){var b=ra(a.length);D.set(a,b);return b},stringToC:function(a){var b=0;if(null!==a&&void 0!==a&&0!==a){var d=(a.length<<2)+1;b=ra(d);E(a,G,b,d)}return b}},ta={string:sa.stringToC,array:sa.arrayToC};\nfunction H(a){var b;if(0===b||!a)return\"\";for(var d=0,e,f=0;;){e=G[a+f>>0];d|=e;if(0==e&&!b)break;f++;if(b&&f==b)break}b||(b=f);e=\"\";if(128>d){for(;0<b;)d=String.fromCharCode.apply(String,G.subarray(a,a+Math.min(b,1024))),e=e?e+d:d,a+=1024,b-=1024;return e}return ua(a)}var va=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction wa(a,b){for(var d=b;a[d];)++d;if(16<d-b&&a.subarray&&va)return va.decode(a.subarray(b,d));for(d=\"\";;){var e=a[b++];if(!e)return d;if(e&128){var f=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var g=a[b++]&63;if(224==(e&240))e=(e&15)<<12|f<<6|g;else{var h=a[b++]&63;if(240==(e&248))e=(e&7)<<18|f<<12|g<<6|h;else{var k=a[b++]&63;if(248==(e&252))e=(e&3)<<24|f<<18|g<<12|h<<6|k;else{var m=a[b++]&63;e=(e&1)<<30|f<<24|g<<18|h<<12|k<<6|m}}}65536>e?d+=String.fromCharCode(e):(e-=\n65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}}function ua(a){return wa(G,a)}\nfunction E(a,b,d,e){if(!(0<e))return 0;var f=d;e=d+e-1;for(var g=0;g<a.length;++g){var h=a.charCodeAt(g);if(55296<=h&&57343>=h){var k=a.charCodeAt(++g);h=65536+((h&1023)<<10)|k&1023}if(127>=h){if(d>=e)break;b[d++]=h}else{if(2047>=h){if(d+1>=e)break;b[d++]=192|h>>6}else{if(65535>=h){if(d+2>=e)break;b[d++]=224|h>>12}else{if(2097151>=h){if(d+3>=e)break;b[d++]=240|h>>18}else{if(67108863>=h){if(d+4>=e)break;b[d++]=248|h>>24}else{if(d+5>=e)break;b[d++]=252|h>>30;b[d++]=128|h>>24&63}b[d++]=128|h>>18&63}b[d++]=\n128|h>>12&63}b[d++]=128|h>>6&63}b[d++]=128|h&63}}b[d]=0;return d-f}function xa(a){for(var b=0,d=0;d<a.length;++d){var e=a.charCodeAt(d);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++d)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:2097151>=e?b+4:67108863>=e?b+5:b+6}return b}\"undefined\"!==typeof TextDecoder&&new TextDecoder(\"utf-16le\");var ya=65536,za=16777216,Aa=16777216;function Ba(a,b){0<a%b&&(a+=b-a%b);return a}var buffer,D,G,Ca,J,v,K,Da,Ea;\nfunction Fa(){c.HEAP8=D=new Int8Array(buffer);c.HEAP16=Ca=new Int16Array(buffer);c.HEAP32=v=new Int32Array(buffer);c.HEAPU8=G=new Uint8Array(buffer);c.HEAPU16=J=new Uint16Array(buffer);c.HEAPU32=K=new Uint32Array(buffer);c.HEAPF32=Da=new Float32Array(buffer);c.HEAPF64=Ea=new Float64Array(buffer)}var Ga,u,Ha,Ia,Ja,Ka,La,x;Ga=u=Ia=Ja=Ka=La=x=0;Ha=!1;c.reallocBuffer||(c.reallocBuffer=function(a){try{var b=D;var d=new ArrayBuffer(a);(new Int8Array(d)).set(b)}catch(e){return!1}return Ma(d)?d:!1});\nfunction fa(){var a=c.usingWasm?ya:za,b=2147483648-a;if(v[x>>2]>b)return!1;var d=y;for(y=Math.max(y,Aa);y<v[x>>2];)536870912>=y?y=Ba(2*y,a):y=Math.min(Ba((3*y+2147483648)/4,a),b);a=c.reallocBuffer(y);if(!a||a.byteLength!=y)return y=d,!1;c.buffer=buffer=a;Fa();return!0}var Na;try{Na=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get),Na(new ArrayBuffer(4))}catch(a){Na=function(b){return b.byteLength}}\nvar Oa=c.TOTAL_STACK||5242880,y=c.TOTAL_MEMORY||16777216;y<Oa&&p(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+y+\"! (TOTAL_STACK=\"+Oa+\")\");c.buffer?buffer=c.buffer:(\"object\"===typeof WebAssembly&&\"function\"===typeof WebAssembly.Memory?(c.wasmMemory=new WebAssembly.Memory({initial:y/ya}),buffer=c.wasmMemory.buffer):buffer=new ArrayBuffer(y),c.buffer=buffer);Fa();\nfunction Pa(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b();else{var d=b.g;\"number\"===typeof d?void 0===b.P?c.dynCall_v(d):c.dynCall_vi(d,b.P):d(void 0===b.P?null:b.P)}}}var Qa=[],Ra=[],Sa=[],Ta=[],Ua=[],Va=!1;function Wa(){var a=c.preRun.shift();Qa.unshift(a)}var Xa=Math.abs,Ya=Math.ceil,Za=Math.floor,$a=Math.min,ab=0,bb=null,cb=null;function db(){ab++;c.monitorRunDependencies&&c.monitorRunDependencies(ab)}\nfunction eb(){ab--;c.monitorRunDependencies&&c.monitorRunDependencies(ab);if(0==ab&&(null!==bb&&(clearInterval(bb),bb=null),cb)){var a=cb;cb=null;a()}}c.preloadedImages={};c.preloadedAudios={};function fb(a){return String.prototype.startsWith?a.startsWith(\"data:application/octet-stream;base64,\"):0===a.indexOf(\"data:application/octet-stream;base64,\")}\n(function(){function a(){try{if(c.wasmBinary)return new Uint8Array(c.wasmBinary);if(c.readBinary)return c.readBinary(f);throw\"both async and sync fetching of the wasm failed\";}catch(r){z(r)}}function b(){return c.wasmBinary||\"function\"!==typeof fetch?new Promise(function(b){b(a())}):fetch(f,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+f+\"'\";return a.arrayBuffer()}).catch(function(){return a()})}function d(a){function d(a){k=a.exports;if(k.memory){a=\nk.memory;var b=c.buffer;a.byteLength<b.byteLength&&p(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\");b=new Int8Array(b);(new Int8Array(a)).set(b);c.buffer=buffer=a;Fa()}c.asm=k;c.usingWasm=!0;eb()}function e(a){d(a.instance)}function g(a){b().then(function(a){return WebAssembly.instantiate(a,h)}).then(a,function(a){p(\"failed to asynchronously prepare wasm: \"+a);z(a)})}if(\"object\"!==typeof WebAssembly)return p(\"no native wasm support detected\"),\n!1;if(!(c.wasmMemory instanceof WebAssembly.Memory))return p(\"no native wasm Memory in use\"),!1;a.memory=c.wasmMemory;h.global={NaN:NaN,Infinity:Infinity};h[\"global.Math\"]=Math;h.env=a;db();if(c.instantiateWasm)try{return c.instantiateWasm(h,d)}catch(F){return p(\"Module.instantiateWasm callback failed with error: \"+F),!1}c.wasmBinary||\"function\"!==typeof WebAssembly.instantiateStreaming||fb(f)||\"function\"!==typeof fetch?g(e):WebAssembly.instantiateStreaming(fetch(f,{credentials:\"same-origin\"}),h).then(e,\nfunction(a){p(\"wasm streaming compile failed: \"+a);p(\"falling back to ArrayBuffer instantiation\");g(e)});return{}}var e=\"zcv.wast\",f=\"zcv.wasm\",g=\"zcv.temp.asm.js\";fb(e)||(e=ba(e));fb(f)||(f=ba(f));fb(g)||(g=ba(g));var h={global:null,env:null,asm2wasm:ka,parent:c},k=null;c.asmPreload=c.asm;var m=c.reallocBuffer;c.reallocBuffer=function(a){if(\"asmjs\"===q)var b=m(a);else a:{a=Ba(a,c.usingWasm?ya:za);var d=c.buffer.byteLength;if(c.usingWasm)try{b=-1!==c.wasmMemory.grow((a-d)/65536)?c.buffer=c.wasmMemory.buffer:\nnull;break a}catch(I){b=null;break a}b=void 0}return b};var q=\"\";c.asm=function(a,b){if(!b.table){a=c.wasmTableSize;void 0===a&&(a=1024);var e=c.wasmMaxTableSize;b.table=\"object\"===typeof WebAssembly&&\"function\"===typeof WebAssembly.Table?void 0!==e?new WebAssembly.Table({initial:a,maximum:e,element:\"anyfunc\"}):new WebAssembly.Table({initial:a,element:\"anyfunc\"}):Array(a);c.wasmTable=b.table}b.__memory_base||(b.__memory_base=c.STATIC_BASE);b.__table_base||(b.__table_base=0);b=d(b);assert(b,\"no binaryen method succeeded.\");\nreturn b}})();var gb=[function(){if(self.crypto&&self.crypto.getRandomValues){var a=new Uint32Array(1);self.crypto.getRandomValues(a);return a[0]}return 9007199254740991*Math.random()}];Ga=1024;u=Ga+432608;\nRa.push({g:function(){hb()}},{g:function(){ib()}},{g:function(){jb()}},{g:function(){kb()}},{g:function(){lb()}},{g:function(){mb()}},{g:function(){nb()}},{g:function(){ob()}},{g:function(){pb()}},{g:function(){qb()}},{g:function(){rb()}},{g:function(){sb()}},{g:function(){tb()}},{g:function(){ub()}},{g:function(){vb()}},{g:function(){wb()}},{g:function(){xb()}},{g:function(){yb()}},{g:function(){zb()}},{g:function(){Ab()}},{g:function(){Bb()}});c.STATIC_BASE=Ga;c.STATIC_BUMP=432608;var Cb=u;u+=16;\nvar L={};\nfunction Db(a){if(Db.Da){var b=v[a>>2];var d=v[b>>2]}else Db.Da=!0,L.USER=L.LOGNAME=\"web_user\",L.PATH=\"/\",L.PWD=\"/\",L.HOME=\"/home/web_user\",L.LANG=\"C.UTF-8\",L._=c.thisProgram,d=Ha?Va?M(1024):ea(1024):da(1024),b=Ha?Va?M(256):ea(256):da(256),v[b>>2]=d,v[a>>2]=b;a=[];var e=0,f;for(f in L)if(\"string\"===typeof L[f]){var g=f+\"=\"+L[f];a.push(g);e+=g.length}if(1024<e)throw Error(\"Environment size exceeded TOTAL_ENV_SIZE!\");for(f=0;f<a.length;f++){e=g=a[f];for(var h=d,k=0;k<e.length;++k)D[h++>>0]=e.charCodeAt(k);\nD[h>>0]=0;v[b+4*f>>2]=d;d+=g.length+1}v[b+4*a.length>>2]=0}function O(){z()}function Eb(){return\"undefined\"!==typeof dateNow||self.performance&&self.performance.now}\nvar P={I:1,u:2,Fc:3,Bb:4,M:5,ja:6,Ua:7,Zb:8,B:9,ib:10,fa:11,Pc:11,ya:12,W:13,ub:14,lc:15,ga:16,ha:17,Qc:18,Y:19,Z:20,N:21,i:22,Ub:23,wa:24,D:25,Mc:26,vb:27,hc:28,O:29,Cc:30,Nb:31,vc:32,rb:33,zc:34,cc:42,yb:43,jb:44,Eb:45,Fb:46,Gb:47,Mb:48,Nc:49,Xb:50,Db:51,ob:35,$b:37,$a:52,cb:53,Rc:54,Vb:55,eb:56,fb:57,pb:35,gb:59,jc:60,Yb:61,Jc:62,ic:63,dc:64,ec:65,Bc:66,ac:67,Xa:68,Gc:69,kb:70,wc:71,Pb:72,sb:73,bb:74,qc:76,ab:77,Ac:78,Hb:79,Ib:80,Lb:81,Kb:82,Jb:83,kc:38,ia:39,Qb:36,X:40,rc:95,uc:96,nb:104,Wb:105,\nYa:97,yc:91,oc:88,fc:92,Dc:108,mb:111,Va:98,lb:103,Tb:101,Rb:100,Kc:110,wb:112,xb:113,Ab:115,Za:114,qb:89,Ob:90,xc:93,Ec:94,Wa:99,Sb:102,Cb:106,mc:107,Lc:109,Oc:87,tb:122,Hc:116,pc:95,bc:123,zb:84,sc:75,hb:125,nc:131,tc:130,Ic:86};function Fb(a){c.___errno_location&&(v[c.___errno_location()>>2]=a);return a}function Gb(a,b){if(0===a)a=Date.now();else if(1===a&&Eb())a=O();else return Fb(P.i),-1;v[b>>2]=a/1E3|0;v[b+4>>2]=a%1E3*1E6|0;return 0}var Hb=0,Ib=[],Q={};\nfunction Jb(a){if(!a||Q[a])return a;for(var b in Q){var d=+b;if(Q[d].ka===a)return d}return a}function Kb(a){if(a){var b=Q[a];assert(0<b.J);b.J--;0!==b.J||b.L||(b.oa&&c.dynCall_vi(b.oa,a),delete Q[a],___cxa_free_exception(a))}}function ___cxa_free_exception(a){try{return Lb(a)}catch(b){}}\nfunction Mb(){var a=Ib.pop();a=Jb(a);Q[a].L||(Ib.push(a),Q[a].L=!0);Hb=a;throw a+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\";}\nfunction Nb(){var a=Hb;if(!a)return(Ob(0),0)|0;var b=Q[a],d=b.type;if(!d)return(Ob(0),a)|0;var e=Array.prototype.slice.call(arguments);c.___cxa_is_pointer_type(d);Nb.buffer||(Nb.buffer=M(4));v[Nb.buffer>>2]=a;a=Nb.buffer;for(var f=0;f<e.length;f++)if(e[f]&&c.___cxa_can_catch(e[f],d,a))return a=v[a>>2],b.ka=a,(Ob(e[f]),a)|0;a=v[a>>2];return(Ob(d),a)|0}\nvar Pb={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",\n24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",\n44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",\n65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",\n82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",\n100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",\n122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};function Qb(a,b){for(var d=0,e=a.length-1;0<=e;e--){var f=a[e];\".\"===f?a.splice(e,1):\"..\"===f?(a.splice(e,1),d++):d&&(a.splice(e,1),d--)}if(b)for(;d;d--)a.unshift(\"..\");return a}function Rb(a){var b=\"/\"===a.charAt(0),d=\"/\"===a.substr(-1);(a=Qb(a.split(\"/\").filter(function(a){return!!a}),!b).join(\"/\"))||b||(a=\".\");a&&d&&(a+=\"/\");return(b?\"/\":\"\")+a}\nfunction Sb(a){var b=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(a).slice(1);a=b[0];b=b[1];if(!a&&!b)return\".\";b&&(b=b.substr(0,b.length-1));return a+b}function Tb(a){if(\"/\"===a)return\"/\";var b=a.lastIndexOf(\"/\");return-1===b?a:a.substr(b+1)}\nfunction Ub(){for(var a=\"\",b=!1,d=arguments.length-1;-1<=d&&!b;d--){b=0<=d?arguments[d]:\"/\";if(\"string\"!==typeof b)throw new TypeError(\"Arguments to path.resolve must be strings\");if(!b)return\"\";a=b+\"/\"+a;b=\"/\"===b.charAt(0)}a=Qb(a.split(\"/\").filter(function(a){return!!a}),!b).join(\"/\");return(b?\"/\":\"\")+a||\".\"}var Vb=[];function Wb(a,b){Vb[a]={input:[],output:[],G:b};Xb(a,Yb)}\nvar Yb={open:function(a){var b=Vb[a.node.rdev];if(!b)throw new R(P.Y);a.tty=b;a.seekable=!1},close:function(a){a.tty.G.flush(a.tty)},flush:function(a){a.tty.G.flush(a.tty)},read:function(a,b,d,e){if(!a.tty||!a.tty.G.ra)throw new R(P.ja);for(var f=0,g=0;g<e;g++){try{var h=a.tty.G.ra(a.tty)}catch(k){throw new R(P.M);}if(void 0===h&&0===f)throw new R(P.fa);if(null===h||void 0===h)break;f++;b[d+g]=h}f&&(a.node.timestamp=Date.now());return f},write:function(a,b,d,e){if(!a.tty||!a.tty.G.da)throw new R(P.ja);\nvar f=0;try{if(0===d&&0===e)a.tty.G.flush(a.tty);else for(;f<e;)a.tty.G.da(a.tty,b[d+f]),f++}catch(g){throw new R(P.M);}e&&(a.node.timestamp=Date.now());return f}},ac={ra:function(a){if(!a.input.length){var b=null;\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?(b=window.prompt(\"Input: \"),null!==b&&(b+=\"\\n\")):\"function\"==typeof readline&&(b=readline(),null!==b&&(b+=\"\\n\"));if(!b)return null;a.input=Zb(b,!0)}return a.input.shift()},da:function(a,b){null===b||10===b?(ca(wa(a.output,0)),\na.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(ca(wa(a.output,0)),a.output=[])}},bc={da:function(a,b){null===b||10===b?(p(wa(a.output,0)),a.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(p(wa(a.output,0)),a.output=[])}},S={o:null,A:function(){return S.createNode(null,\"/\",16895,0)},createNode:function(a,b,d,e){if(24576===(d&61440)||4096===(d&61440))throw new R(P.I);S.o||(S.o={dir:{node:{m:S.c.m,s:S.c.s,lookup:S.c.lookup,R:S.c.R,\nrename:S.c.rename,unlink:S.c.unlink,rmdir:S.c.rmdir,readdir:S.c.readdir,symlink:S.c.symlink},stream:{F:S.f.F}},file:{node:{m:S.c.m,s:S.c.s},stream:{F:S.f.F,read:S.f.read,write:S.f.write,la:S.f.la,sa:S.f.sa,T:S.f.T}},link:{node:{m:S.c.m,s:S.c.s,readlink:S.c.readlink},stream:{}},na:{node:{m:S.c.m,s:S.c.s},stream:cc}});d=dc(a,b,d,e);16384===(d.mode&61440)?(d.c=S.o.dir.node,d.f=S.o.dir.stream,d.b={}):32768===(d.mode&61440)?(d.c=S.o.file.node,d.f=S.o.file.stream,d.h=0,d.b=null):40960===(d.mode&61440)?\n(d.c=S.o.link.node,d.f=S.o.link.stream):8192===(d.mode&61440)&&(d.c=S.o.na.node,d.f=S.o.na.stream);d.timestamp=Date.now();a&&(a.b[b]=d);return d},Ea:function(a){if(a.b&&a.b.subarray){for(var b=[],d=0;d<a.h;++d)b.push(a.b[d]);return b}return a.b},Wc:function(a){return a.b?a.b.subarray?a.b.subarray(0,a.h):new Uint8Array(a.b):new Uint8Array},pa:function(a,b){a.b&&a.b.subarray&&b>a.b.length&&(a.b=S.Ea(a),a.h=a.b.length);if(!a.b||a.b.subarray){var d=a.b?a.b.length:0;d>=b||(b=Math.max(b,d*(1048576>d?2:\n1.125)|0),0!=d&&(b=Math.max(b,256)),d=a.b,a.b=new Uint8Array(b),0<a.h&&a.b.set(d.subarray(0,a.h),0))}else for(!a.b&&0<b&&(a.b=[]);a.b.length<b;)a.b.push(0)},Ma:function(a,b){if(a.h!=b)if(0==b)a.b=null,a.h=0;else{if(!a.b||a.b.subarray){var d=a.b;a.b=new Uint8Array(new ArrayBuffer(b));d&&a.b.set(d.subarray(0,Math.min(b,a.h)))}else if(a.b||(a.b=[]),a.b.length>b)a.b.length=b;else for(;a.b.length<b;)a.b.push(0);a.h=b}},c:{m:function(a){var b={};b.dev=8192===(a.mode&61440)?a.id:1;b.ino=a.id;b.mode=a.mode;\nb.nlink=1;b.uid=0;b.gid=0;b.rdev=a.rdev;16384===(a.mode&61440)?b.size=4096:32768===(a.mode&61440)?b.size=a.h:40960===(a.mode&61440)?b.size=a.link.length:b.size=0;b.atime=new Date(a.timestamp);b.mtime=new Date(a.timestamp);b.ctime=new Date(a.timestamp);b.Ca=4096;b.blocks=Math.ceil(b.size/b.Ca);return b},s:function(a,b){void 0!==b.mode&&(a.mode=b.mode);void 0!==b.timestamp&&(a.timestamp=b.timestamp);void 0!==b.size&&S.Ma(a,b.size)},lookup:function(){throw fc[P.u];},R:function(a,b,d,e){return S.createNode(a,\nb,d,e)},rename:function(a,b,d){if(16384===(a.mode&61440)){try{var e=hc(b,d)}catch(g){}if(e)for(var f in e.b)throw new R(P.ia);}delete a.parent.b[a.name];a.name=d;b.b[d]=a;a.parent=b},unlink:function(a,b){delete a.b[b]},rmdir:function(a,b){var d=hc(a,b),e;for(e in d.b)throw new R(P.ia);delete a.b[b]},readdir:function(a){var b=[\".\",\"..\"],d;for(d in a.b)a.b.hasOwnProperty(d)&&b.push(d);return b},symlink:function(a,b,d){a=S.createNode(a,b,41471,0);a.link=d;return a},readlink:function(a){if(40960!==(a.mode&\n61440))throw new R(P.i);return a.link}},f:{read:function(a,b,d,e,f){var g=a.node.b;if(f>=a.node.h)return 0;a=Math.min(a.node.h-f,e);assert(0<=a);if(8<a&&g.subarray)b.set(g.subarray(f,f+a),d);else for(e=0;e<a;e++)b[d+e]=g[f+e];return a},write:function(a,b,d,e,f,g){g=!1;if(!e)return 0;a=a.node;a.timestamp=Date.now();if(b.subarray&&(!a.b||a.b.subarray)){if(g)return a.b=b.subarray(d,d+e),a.h=e;if(0===a.h&&0===f)return a.b=new Uint8Array(b.subarray(d,d+e)),a.h=e;if(f+e<=a.h)return a.b.set(b.subarray(d,\nd+e),f),e}S.pa(a,f+e);if(a.b.subarray&&b.subarray)a.b.set(b.subarray(d,d+e),f);else for(g=0;g<e;g++)a.b[f+g]=b[d+g];a.h=Math.max(a.h,f+e);return e},F:function(a,b,d){1===d?b+=a.position:2===d&&32768===(a.node.mode&61440)&&(b+=a.node.h);if(0>b)throw new R(P.i);return b},la:function(a,b,d){S.pa(a.node,b+d);a.node.h=Math.max(a.node.h,b+d)},sa:function(a,b,d,e,f,g,h){if(32768!==(a.node.mode&61440))throw new R(P.Y);d=a.node.b;if(h&2||d.buffer!==b&&d.buffer!==b.buffer){if(0<f||f+e<a.node.h)d.subarray?d=\nd.subarray(f,f+e):d=Array.prototype.slice.call(d,f,f+e);a=!0;e=M(e);if(!e)throw new R(P.ya);b.set(d,e)}else a=!1,e=d.byteOffset;return{Ka:e,za:a}},T:function(a,b,d,e,f){if(32768!==(a.node.mode&61440))throw new R(P.Y);if(f&2)return 0;S.f.write(a,b,0,e,d,!1);return 0}}};u+=16;u+=16;u+=16;var ic=null,jc={},T=[],kc=1,lc=null,mc=!0,nc={},R=null,fc={};\nfunction oc(a,b){a=Ub(\"/\",a);b=b||{};if(!a)return{path:\"\",node:null};var d={qa:!0,ea:0},e;for(e in d)void 0===b[e]&&(b[e]=d[e]);if(8<b.ea)throw new R(P.X);a=Qb(a.split(\"/\").filter(function(a){return!!a}),!1);var f=ic;d=\"/\";for(e=0;e<a.length;e++){var g=e===a.length-1;if(g&&b.parent)break;f=hc(f,a[e]);d=Rb(d+\"/\"+a[e]);f.S&&(!g||g&&b.qa)&&(f=f.S.root);if(!g||b.aa)for(g=0;40960===(f.mode&61440);)if(f=pc(d),d=Ub(Sb(d),f),f=oc(d,{ea:b.ea}).node,40<g++)throw new R(P.X);}return{path:d,node:f}}\nfunction qc(a){for(var b;;){if(a===a.parent)return a=a.A.ta,b?\"/\"!==a[a.length-1]?a+\"/\"+b:a+b:a;b=b?a.name+\"/\"+b:a.name;a=a.parent}}function rc(a,b){for(var d=0,e=0;e<b.length;e++)d=(d<<5)-d+b.charCodeAt(e)|0;return(a+d>>>0)%lc.length}function sc(a){var b=rc(a.parent.id,a.name);a.Ja=lc[b];lc[b]=a}function hc(a,b){var d;if(d=(d=tc(a,\"x\"))?d:a.c.lookup?0:P.W)throw new R(d,a);for(d=lc[rc(a.id,b)];d;d=d.Ja){var e=d.name;if(d.parent.id===a.id&&e===b)return d}return a.c.lookup(a,b)}\nfunction dc(a,b,d,e){uc||(uc=function(a,b,d,e){a||(a=this);this.parent=a;this.A=a.A;this.S=null;this.id=kc++;this.name=b;this.mode=d;this.c={};this.f={};this.rdev=e},uc.prototype={},Object.defineProperties(uc.prototype,{read:{get:function(){return 365===(this.mode&365)},set:function(a){a?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146===(this.mode&146)},set:function(a){a?this.mode|=146:this.mode&=-147}}}));a=new uc(a,b,d,e);sc(a);return a}\nvar vc={r:0,rs:1052672,\"r+\":2,w:577,wx:705,xw:705,\"w+\":578,\"wx+\":706,\"xw+\":706,a:1089,ax:1217,xa:1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218};function wc(a){var b=[\"r\",\"w\",\"rw\"][a&3];a&512&&(b+=\"w\");return b}function tc(a,b){if(mc)return 0;if(-1===b.indexOf(\"r\")||a.mode&292){if(-1!==b.indexOf(\"w\")&&!(a.mode&146)||-1!==b.indexOf(\"x\")&&!(a.mode&73))return P.W}else return P.W;return 0}function xc(a,b){try{return hc(a,b),P.ha}catch(d){}return tc(a,\"wx\")}\nfunction yc(a){var b=4096;for(a=a||0;a<=b;a++)if(!T[a])return a;throw new R(P.wa);}function zc(a,b){Ac||(Ac=function(){},Ac.prototype={},Object.defineProperties(Ac.prototype,{object:{get:function(){return this.node},set:function(a){this.node=a}}}));var d=new Ac,e;for(e in a)d[e]=a[e];a=d;b=yc(b);a.fd=b;return T[b]=a}var cc={open:function(a){a.f=jc[a.node.rdev].f;a.f.open&&a.f.open(a)},F:function(){throw new R(P.O);}};function Xb(a,b){jc[a]={f:b}}\nfunction Bc(a,b){var d=\"/\"===b,e=!b;if(d&&ic)throw new R(P.ga);if(!d&&!e){var f=oc(b,{qa:!1});b=f.path;f=f.node;if(f.S)throw new R(P.ga);if(16384!==(f.mode&61440))throw new R(P.Z);}b={type:a,$c:{},ta:b,Ia:[]};a=a.A(b);a.A=b;b.root=a;d?ic=a:f&&(f.S=b,f.A&&f.A.Ia.push(b))}function Cc(a,b,d){var e=oc(a,{parent:!0}).node;a=Tb(a);if(!a||\".\"===a||\"..\"===a)throw new R(P.i);var f=xc(e,a);if(f)throw new R(f);if(!e.c.R)throw new R(P.I);return e.c.R(e,a,b,d)}function U(a){Cc(a,16895,0)}\nfunction Dc(a,b,d){\"undefined\"===typeof d&&(d=b,b=438);Cc(a,b|8192,d)}function Ec(a,b){if(!Ub(a))throw new R(P.u);var d=oc(b,{parent:!0}).node;if(!d)throw new R(P.u);b=Tb(b);var e=xc(d,b);if(e)throw new R(e);if(!d.c.symlink)throw new R(P.I);d.c.symlink(d,b,a)}function pc(a){a=oc(a).node;if(!a)throw new R(P.u);if(!a.c.readlink)throw new R(P.i);return Ub(qc(a.parent),a.c.readlink(a))}\nfunction Fc(a,b,d,e){if(\"\"===a)throw new R(P.u);if(\"string\"===typeof b){var f=vc[b];if(\"undefined\"===typeof f)throw Error(\"Unknown file open mode: \"+b);b=f}d=b&64?(\"undefined\"===typeof d?438:d)&4095|32768:0;if(\"object\"===typeof a)var g=a;else{a=Rb(a);try{g=oc(a,{aa:!(b&131072)}).node}catch(k){}}f=!1;if(b&64)if(g){if(b&128)throw new R(P.ha);}else g=Cc(a,d,0),f=!0;if(!g)throw new R(P.u);8192===(g.mode&61440)&&(b&=-513);if(b&65536&&16384!==(g.mode&61440))throw new R(P.Z);if(!f&&(d=g?40960===(g.mode&\n61440)?P.X:16384===(g.mode&61440)&&(\"r\"!==wc(b)||b&512)?P.N:tc(g,wc(b)):P.u))throw new R(d);if(b&512){d=g;var h;\"string\"===typeof d?h=oc(d,{aa:!0}).node:h=d;if(!h.c.s)throw new R(P.I);if(16384===(h.mode&61440))throw new R(P.N);if(32768!==(h.mode&61440))throw new R(P.i);if(d=tc(h,\"w\"))throw new R(d);h.c.s(h,{size:0,timestamp:Date.now()})}b&=-641;e=zc({node:g,path:qc(g),flags:b,seekable:!0,position:0,f:g.f,Sa:[],error:!1},e);e.f.open&&e.f.open(e);!c.logReadFiles||b&1||(Gc||(Gc={}),a in Gc||(Gc[a]=1,\nconsole.log(\"FS.trackingDelegate error on read file: \"+a)));try{nc.onOpenFile&&(g=0,1!==(b&2097155)&&(g|=1),0!==(b&2097155)&&(g|=2),nc.onOpenFile(a,g))}catch(k){console.log(\"FS.trackingDelegate['onOpenFile']('\"+a+\"', flags) threw an exception: \"+k.message)}return e}function Hc(a){if(null===a.fd)throw new R(P.B);a.ba&&(a.ba=null);try{a.f.close&&a.f.close(a)}catch(b){throw b;}finally{T[a.fd]=null}a.fd=null}\nfunction Ic(a,b,d){if(null===a.fd)throw new R(P.B);if(!a.seekable||!a.f.F)throw new R(P.O);a.position=a.f.F(a,b,d);a.Sa=[]}function Jc(){R||(R=function(a,b){this.node=b;this.Na=function(a){this.v=a;for(var b in P)if(P[b]===a){this.code=b;break}};this.Na(a);this.message=Pb[a];this.stack&&Object.defineProperty(this,\"stack\",{value:Error().stack,writable:!0})},R.prototype=Error(),R.prototype.constructor=R,[P.u].forEach(function(a){fc[a]=new R(a);fc[a].stack=\"<generic error, no stack>\"}))}var Kc;\nfunction Lc(a,b){var d=0;a&&(d|=365);b&&(d|=146);return d}\nfunction Mc(a,b,d){a=Rb(\"/dev/\"+a);var e=Lc(!!b,!!d);Nc||(Nc=64);var f=Nc++<<8|0;Xb(f,{open:function(a){a.seekable=!1},close:function(){d&&d.buffer&&d.buffer.length&&d(10)},read:function(a,d,e,f){for(var g=0,h=0;h<f;h++){try{var k=b()}catch(A){throw new R(P.M);}if(void 0===k&&0===g)throw new R(P.fa);if(null===k||void 0===k)break;g++;d[e+h]=k}g&&(a.node.timestamp=Date.now());return g},write:function(a,b,e,f){for(var g=0;g<f;g++)try{d(b[e+g])}catch(r){throw new R(P.M);}f&&(a.node.timestamp=Date.now());\nreturn g}});Dc(a,e,f)}var Nc,FS={},uc,Ac,Gc,Oc={},V=0;function X(){V+=4;return v[V-4>>2]}function Pc(){var a=T[X()];if(!a)throw new R(P.B);return a}\nfunction Qc(a,b){Rc=a;Sc=b;if(!Tc)return 1;if(0==a)Uc=function(){var a=Math.max(0,Vc+b-O())|0;setTimeout(Wc,a)},Xc=\"timeout\";else if(1==a)Uc=function(){Yc(Wc)},Xc=\"rAF\";else if(2==a){if(\"undefined\"===typeof setImmediate){var d=[];addEventListener(\"message\",function(a){if(\"setimmediate\"===a.data||\"setimmediate\"===a.data.target)a.stopPropagation(),d.shift()()},!0);setImmediate=function(a){d.push(a);void 0===c.setImmediates&&(c.setImmediates=[]);c.setImmediates.push(a);postMessage({target:\"setimmediate\"})}}Uc=\nfunction(){setImmediate(Wc)};Xc=\"immediate\"}return 0}\nfunction Zc(a,b,d,e,f){c.noExitRuntime=!0;assert(!Tc,\"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\");Tc=a;$c=e;var g=\"undefined\"!==typeof e?function(){c.dynCall_vi(a,e)}:function(){c.dynCall_v(a)};var h=ad;Wc=function(){if(!pa)if(0<bd.length){var a=Date.now(),b=bd.shift();b.g(b.P);if(cd){var d=cd,e=0==d%1?d-1:Math.floor(d);cd=b.Tc?e:(8*d+(e+.5))/9}console.log('main loop blocker \"'+\nb.name+'\" took '+(Date.now()-a)+\" ms\");c.setStatus&&(a=c.statusMessage||\"Please wait...\",b=cd,d=dd.Vc,b?b<d?c.setStatus(a+\" (\"+(d-b)+\"/\"+d+\")\"):c.setStatus(a):c.setStatus(\"\"));h<ad||setTimeout(Wc,0)}else if(!(h<ad))if(ed=ed+1|0,1==Rc&&1<Sc&&0!=ed%Sc)Uc();else{0==Rc&&(Vc=O());\"timeout\"===Xc&&c.K&&(p(\"Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!\"),\nXc=\"\");if(!(pa||c.preMainLoop&&!1===c.preMainLoop())){try{g()}catch(w){throw w&&\"object\"===typeof w&&w.stack&&p(\"exception thrown: \"+[w,w.stack]),w;}c.postMainLoop&&c.postMainLoop()}h<ad||(\"object\"===typeof SDL&&SDL.audio&&SDL.audio.La&&SDL.audio.La(),Uc())}};f||(b&&0<b?Qc(0,1E3/b):Qc(1,1),Uc());if(d)throw\"SimulateInfiniteLoop\";}var Uc=null,Xc=\"\",ad=0,Tc=null,$c=0,Rc=0,Sc=0,ed=0,bd=[],dd={},Vc,Wc,cd,fd=!1,gd=!1,hd=[];\nfunction id(){function a(){gd=document.pointerLockElement===c.canvas||document.mozPointerLockElement===c.canvas||document.webkitPointerLockElement===c.canvas||document.msPointerLockElement===c.canvas}c.preloadPlugins||(c.preloadPlugins=[]);if(!jd){jd=!0;try{kd=!0}catch(d){kd=!1,console.log(\"warning: no blob constructor, cannot create blobs with mimetypes\")}ld=\"undefined\"!=typeof MozBlobBuilder?MozBlobBuilder:\"undefined\"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:kd?null:console.log(\"warning: no BlobBuilder\");\nmd=\"undefined\"!=typeof window?window.URL?window.URL:window.webkitURL:void 0;c.ua||\"undefined\"!==typeof md||(console.log(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\"),c.ua=!0);c.preloadPlugins.push({canHandle:function(a){return!c.ua&&/\\.(jpg|jpeg|png|bmp)$/i.test(a)},handle:function(a,b,f,g){var d=null;if(kd)try{d=new Blob([a],{type:nd(b)}),d.size!==a.length&&(d=new Blob([(new Uint8Array(a)).buffer],{type:nd(b)}))}catch(q){ia(\"Blob constructor present but fails: \"+\nq+\"; falling back to blob builder\")}d||(d=new ld,d.append((new Uint8Array(a)).buffer),d=d.getBlob());var e=md.createObjectURL(d),m=new Image;m.onload=function(){assert(m.complete,\"Image \"+b+\" could not be decoded\");var d=document.createElement(\"canvas\");d.width=m.width;d.height=m.height;d.getContext(\"2d\").drawImage(m,0,0);c.preloadedImages[b]=d;md.revokeObjectURL(e);f&&f(a)};m.onerror=function(){console.log(\"Image \"+e+\" could not be decoded\");g&&g()};m.src=e}});c.preloadPlugins.push({canHandle:function(a){return!c.Zc&&\na.substr(-4)in{\".ogg\":1,\".wav\":1,\".mp3\":1}},handle:function(a,b,f,g){function d(d){m||(m=!0,c.preloadedAudios[b]=d,f&&f(a))}function e(){m||(m=!0,c.preloadedAudios[b]=new Audio,g&&g())}var m=!1;if(kd){try{var q=new Blob([a],{type:nd(b)})}catch(w){return e()}q=md.createObjectURL(q);var r=new Audio;r.addEventListener(\"canplaythrough\",function(){d(r)},!1);r.onerror=function(){if(!m){console.log(\"warning: browser could not fully decode audio \"+b+\", trying slower base64 approach\");for(var e=\"\",f=0,g=0,\nh=0;h<a.length;h++)for(f=f<<8|a[h],g+=8;6<=g;){var k=f>>g-6&63;g-=6;e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[k]}2==g?(e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(f&3)<<4],e+=\"==\"):4==g&&(e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(f&15)<<2],e+=\"=\");r.src=\"data:audio/x-\"+b.substr(-3)+\";base64,\"+e;d(r)}};r.src=q;od(function(){d(r)},1E4)}else return e()}});var b=c.canvas;b&&(b.requestPointerLock=b.requestPointerLock||\nb.mozRequestPointerLock||b.webkitRequestPointerLock||b.msRequestPointerLock||function(){},b.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock||document.msExitPointerLock||function(){},b.exitPointerLock=b.exitPointerLock.bind(document),document.addEventListener(\"pointerlockchange\",a,!1),document.addEventListener(\"mozpointerlockchange\",a,!1),document.addEventListener(\"webkitpointerlockchange\",a,!1),document.addEventListener(\"mspointerlockchange\",a,\n!1),c.elementPointerLock&&b.addEventListener(\"click\",function(a){!gd&&c.canvas.requestPointerLock&&(c.canvas.requestPointerLock(),a.preventDefault())},!1))}}\nfunction pd(a,b,d,e){if(b&&c.K&&a==c.canvas)return c.K;if(b){var f={antialias:!1,alpha:!1};if(e)for(var g in e)f[g]=e[g];if(f=qd(a,f))var h=rd[f].GLctx}else h=a.getContext(\"2d\");if(!h)return null;d&&(b||assert(\"undefined\"===typeof GLctx,\"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\"),c.K=h,b&&sd(f),c.bd=b,hd.forEach(function(a){a()}),id());return h}var td=!1,ud=void 0,vd=void 0;\nfunction wd(a,b,d){function e(){fd=!1;var a=f.parentNode;(document.fullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.webkitFullscreenElement||document.webkitCurrentFullScreenElement)===a?(f.exitFullscreen=document.exitFullscreen||document.cancelFullScreen||document.mozCancelFullScreen||document.msExitFullscreen||document.webkitCancelFullScreen||function(){},f.exitFullscreen=f.exitFullscreen.bind(document),ud&&f.requestPointerLock(),fd=!0,vd?(\"undefined\"!=typeof SDL&&\n(v[SDL.screen>>2]=K[SDL.screen>>2]|8388608),xd(c.canvas),yd()):xd(f)):(a.parentNode.insertBefore(f,a),a.parentNode.removeChild(a),vd?(\"undefined\"!=typeof SDL&&(v[SDL.screen>>2]=K[SDL.screen>>2]&-8388609),xd(c.canvas),yd()):xd(f));if(c.onFullScreen)c.onFullScreen(fd);if(c.onFullscreen)c.onFullscreen(fd)}ud=a;vd=b;zd=d;\"undefined\"===typeof ud&&(ud=!0);\"undefined\"===typeof vd&&(vd=!1);\"undefined\"===typeof zd&&(zd=null);var f=c.canvas;td||(td=!0,document.addEventListener(\"fullscreenchange\",e,!1),document.addEventListener(\"mozfullscreenchange\",\ne,!1),document.addEventListener(\"webkitfullscreenchange\",e,!1),document.addEventListener(\"MSFullscreenChange\",e,!1));var g=document.createElement(\"div\");f.parentNode.insertBefore(g,f);g.appendChild(f);g.requestFullscreen=g.requestFullscreen||g.mozRequestFullScreen||g.msRequestFullscreen||(g.webkitRequestFullscreen?function(){g.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}:null)||(g.webkitRequestFullScreen?function(){g.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:null);d?g.requestFullscreen({cd:d}):\ng.requestFullscreen()}function Ad(a,b,d){p(\"Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.\");Ad=function(a,b,d){return wd(a,b,d)};return wd(a,b,d)}var Bd=0;function Cd(a){var b=Date.now();if(0===Bd)Bd=b+1E3/60;else for(;b+2>=Bd;)Bd+=1E3/60;setTimeout(a,Math.max(Bd-b,0))}\nfunction Yc(a){\"undefined\"===typeof window?Cd(a):(window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||Cd),window.requestAnimationFrame(a))}function Dd(a){Yc(function(){pa||a()})}function od(a,b){c.noExitRuntime=!0;setTimeout(function(){pa||a()},b)}\nfunction nd(a){return{jpg:\"image/jpeg\",jpeg:\"image/jpeg\",png:\"image/png\",bmp:\"image/bmp\",ogg:\"audio/ogg\",wav:\"audio/wav\",mp3:\"audio/mpeg\"}[a.substr(a.lastIndexOf(\".\")+1)]}var Ed=[];function yd(){var a=c.canvas;Ed.forEach(function(b){b(a.width,a.height)})}\nfunction xd(a,b,d){b&&d?(a.Ta=b,a.Fa=d):(b=a.Ta,d=a.Fa);var e=b,f=d;c.forcedAspectRatio&&0<c.forcedAspectRatio&&(e/f<c.forcedAspectRatio?e=Math.round(f*c.forcedAspectRatio):f=Math.round(e/c.forcedAspectRatio));if((document.fullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.webkitFullscreenElement||document.webkitCurrentFullScreenElement)===a.parentNode&&\"undefined\"!=typeof screen){var g=Math.min(screen.width/e,screen.height/f);e=Math.round(e*g);f=Math.round(f*\ng)}vd?(a.width!=e&&(a.width=e),a.height!=f&&(a.height=f),\"undefined\"!=typeof a.style&&(a.style.removeProperty(\"width\"),a.style.removeProperty(\"height\"))):(a.width!=b&&(a.width=b),a.height!=d&&(a.height=d),\"undefined\"!=typeof a.style&&(e!=b||f!=d?(a.style.setProperty(\"width\",e+\"px\",\"important\"),a.style.setProperty(\"height\",f+\"px\",\"important\")):(a.style.removeProperty(\"width\"),a.style.removeProperty(\"height\"))))}var jd,kd,ld,md,zd,Fd=[],Y=void 0;function Z(a,b){K[a>>2]=b;K[a+4>>2]=b/4294967296|0}\nfunction Gd(a,b){try{var d=indexedDB.open(\"emscripten_filesystem\",1)}catch(e){b(e);return}d.onupgradeneeded=function(a){a=a.target.result;a.objectStoreNames.contains(\"FILES\")&&a.deleteObjectStore(\"FILES\");a.createObjectStore(\"FILES\")};d.onsuccess=function(b){a(b.target.result)};d.onerror=function(a){b(a)}}\nfunction Hd(a,b,d,e){var f=K[a+8>>2];if(f){var g=H(f),h=a+112,k=H(h);k||(k=\"GET\");var m=K[h+48>>2],q=K[h+52>>2],r=!!K[h+56>>2],w=K[h+64>>2],A=K[h+68>>2];f=K[h+72>>2];var I=K[h+76>>2],F=K[h+80>>2];h=K[h+84>>2];var N=!!(m&1),W=!!(m&2);m=!!(m&64);w=w?H(w):void 0;A=A?H(A):void 0;var oa=I?H(I):void 0,t=new XMLHttpRequest;t.withCredentials=r;t.open(k,g,!m,w,A);m||(t.timeout=q);t.l=g;t.responseType=W?\"moz-chunked-arraybuffer\":\"arraybuffer\";I&&t.overrideMimeType(oa);if(f)for(;;){k=K[f>>2];if(!k)break;g=K[f+\n4>>2];if(!g)break;f+=8;k=H(k);g=H(g);t.setRequestHeader(k,g)}Fd.push(t);K[a+0>>2]=Fd.length;f=F&&h?G.slice(F,F+h):null;t.onload=function(e){var f=t.response?t.response.byteLength:0,g=0,h=0;N&&!W&&(h=f,g=M(h),G.set(new Uint8Array(t.response),g));K[a+12>>2]=g;Z(a+16,h);Z(a+24,0);f&&Z(a+32,f);J[a+40>>1]=t.readyState;4===t.readyState&&0===t.status&&(t.status=0<f?200:404);J[a+42>>1]=t.status;t.statusText&&E(t.statusText,G,a+44,64);200==t.status?b&&b(a,t,e):d&&d(a,t,e)};t.onerror=function(b){var e=t.status;\n4==t.readyState&&0==e&&(e=404);K[a+12>>2]=0;Z(a+16,0);Z(a+24,0);Z(a+32,0);J[a+40>>1]=t.readyState;J[a+42>>1]=e;d&&d(a,t,b)};t.ontimeout=function(b){d&&d(a,t,b)};t.onprogress=function(b){var d=N&&W&&t.response?t.response.byteLength:0,f=0;N&&W&&(f=M(d),G.set(new Uint8Array(t.response),f));K[a+12>>2]=f;Z(a+16,d);Z(a+24,b.loaded-d);Z(a+32,b.total);J[a+40>>1]=t.readyState;3<=t.readyState&&0===t.status&&0<b.loaded&&(t.status=200);J[a+42>>1]=t.status;t.statusText&&E(t.statusText,G,a+44,64);e&&e(a,t,b)};\ntry{t.send(f)}catch($b){d&&d(a,t,$b)}}else d(a,0,\"no url specified!\")}function Id(a,b,d,e,f){if(a){var g=K[b+112+60>>2];g||(g=K[b+8>>2]);var h=H(g);try{var k=a.transaction([\"FILES\"],\"readwrite\").objectStore(\"FILES\").put(d,h);k.onsuccess=function(){J[b+40>>1]=4;J[b+42>>1]=200;E(\"OK\",G,b+44,64);e(b,0,h)};k.onerror=function(a){J[b+40>>1]=4;J[b+42>>1]=413;E(\"Payload Too Large\",G,b+44,64);f(b,0,a)}}catch(m){f(b,0,m)}}else f(b,0,\"IndexedDB not available!\")}\nfunction Jd(a,b,d,e){if(a){var f=K[b+112+60>>2];f||(f=K[b+8>>2]);f=H(f);try{var g=a.transaction([\"FILES\"],\"readonly\").objectStore(\"FILES\").get(f);g.onsuccess=function(a){if(a.target.result){a=a.target.result;var f=a.byteLength||a.length,g=M(f);G.set(new Uint8Array(a),g);K[b+12>>2]=g;Z(b+16,f);Z(b+24,0);Z(b+32,f);J[b+40>>1]=4;J[b+42>>1]=200;E(\"OK\",G,b+44,64);d(b,0,a)}else J[b+40>>1]=4,J[b+42>>1]=404,E(\"Not Found\",G,b+44,64),e(b,0,\"no data\")};g.onerror=function(a){J[b+40>>1]=4;J[b+42>>1]=404;E(\"Not Found\",\nG,b+44,64);e(b,0,a)}}catch(h){e(b,0,h)}}else e(b,0,\"IndexedDB not available!\")}\nfunction Kd(a,b,d,e){if(a){var f=K[b+112+60>>2];f||(f=K[b+8>>2]);f=H(f);try{var g=a.transaction([\"FILES\"],\"readwrite\").objectStore(\"FILES\").delete(f);g.onsuccess=function(a){a=a.target.result;K[b+12>>2]=0;Z(b+16,0);Z(b+24,0);Z(b+24,0);J[b+40>>1]=4;J[b+42>>1]=200;E(\"OK\",G,b+44,64);d(b,0,a)};g.onerror=function(a){J[b+40>>1]=4;J[b+42>>1]=404;E(\"Not Found\",G,b+44,64);e(b,0,a)}}catch(h){e(b,0,h)}}else e(b,0,\"IndexedDB not available!\")}var Ld=void 0,Md;Md=da(Math.max(12,1));var Nd;Ld=Md;assert(0==(Md&3));\nfor(Nd=Md+12;Ld<Nd;Ld+=4)v[Ld>>2]=0;for(Nd=Md+12;Ld<Nd;)D[Ld++>>0]=0;function Od(a){if(0===a)return 0;a=H(a);if(!L.hasOwnProperty(a))return 0;Od.l&&Lb(Od.l);a=L[a];var b=xa(a)+1,d=M(b);d&&E(a,D,d,b);Od.l=d;return Od.l}var Pd=1,Qd=0,Rd=[],rd=[],Sd=null,Td=[];function Ud(a){for(var b=Pd++,d=a.length;d<b;d++)a[d]=null;return b}\nfunction qd(a,b){function d(){}\"undefined\"===typeof b.majorVersion&&\"undefined\"===typeof b.minorVersion&&(b.majorVersion=1,b.minorVersion=0);try{a.addEventListener(\"webglcontextcreationerror\",d,!1);try{if(1==b.majorVersion&&0==b.minorVersion)var e=a.getContext(\"webgl\",b)||a.getContext(\"experimental-webgl\",b);else if(2==b.majorVersion&&0==b.minorVersion)e=a.getContext(\"webgl2\",b);else throw\"Unsupported WebGL context version \"+majorVersion+\".\"+minorVersion+\"!\";}finally{a.removeEventListener(\"webglcontextcreationerror\",\nd,!1)}if(!e)throw\":(\";}catch(f){return 0}return e?Vd(e,b):0}function Vd(a,b){var d=Ud(rd),e={handle:d,attributes:b,version:b.majorVersion,GLctx:a};a.canvas&&(a.canvas.Sc=e);rd[d]=e;(\"undefined\"===typeof b.enableExtensionsByDefault||b.enableExtensionsByDefault)&&Wd(e);return d}function sd(a){if(a){if(a=rd[a])GLctx=c.K=a.GLctx,Sd=a}else GLctx=c.K=Sd=null}\nfunction Wd(a){a||(a=Sd);if(!a.Ga){a.Ga=!0;var b=a.GLctx;if(2>a.version){var d=b.getExtension(\"ANGLE_instanced_arrays\");d&&(b.vertexAttribDivisor=function(a,b){d.vertexAttribDivisorANGLE(a,b)},b.drawArraysInstanced=function(a,b,e,f){d.drawArraysInstancedANGLE(a,b,e,f)},b.drawElementsInstanced=function(a,b,e,f,g){d.drawElementsInstancedANGLE(a,b,e,f,g)});var e=b.getExtension(\"OES_vertex_array_object\");e&&(b.createVertexArray=function(){return e.createVertexArrayOES()},b.deleteVertexArray=function(a){e.deleteVertexArrayOES(a)},\nb.bindVertexArray=function(a){e.bindVertexArrayOES(a)},b.isVertexArray=function(a){return e.isVertexArrayOES(a)});var f=b.getExtension(\"WEBGL_draw_buffers\");f&&(b.drawBuffers=function(a,b){f.drawBuffersWEBGL(a,b)})}b.Uc=b.getExtension(\"EXT_disjoint_timer_query\");var g=\"OES_texture_float OES_texture_half_float OES_standard_derivatives OES_vertex_array_object WEBGL_compressed_texture_s3tc WEBGL_depth_texture OES_element_index_uint EXT_texture_filter_anisotropic EXT_frag_depth WEBGL_draw_buffers ANGLE_instanced_arrays OES_texture_float_linear OES_texture_half_float_linear EXT_blend_minmax EXT_shader_texture_lod WEBGL_compressed_texture_pvrtc EXT_color_buffer_half_float WEBGL_color_buffer_float EXT_sRGB WEBGL_compressed_texture_etc1 EXT_disjoint_timer_query WEBGL_compressed_texture_etc WEBGL_compressed_texture_astc EXT_color_buffer_float WEBGL_compressed_texture_s3tc_srgb EXT_disjoint_timer_query_webgl2\".split(\" \");\n(a=b.getSupportedExtensions())&&0<a.length&&b.getSupportedExtensions().forEach(function(a){-1!=g.indexOf(a)&&b.getExtension(a)})}}function Xd(a,b,d,e){a*=d;e*=Math.floor((a+e-1)/e);return 0>=b?0:(b-1)*e+a}\nfunction Yd(a,b,d,e,f){switch(b){case 6406:case 6409:case 6402:b=1;break;case 6410:b=2;break;case 6407:case 35904:b=3;break;case 6408:case 35906:b=4;break;default:return Qd||(Qd=1280),null}switch(a){case 5121:b*=1;break;case 5123:case 36193:b*=2;break;case 5125:case 5126:b*=4;break;case 34042:b=4;break;case 33635:case 32819:case 32820:b=2;break;default:return Qd||(Qd=1280),null}d=Xd(d,e,b,4);switch(a){case 5121:return G.subarray(f,f+d);case 5126:return Da.subarray(f>>2,f+d>>2);case 5125:case 34042:return K.subarray(f>>\n2,f+d>>2);case 5123:case 33635:case 32819:case 32820:case 36193:return J.subarray(f>>1,f+d>>1);default:return Qd||(Qd=1280),null}}function Zd(){Zd.l||(Zd.l=[]);Zd.l.push(B());return Zd.l.length-1}var $d={},ae=1;function be(a,b){be.l||(be.l={});a in be.l||(c.dynCall_v(b),be.l[a]=1)}function ce(a){return 0===a%4&&(0!==a%100||0===a%400)}function de(a,b){for(var d=0,e=0;e<=b;d+=a[e++]);return d}var ee=[31,29,31,30,31,30,31,31,30,31,30,31],fe=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction ge(a,b){for(a=new Date(a.getTime());0<b;){var d=a.getMonth(),e=(ce(a.getFullYear())?ee:fe)[d];if(b>e-a.getDate())b-=e-a.getDate()+1,a.setDate(1),11>d?a.setMonth(d+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction he(a,b,d,e){function f(a,b,d){for(a=\"number\"===typeof a?a.toString():a||\"\";a.length<b;)a=d[0]+a;return a}function g(a,b){return f(a,b,\"0\")}function h(a,b){function d(a){return 0>a?-1:0<a?1:0}var e;0===(e=d(a.getFullYear()-b.getFullYear()))&&0===(e=d(a.getMonth()-b.getMonth()))&&(e=d(a.getDate()-b.getDate()));return e}function k(a){switch(a.getDay()){case 0:return new Date(a.getFullYear()-1,11,29);case 1:return a;case 2:return new Date(a.getFullYear(),0,3);case 3:return new Date(a.getFullYear(),\n0,2);case 4:return new Date(a.getFullYear(),0,1);case 5:return new Date(a.getFullYear()-1,11,31);case 6:return new Date(a.getFullYear()-1,11,30)}}function m(a){a=ge(new Date(a.j+1900,0,1),a.V);var b=k(new Date(a.getFullYear()+1,0,4));return 0>=h(k(new Date(a.getFullYear(),0,4)),a)?0>=h(b,a)?a.getFullYear()+1:a.getFullYear():a.getFullYear()-1}var q=v[e+40>>2];e={Qa:v[e>>2],Pa:v[e+4>>2],U:v[e+8>>2],H:v[e+12>>2],C:v[e+16>>2],j:v[e+20>>2],va:v[e+24>>2],V:v[e+28>>2],ad:v[e+32>>2],Oa:v[e+36>>2],Ra:q?H(q):\n\"\"};d=H(d);q={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\"};for(var r in q)d=d.replace(new RegExp(r,\"g\"),q[r]);var w=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),A=\"January February March April May June July August September October November December\".split(\" \");q={\"%a\":function(a){return w[a.va].substring(0,3)},\"%A\":function(a){return w[a.va]},\"%b\":function(a){return A[a.C].substring(0,\n3)},\"%B\":function(a){return A[a.C]},\"%C\":function(a){return g((a.j+1900)/100|0,2)},\"%d\":function(a){return g(a.H,2)},\"%e\":function(a){return f(a.H,2,\" \")},\"%g\":function(a){return m(a).toString().substring(2)},\"%G\":function(a){return m(a)},\"%H\":function(a){return g(a.U,2)},\"%I\":function(a){a=a.U;0==a?a=12:12<a&&(a-=12);return g(a,2)},\"%j\":function(a){return g(a.H+de(ce(a.j+1900)?ee:fe,a.C-1),3)},\"%m\":function(a){return g(a.C+1,2)},\"%M\":function(a){return g(a.Pa,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(a){return 0<=\na.U&&12>a.U?\"AM\":\"PM\"},\"%S\":function(a){return g(a.Qa,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(a){return(new Date(a.j+1900,a.C+1,a.H,0,0,0,0)).getDay()||7},\"%U\":function(a){var b=new Date(a.j+1900,0,1),d=0===b.getDay()?b:ge(b,7-b.getDay());a=new Date(a.j+1900,a.C,a.H);return 0>h(d,a)?g(Math.ceil((31-d.getDate()+(de(ce(a.getFullYear())?ee:fe,a.getMonth()-1)-31)+a.getDate())/7),2):0===h(d,b)?\"01\":\"00\"},\"%V\":function(a){var b=k(new Date(a.j+1900,0,4)),d=k(new Date(a.j+1901,0,4)),e=ge(new Date(a.j+\n1900,0,1),a.V);return 0>h(e,b)?\"53\":0>=h(d,e)?\"01\":g(Math.ceil((b.getFullYear()<a.j+1900?a.V+32-b.getDate():a.V+1-b.getDate())/7),2)},\"%w\":function(a){return(new Date(a.j+1900,a.C+1,a.H,0,0,0,0)).getDay()},\"%W\":function(a){var b=new Date(a.j,0,1),d=1===b.getDay()?b:ge(b,0===b.getDay()?1:7-b.getDay()+1);a=new Date(a.j+1900,a.C,a.H);return 0>h(d,a)?g(Math.ceil((31-d.getDate()+(de(ce(a.getFullYear())?ee:fe,a.getMonth()-1)-31)+a.getDate())/7),2):0===h(d,b)?\"01\":\"00\"},\"%y\":function(a){return(a.j+1900).toString().substring(2)},\n\"%Y\":function(a){return a.j+1900},\"%z\":function(a){a=a.Oa;var b=0<=a;a=Math.abs(a)/60;return(b?\"+\":\"-\")+String(\"0000\"+(a/60*100+a%60)).slice(-4)},\"%Z\":function(a){return a.Ra},\"%%\":function(){return\"%\"}};for(r in q)0<=d.indexOf(r)&&(d=d.replace(new RegExp(r,\"g\"),q[r](e)));r=Zb(d,!1);if(r.length>b)return 0;D.set(r,a);return r.length-1}\n\"undefined\"!==typeof dateNow?O=dateNow:\"object\"===typeof self&&self.performance&&\"function\"===typeof self.performance.now?O=function(){return self.performance.now()}:\"object\"===typeof performance&&\"function\"===typeof performance.now?O=function(){return performance.now()}:O=Date.now;Jc();lc=Array(4096);Bc(S,\"/\");U(\"/tmp\");U(\"/home\");U(\"/home/web_user\");\n(function(){U(\"/dev\");Xb(259,{read:function(){return 0},write:function(a,b,f,g){return g}});Dc(\"/dev/null\",259);Wb(1280,ac);Wb(1536,bc);Dc(\"/dev/tty\",1280);Dc(\"/dev/tty1\",1536);if(\"undefined\"!==typeof crypto){var a=new Uint8Array(1);var b=function(){crypto.getRandomValues(a);return a[0]}}else b=function(){z(\"random_device\")};Mc(\"random\",b);Mc(\"urandom\",b);U(\"/dev/shm\");U(\"/dev/shm/tmp\")})();U(\"/proc\");U(\"/proc/self\");U(\"/proc/self/fd\");\nBc({A:function(){var a=dc(\"/proc/self\",\"fd\",16895,73);a.c={lookup:function(a,d){var b=T[+d];if(!b)throw new R(P.B);a={parent:null,A:{ta:\"fake\"},c:{readlink:function(){return b.path}}};return a.parent=a}};return a}},\"/proc/self/fd\");\nRa.unshift(function(){if(!c.noFSInit&&!Kc){assert(!Kc,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");Kc=!0;Jc();c.stdin=c.stdin;c.stdout=c.stdout;c.stderr=c.stderr;c.stdin?Mc(\"stdin\",c.stdin):Ec(\"/dev/tty\",\"/dev/stdin\");c.stdout?Mc(\"stdout\",null,c.stdout):Ec(\"/dev/tty\",\"/dev/stdout\");c.stderr?Mc(\"stderr\",null,c.stderr):Ec(\"/dev/tty1\",\"/dev/stderr\");var a=Fc(\"/dev/stdin\",\n\"r\");assert(0===a.fd,\"invalid handle for stdin (\"+a.fd+\")\");a=Fc(\"/dev/stdout\",\"w\");assert(1===a.fd,\"invalid handle for stdout (\"+a.fd+\")\");a=Fc(\"/dev/stderr\",\"w\");assert(2===a.fd,\"invalid handle for stderr (\"+a.fd+\")\")}});Sa.push(function(){mc=!1});Ta.push(function(){Kc=!1;var a=c._fflush;a&&a(0);for(a=0;a<T.length;a++){var b=T[a];b&&Hc(b)}});Ra.unshift(function(){});Ta.push(function(){});\nc.requestFullScreen=function(a,b,d){p(\"Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.\");c.requestFullScreen=c.requestFullscreen;Ad(a,b,d)};c.requestFullscreen=function(a,b,d){wd(a,b,d)};c.requestAnimationFrame=function(a){Yc(a)};c.setCanvasSize=function(a,b,d){xd(c.canvas,a,b);d||yd()};c.pauseMainLoop=function(){Uc=null;ad++};c.resumeMainLoop=function(){ad++;var a=Rc,b=Sc,d=Tc;Tc=null;Zc(d,0,!1,$c,!0);Qc(a,b);Uc()};\nc.getUserMedia=function(){window.getUserMedia||(window.getUserMedia=navigator.getUserMedia||navigator.mozGetUserMedia);window.getUserMedia(void 0)};c.createContext=function(a,b,d,e){return pd(a,b,d,e)};(function(){var a=\"undefined\"===typeof ENVIRONMENT_IS_FETCH_WORKER;Gd(function(b){Y=b;a&&eb()},function(){Y=!1;a&&eb()});\"undefined\"!==typeof ENVIRONMENT_IS_FETCH_WORKER&&ENVIRONMENT_IS_FETCH_WORKER||db()})();for(var GLctx,le=0;256>le;le++);for(le=0;32>le;le++)Td.push(Array(le));x=da(4);Ia=Ja=ha(u);\nKa=Ia+Oa;La=ha(Ka);v[x>>2]=La;Ha=!0;function Zb(a,b){var d=Array(xa(a)+1);a=E(a,d,0,d.length);b&&(d.length=a);return d}c.wasmTableSize=2468;c.wasmMaxTableSize=2468;c.Aa={};\nc.Ba={abort:z,assert:assert,enlargeMemory:fa,getTotalMemory:function(){return y},abortOnCannotGrowMemory:function(){z(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+y+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")},invoke_i:function(a){var b=B();try{return c.dynCall_i(a)}catch(d){C(b);\nif(\"number\"!==typeof d&&\"longjmp\"!==d)throw d;c.setThrew(1,0)}},invoke_ii:function(a,b){var d=B();try{return c.dynCall_ii(a,b)}catch(e){C(d);if(\"number\"!==typeof e&&\"longjmp\"!==e)throw e;c.setThrew(1,0)}},invoke_iii:function(a,b,d){var e=B();try{return c.dynCall_iii(a,b,d)}catch(f){C(e);if(\"number\"!==typeof f&&\"longjmp\"!==f)throw f;c.setThrew(1,0)}},invoke_iiii:function(a,b,d,e){var f=B();try{return c.dynCall_iiii(a,b,d,e)}catch(g){C(f);if(\"number\"!==typeof g&&\"longjmp\"!==g)throw g;c.setThrew(1,0)}},\ninvoke_iiiii:function(a,b,d,e,f){var g=B();try{return c.dynCall_iiiii(a,b,d,e,f)}catch(h){C(g);if(\"number\"!==typeof h&&\"longjmp\"!==h)throw h;c.setThrew(1,0)}},invoke_iiiiid:function(a,b,d,e,f,g){var h=B();try{return c.dynCall_iiiiid(a,b,d,e,f,g)}catch(k){C(h);if(\"number\"!==typeof k&&\"longjmp\"!==k)throw k;c.setThrew(1,0)}},invoke_iiiiii:function(a,b,d,e,f,g){var h=B();try{return c.dynCall_iiiiii(a,b,d,e,f,g)}catch(k){C(h);if(\"number\"!==typeof k&&\"longjmp\"!==k)throw k;c.setThrew(1,0)}},invoke_iiiiiid:function(a,\nb,d,e,f,g,h){var k=B();try{return c.dynCall_iiiiiid(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_iiiiiii:function(a,b,d,e,f,g,h){var k=B();try{return c.dynCall_iiiiiii(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_iiiiiiii:function(a,b,d,e,f,g,h,k){var m=B();try{return c.dynCall_iiiiiiii(a,b,d,e,f,g,h,k)}catch(q){C(m);if(\"number\"!==typeof q&&\"longjmp\"!==q)throw q;c.setThrew(1,0)}},invoke_iiiiiiiii:function(a,\nb,d,e,f,g,h,k,m){var q=B();try{return c.dynCall_iiiiiiiii(a,b,d,e,f,g,h,k,m)}catch(r){C(q);if(\"number\"!==typeof r&&\"longjmp\"!==r)throw r;c.setThrew(1,0)}},invoke_iiiiij:function(a,b,d,e,f,g,h){var k=B();try{return c.dynCall_iiiiij(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_iiji:function(a,b,d,e,f){var g=B();try{return c.dynCall_iiji(a,b,d,e,f)}catch(h){C(g);if(\"number\"!==typeof h&&\"longjmp\"!==h)throw h;c.setThrew(1,0)}},invoke_v:function(a){var b=\nB();try{c.dynCall_v(a)}catch(d){C(b);if(\"number\"!==typeof d&&\"longjmp\"!==d)throw d;c.setThrew(1,0)}},invoke_vi:function(a,b){var d=B();try{c.dynCall_vi(a,b)}catch(e){C(d);if(\"number\"!==typeof e&&\"longjmp\"!==e)throw e;c.setThrew(1,0)}},invoke_vii:function(a,b,d){var e=B();try{c.dynCall_vii(a,b,d)}catch(f){C(e);if(\"number\"!==typeof f&&\"longjmp\"!==f)throw f;c.setThrew(1,0)}},invoke_viiffii:function(a,b,d,e,f,g,h){var k=B();try{c.dynCall_viiffii(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==\nm)throw m;c.setThrew(1,0)}},invoke_viii:function(a,b,d,e){var f=B();try{c.dynCall_viii(a,b,d,e)}catch(g){C(f);if(\"number\"!==typeof g&&\"longjmp\"!==g)throw g;c.setThrew(1,0)}},invoke_viiifffii:function(a,b,d,e,f,g,h,k,m){var q=B();try{c.dynCall_viiifffii(a,b,d,e,f,g,h,k,m)}catch(r){C(q);if(\"number\"!==typeof r&&\"longjmp\"!==r)throw r;c.setThrew(1,0)}},invoke_viiiffii:function(a,b,d,e,f,g,h,k){var m=B();try{c.dynCall_viiiffii(a,b,d,e,f,g,h,k)}catch(q){C(m);if(\"number\"!==typeof q&&\"longjmp\"!==q)throw q;\nc.setThrew(1,0)}},invoke_viiii:function(a,b,d,e,f){var g=B();try{c.dynCall_viiii(a,b,d,e,f)}catch(h){C(g);if(\"number\"!==typeof h&&\"longjmp\"!==h)throw h;c.setThrew(1,0)}},invoke_viiiii:function(a,b,d,e,f,g){var h=B();try{c.dynCall_viiiii(a,b,d,e,f,g)}catch(k){C(h);if(\"number\"!==typeof k&&\"longjmp\"!==k)throw k;c.setThrew(1,0)}},invoke_viiiiiffffffffffffffff:function(a,b,d,e,f,g,h,k,m,q,r,w,A,I,F,N,W,oa,t,$b,ie,je){var ke=B();try{c.dynCall_viiiiiffffffffffffffff(a,b,d,e,f,g,h,k,m,q,r,w,A,I,F,N,W,oa,\nt,$b,ie,je)}catch(ec){C(ke);if(\"number\"!==typeof ec&&\"longjmp\"!==ec)throw ec;c.setThrew(1,0)}},invoke_viiiiii:function(a,b,d,e,f,g,h){var k=B();try{c.dynCall_viiiiii(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_viijii:function(a,b,d,e,f,g,h){var k=B();try{c.dynCall_viijii(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_vij:function(a,b,d,e){var f=B();try{c.dynCall_vij(a,b,d,e)}catch(g){C(f);\nif(\"number\"!==typeof g&&\"longjmp\"!==g)throw g;c.setThrew(1,0)}},invoke_viji:function(a,b,d,e,f){var g=B();try{c.dynCall_viji(a,b,d,e,f)}catch(h){C(g);if(\"number\"!==typeof h&&\"longjmp\"!==h)throw h;c.setThrew(1,0)}},invoke_vijii:function(a,b,d,e,f,g){var h=B();try{c.dynCall_vijii(a,b,d,e,f,g)}catch(k){C(h);if(\"number\"!==typeof k&&\"longjmp\"!==k)throw k;c.setThrew(1,0)}},___buildEnvironment:Db,___clock_gettime:function(){return Gb.apply(null,arguments)},___cxa_allocate_exception:function(a){return M(a)},\n___cxa_begin_catch:function(a){var b=Q[a];b&&!b.ma&&(b.ma=!0,me.$--);b&&(b.L=!1);Ib.push(a);(b=Jb(a))&&Q[b].J++;return a},___cxa_current_primary_exception:function(){var a=Ib[Ib.length-1]||0;if(a){var b=Jb(a);b&&Q[b].J++}return a},___cxa_decrement_exception_refcount:function(a){Kb(Jb(a))},___cxa_end_catch:function(){c.setThrew(0);var a=Ib.pop();a&&(Kb(Jb(a)),Hb=0)},___cxa_find_matching_catch:Nb,___cxa_free_exception:___cxa_free_exception,___cxa_increment_exception_refcount:function(a){(a=Jb(a))&&\nQ[a].J++},___cxa_pure_virtual:function(){pa=!0;throw\"Pure virtual function called!\";},___cxa_rethrow:Mb,___cxa_rethrow_primary_exception:function(a){a&&(Ib.push(a),Q[a].L=!0,Mb())},___cxa_throw:function(a,b,d){Q[a]={Ka:a,ka:a,type:b,oa:d,J:0,ma:!1,L:!1};Hb=a;\"uncaught_exception\"in me?me.$++:me.$=1;throw a+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\";},___cxa_uncaught_exception:function(){return!!me.$},\n___gxx_personality_v0:function(){},___lock:function(){},___map_file:function(){Fb(P.I);return-1},___resumeException:function(a){Hb||(Hb=a);throw a+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\";},___setErrNo:Fb,___syscall140:function(a,b){V=b;try{var d=Pc();X();var e=X(),f=X(),g=X();Ic(d,e,g);v[f>>2]=d.position;d.ba&&0===e&&0===g&&(d.ba=null);return 0}catch(h){return\"undefined\"!==typeof FS&&\nh instanceof R||z(h),-h.v}},___syscall145:function(a,b){V=b;try{var d=Pc(),e=X();a:{var f=X();for(b=a=0;b<f;b++){var g=v[e+(8*b+4)>>2],h=d,k=v[e+8*b>>2],m=g,q=void 0,r=D;if(0>m||0>q)throw new R(P.i);if(null===h.fd)throw new R(P.B);if(1===(h.flags&2097155))throw new R(P.B);if(16384===(h.node.mode&61440))throw new R(P.N);if(!h.f.read)throw new R(P.i);var w=\"undefined\"!==typeof q;if(!w)q=h.position;else if(!h.seekable)throw new R(P.O);var A=h.f.read(h,r,k,m,q);w||(h.position+=A);var I=A;if(0>I){var F=\n-1;break a}a+=I;if(I<g)break}F=a}return F}catch(N){return\"undefined\"!==typeof FS&&N instanceof R||z(N),-N.v}},___syscall146:function(a,b){V=b;try{var d=Pc(),e=X();a:{var f=X();for(b=a=0;b<f;b++){var g=d,h=v[e+8*b>>2],k=v[e+(8*b+4)>>2],m=D,q=void 0;if(0>k||0>q)throw new R(P.i);if(null===g.fd)throw new R(P.B);if(0===(g.flags&2097155))throw new R(P.B);if(16384===(g.node.mode&61440))throw new R(P.N);if(!g.f.write)throw new R(P.i);g.flags&1024&&Ic(g,0,2);var r=\"undefined\"!==typeof q;if(!r)q=g.position;\nelse if(!g.seekable)throw new R(P.O);var w=g.f.write(g,m,h,k,q,void 0);r||(g.position+=w);try{if(g.path&&nc.onWriteToFile)nc.onWriteToFile(g.path)}catch(F){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"') threw an exception: \"+F.message)}var A=w;if(0>A){var I=-1;break a}a+=A}I=a}return I}catch(F){return\"undefined\"!==typeof FS&&F instanceof R||z(F),-F.v}},___syscall196:function(a,b){V=b;try{var d=H(X());a:{var e=X();try{var f=oc(d,{aa:!1}).node;if(!f)throw new R(P.u);if(!f.c.m)throw new R(P.I);\nvar g=f.c.m(f)}catch(k){if(k&&k.node&&Rb(d)!==Rb(qc(k.node))){var h=-P.Z;break a}throw k;}v[e>>2]=g.dev;v[e+4>>2]=0;v[e+8>>2]=g.ino;v[e+12>>2]=g.mode;v[e+16>>2]=g.nlink;v[e+20>>2]=g.uid;v[e+24>>2]=g.gid;v[e+28>>2]=g.rdev;v[e+32>>2]=0;v[e+36>>2]=g.size;v[e+40>>2]=4096;v[e+44>>2]=g.blocks;v[e+48>>2]=g.atime.getTime()/1E3|0;v[e+52>>2]=0;v[e+56>>2]=g.mtime.getTime()/1E3|0;v[e+60>>2]=0;v[e+64>>2]=g.ctime.getTime()/1E3|0;v[e+68>>2]=0;v[e+72>>2]=g.ino;h=0}return h}catch(k){return\"undefined\"!==typeof FS&&\nk instanceof R||z(k),-k.v}},___syscall221:function(a,b){V=b;try{var d=Pc();switch(X()){case 0:var e=X();return 0>e?-P.i:Fc(d.path,d.flags,0,e).fd;case 1:case 2:return 0;case 3:return d.flags;case 4:return e=X(),d.flags|=e,0;case 12:case 12:return e=X(),Ca[e+0>>1]=2,0;case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-P.i;case 9:return Fb(P.i),-1;default:return-P.i}}catch(f){return\"undefined\"!==typeof FS&&f instanceof R||z(f),-f.v}},___syscall5:function(a,b){V=b;try{var d=H(X()),e=X(),\nf=X();return Fc(d,e,f).fd}catch(g){return\"undefined\"!==typeof FS&&g instanceof R||z(g),-g.v}},___syscall54:function(a,b){V=b;try{var d=Pc(),e=X();switch(e){case 21509:case 21505:return d.tty?0:-P.D;case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:return d.tty?0:-P.D;case 21519:if(!d.tty)return-P.D;var f=X();return v[f>>2]=0;case 21520:return d.tty?-P.i:-P.D;case 21531:a=f=X();if(!d.f.Ha)throw new R(P.D);return d.f.Ha(d,e,a);case 21523:return d.tty?0:-P.D;case 21524:return d.tty?0:\n-P.D;default:z(\"bad ioctl syscall \"+e)}}catch(g){return\"undefined\"!==typeof FS&&g instanceof R||z(g),-g.v}},___syscall6:function(a,b){V=b;try{var d=Pc();Hc(d);return 0}catch(e){return\"undefined\"!==typeof FS&&e instanceof R||z(e),-e.v}},___syscall91:function(a,b){V=b;try{var d=X(),e=X(),f=Oc[d];if(!f)return 0;if(e===f.Xc){var g=T[f.fd],h=f.flags,k=new Uint8Array(G.subarray(d,d+e));g&&g.f.T&&g.f.T(g,k,0,e,h);Oc[d]=null;f.za&&Lb(f.Yc)}return 0}catch(m){return\"undefined\"!==typeof FS&&m instanceof R||\nz(m),-m.v}},___unlock:function(){},__addDays:ge,__arraySum:de,__emscripten_fetch_cache_data:Id,__emscripten_fetch_delete_cached_data:Kd,__emscripten_fetch_load_cached_data:Jd,__emscripten_fetch_xhr:Hd,__emscripten_get_fetch_work_queue:function(){return Md},__isLeapYear:ce,_abort:function(){c.abort()},_clock_gettime:Gb,_emidentity:function(){var a=(new URL(location.origin)).hostname;0===a.length&&(a=(new URL(location.href.replace(\"blob:\",\"\"))).hostname);if(/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(a))0===\na.indexOf(\"10.\")&&(a=\"10.*\"),0===a.indexOf(\"192.168.\")&&(a=\"192.168.*\"),0===a.indexOf(\"127.\")&&(a=\"127.*\");else{var b=new RegExp(\"(\"+String.fromCharCode(92)+\".ngrok\"+String.fromCharCode(92)+\".io)$\",\"i\");b.test(a)&&(a=\"*.ngrok.io\");b=new RegExp(\"(\"+String.fromCharCode(92)+\".arweb\"+String.fromCharCode(92)+\".app)$\",\"i\");b.test(a)&&(a=\"*.arweb.app\")}b=xa(a)+1;var d=M(b);E(a,G,d,b+1);return d},_emlicerr:function(){self.postMessage({t:\"licerr\"})},_emscripten_asm_const_i:function(a){return gb[a]()},_emscripten_async_call:function(a,\nb,d){function e(){ma(a)(b)}c.noExitRuntime=!0;0<=d?od(e,d):Dd(e)},_emscripten_get_now:O,_emscripten_get_now_is_monotonic:Eb,_emscripten_is_main_browser_thread:function(){return!1},_emscripten_is_main_runtime_thread:function(){return 1},_emscripten_memcpy_big:function(a,b,d){G.set(G.subarray(b,b+d),a);return a},_emscripten_set_main_loop:Zc,_emscripten_set_main_loop_timing:Qc,_emscripten_start_fetch:function(a,b,d,e){function f(a){Hd(a,m,h,k)}function g(a){Hd(a,q,h,k)}function h(a){I&&\"function\"===\ntypeof na?c.dynCall_vi(I,a):d&&d(a)}function k(a){F&&\"function\"===typeof na?c.dynCall_vi(F,a):e&&e(a)}function m(a,d){Id(Y,a,d.response,function(a){A&&\"function\"===typeof na?c.dynCall_vi(A,a):b&&b(a)},function(a){A&&\"function\"===typeof na?c.dynCall_vi(A,a):b&&b(a)})}function q(a){A&&\"function\"===typeof na?c.dynCall_vi(A,a):b&&b(a)}\"undefined\"!==typeof c&&(c.noExitRuntime=!0);var r=a+112,w=H(r),A=K[r+36>>2],I=K[r+40>>2],F=K[r+44>>2],N=K[r+48>>2],W=!!(N&4),oa=!!(N&32);if(N&16&&\"EM_IDB_STORE\"!==w&&\"EM_IDB_DELETE\"!==\nw){if(oa)return 0;W?Hd(a,m,h,k):Hd(a,q,h,k)}else{if(!Y)return h(a),0;\"EM_IDB_STORE\"===w?(w=K[r+80>>2],r=G.slice(w,w+K[r+84>>2]),Id(Y,a,r,q,h)):\"EM_IDB_DELETE\"===w?Kd(Y,a,q,h):oa?Jd(Y,a,q,h):W?Jd(Y,a,q,f):Jd(Y,a,q,g)}return a},_getenv:Od,_gettimeofday:function(a){var b=Date.now();v[a>>2]=b/1E3|0;v[a+4>>2]=b%1E3*1E3|0;return 0},_glBindTexture:function(a,b){GLctx.bindTexture(a,b?Rd[b]:null)},_glGenTextures:function(a,b){for(var d=0;d<a;d++){var e=GLctx.createTexture();if(!e){for(Qd||(Qd=1282);d<a;)v[b+\n4*d++>>2]=0;break}var f=Ud(Rd);e.name=f;Rd[f]=e;v[b+4*d>>2]=f}},_glTexImage2D:function(a,b,d,e,f,g,h,k,m){var q=null;m&&(q=Yd(k,h,e,f,m));GLctx.texImage2D(a,b,d,e,f,g,h,k,q)},_glTexParameteri:function(a,b,d){GLctx.texParameteri(a,b,d)},_llvm_exp2_f32:function(a){return Math.pow(2,a)},_llvm_stackrestore:function(a){var b=Zd.l[a];Zd.l.splice(a,1);C(b)},_llvm_stacksave:Zd,_llvm_trap:function(){z(\"trap!\")},_pthread_cond_destroy:function(){return 0},_pthread_cond_init:function(){return 0},_pthread_cond_signal:function(){return 0},\n_pthread_cond_wait:function(){return 0},_pthread_create:function(){return 11},_pthread_getspecific:function(a){return $d[a]||0},_pthread_join:function(){},_pthread_key_create:function(a){if(0==a)return P.i;v[a>>2]=ae;$d[ae]=0;ae++;return 0},_pthread_mutex_destroy:function(){},_pthread_mutex_init:function(){},_pthread_once:be,_pthread_setspecific:function(a,b){if(!(a in $d))return P.i;$d[a]=b;return 0},_strftime:he,_strftime_l:function(a,b,d,e){return he(a,b,d,e)},_sysconf:function(a){switch(a){case 30:return 16384;\ncase 85:return 131068;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;\ncase 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;\ncase 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return\"object\"===typeof navigator?navigator.hardwareConcurrency||1:1}Fb(P.i);return-1},emscriptenWebGLComputeImageSize:Xd,emscriptenWebGLGetTexPixelData:Yd,DYNAMICTOP_PTR:x,tempDoublePtr:Cb,STACKTOP:Ja,STACK_MAX:Ka};var ne=c.asm(c.Aa,c.Ba,buffer);c.asm=ne;\nvar hb=c.__GLOBAL__I_000101=function(){return c.asm.__GLOBAL__I_000101.apply(null,arguments)},tb=c.__GLOBAL__sub_I_AZHighLevelEncoder_cpp=function(){return c.asm.__GLOBAL__sub_I_AZHighLevelEncoder_cpp.apply(null,arguments)},vb=c.__GLOBAL__sub_I_CameraSource_cpp=function(){return c.asm.__GLOBAL__sub_I_CameraSource_cpp.apply(null,arguments)},pb=c.__GLOBAL__sub_I_CharacterSetECI_cpp=function(){return c.asm.__GLOBAL__sub_I_CharacterSetECI_cpp.apply(null,arguments)},rb=c.__GLOBAL__sub_I_DMECEncoder_cpp=\nfunction(){return c.asm.__GLOBAL__sub_I_DMECEncoder_cpp.apply(null,arguments)},qb=c.__GLOBAL__sub_I_DMHighLevelEncoder_cpp=function(){return c.asm.__GLOBAL__sub_I_DMHighLevelEncoder_cpp.apply(null,arguments)},mb=c.__GLOBAL__sub_I_GridSampler_cpp=function(){return c.asm.__GLOBAL__sub_I_GridSampler_cpp.apply(null,arguments)},ob=c.__GLOBAL__sub_I_ODCode128Patterns_cpp=function(){return c.asm.__GLOBAL__sub_I_ODCode128Patterns_cpp.apply(null,arguments)},nb=c.__GLOBAL__sub_I_ODRSSExpandedReader_cpp=function(){return c.asm.__GLOBAL__sub_I_ODRSSExpandedReader_cpp.apply(null,\narguments)},ib=c.__GLOBAL__sub_I_PDFDetector_cpp=function(){return c.asm.__GLOBAL__sub_I_PDFDetector_cpp.apply(null,arguments)},ub=c.__GLOBAL__sub_I_StandardStatsManager_cpp=function(){return c.asm.__GLOBAL__sub_I_StandardStatsManager_cpp.apply(null,arguments)},xb=c.__GLOBAL__sub_I_barcode_finder_cpp=function(){return c.asm.__GLOBAL__sub_I_barcode_finder_cpp.apply(null,arguments)},yb=c.__GLOBAL__sub_I_face_landmark_cpp=function(){return c.asm.__GLOBAL__sub_I_face_landmark_cpp.apply(null,arguments)},\nwb=c.__GLOBAL__sub_I_face_mesh_cpp=function(){return c.asm.__GLOBAL__sub_I_face_mesh_cpp.apply(null,arguments)},zb=c.__GLOBAL__sub_I_face_tracker_cpp=function(){return c.asm.__GLOBAL__sub_I_face_tracker_cpp.apply(null,arguments)},Ab=c.__GLOBAL__sub_I_image_tracker_cpp=function(){return c.asm.__GLOBAL__sub_I_image_tracker_cpp.apply(null,arguments)},Bb=c.__GLOBAL__sub_I_instant_tracker_cpp=function(){return c.asm.__GLOBAL__sub_I_instant_tracker_cpp.apply(null,arguments)},jb=c.__GLOBAL__sub_I_iostream_cpp=\nfunction(){return c.asm.__GLOBAL__sub_I_iostream_cpp.apply(null,arguments)},sb=c.__GLOBAL__sub_I_pipeline_cpp=function(){return c.asm.__GLOBAL__sub_I_pipeline_cpp.apply(null,arguments)},lb=c.__GLOBAL__sub_I_zappar_face_tracker_cpp=function(){return c.asm.__GLOBAL__sub_I_zappar_face_tracker_cpp.apply(null,arguments)};c.__Z20zappar_face_mesh_uvsP19zappar_face_mesh_ti=function(){return c.asm.__Z20zappar_face_mesh_uvsP19zappar_face_mesh_ti.apply(null,arguments)};\nc.__Z23zappar_face_mesh_updateP19zappar_face_mesh_tiPKfS2_i=function(){return c.asm.__Z23zappar_face_mesh_updateP19zappar_face_mesh_tiPKfS2_i.apply(null,arguments)};c.__Z24zappar_face_mesh_indicesP19zappar_face_mesh_ti=function(){return c.asm.__Z24zappar_face_mesh_indicesP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z24zappar_face_mesh_normalsP19zappar_face_mesh_ti=function(){return c.asm.__Z24zappar_face_mesh_normalsP19zappar_face_mesh_ti.apply(null,arguments)};\nc.__Z25zappar_face_mesh_uvs_sizeP19zappar_face_mesh_ti=function(){return c.asm.__Z25zappar_face_mesh_uvs_sizeP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z25zappar_face_mesh_verticesP19zappar_face_mesh_ti=function(){return c.asm.__Z25zappar_face_mesh_verticesP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z27zappar_face_landmark_updateP23zappar_face_landmark_tiPKfS2_i=function(){return c.asm.__Z27zappar_face_landmark_updateP23zappar_face_landmark_tiPKfS2_i.apply(null,arguments)};\nc.__Z29zappar_face_mesh_indices_sizeP19zappar_face_mesh_ti=function(){return c.asm.__Z29zappar_face_mesh_indices_sizeP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z29zappar_face_mesh_normals_sizeP19zappar_face_mesh_ti=function(){return c.asm.__Z29zappar_face_mesh_normals_sizeP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z30zappar_face_mesh_vertices_sizeP19zappar_face_mesh_ti=function(){return c.asm.__Z30zappar_face_mesh_vertices_sizeP19zappar_face_mesh_ti.apply(null,arguments)};\nc.__Z31zappar_face_mesh_loaded_versionP19zappar_face_mesh_ti=function(){return c.asm.__Z31zappar_face_mesh_loaded_versionP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z33zappar_face_mesh_load_from_memoryP19zappar_face_mesh_tiPKciiiii=function(){return c.asm.__Z33zappar_face_mesh_load_from_memoryP19zappar_face_mesh_tiPKciiiii.apply(null,arguments)};\nc.__Z40zappar_image_tracker_target_preview_rgbaP23zappar_image_tracker_tii=function(){return c.asm.__Z40zappar_image_tracker_target_preview_rgbaP23zappar_image_tracker_tii.apply(null,arguments)};c.__Z42zappar_image_tracker_target_load_from_fileP23zappar_image_tracker_tiPKc=function(){return c.asm.__Z42zappar_image_tracker_target_load_from_fileP23zappar_image_tracker_tiPKc.apply(null,arguments)};\nc.__Z45zappar_image_tracker_target_preview_rgba_sizeP23zappar_image_tracker_tii=function(){return c.asm.__Z45zappar_image_tracker_target_preview_rgba_sizeP23zappar_image_tracker_tii.apply(null,arguments)};c.__Z46zappar_image_tracker_target_preview_compressedP23zappar_image_tracker_tii=function(){return c.asm.__Z46zappar_image_tracker_target_preview_compressedP23zappar_image_tracker_tii.apply(null,arguments)};\nc.__Z46zappar_image_tracker_target_preview_rgba_widthP23zappar_image_tracker_tii=function(){return c.asm.__Z46zappar_image_tracker_target_preview_rgba_widthP23zappar_image_tracker_tii.apply(null,arguments)};c.__Z47zappar_image_tracker_target_preview_rgba_heightP23zappar_image_tracker_tii=function(){return c.asm.__Z47zappar_image_tracker_target_preview_rgba_heightP23zappar_image_tracker_tii.apply(null,arguments)};\nc.__Z51zappar_image_tracker_target_preview_compressed_sizeP23zappar_image_tracker_tii=function(){return c.asm.__Z51zappar_image_tracker_target_preview_compressed_sizeP23zappar_image_tracker_tii.apply(null,arguments)};c.__Z55zappar_image_tracker_target_preview_compressed_mimetypeP23zappar_image_tracker_tii=function(){return c.asm.__Z55zappar_image_tracker_target_preview_compressed_mimetypeP23zappar_image_tracker_tii.apply(null,arguments)};\nvar me=c.__ZSt18uncaught_exceptionv=function(){return c.asm.__ZSt18uncaught_exceptionv.apply(null,arguments)};c.___cxa_can_catch=function(){return c.asm.___cxa_can_catch.apply(null,arguments)};c.___cxa_is_pointer_type=function(){return c.asm.___cxa_is_pointer_type.apply(null,arguments)};c.___em_js__emidentity=function(){return c.asm.___em_js__emidentity.apply(null,arguments)};c.___em_js__emlicerr=function(){return c.asm.___em_js__emlicerr.apply(null,arguments)};\nvar kb=c.___emscripten_environ_constructor=function(){return c.asm.___emscripten_environ_constructor.apply(null,arguments)};c.___errno_location=function(){return c.asm.___errno_location.apply(null,arguments)};c.__get_environ=function(){return c.asm.__get_environ.apply(null,arguments)};var Ma=c._emscripten_replace_memory=function(){return c.asm._emscripten_replace_memory.apply(null,arguments)},Lb=c._free=function(){return c.asm._free.apply(null,arguments)};\nc._llvm_bswap_i32=function(){return c.asm._llvm_bswap_i32.apply(null,arguments)};c._llvm_round_f32=function(){return c.asm._llvm_round_f32.apply(null,arguments)};c._llvm_round_f64=function(){return c.asm._llvm_round_f64.apply(null,arguments)};var M=c._malloc=function(){return c.asm._malloc.apply(null,arguments)};c._memcpy=function(){return c.asm._memcpy.apply(null,arguments)};c._memmove=function(){return c.asm._memmove.apply(null,arguments)};c._memset=function(){return c.asm._memset.apply(null,arguments)};\nc._pthread_cond_broadcast=function(){return c.asm._pthread_cond_broadcast.apply(null,arguments)};c._pthread_mutex_lock=function(){return c.asm._pthread_mutex_lock.apply(null,arguments)};c._pthread_mutex_unlock=function(){return c.asm._pthread_mutex_unlock.apply(null,arguments)};c._round=function(){return c.asm._round.apply(null,arguments)};c._sbrk=function(){return c.asm._sbrk.apply(null,arguments)};\nc._zappar_analytics_project_id_set=function(){return c.asm._zappar_analytics_project_id_set.apply(null,arguments)};c._zappar_barcode_finder_create=function(){return c.asm._zappar_barcode_finder_create.apply(null,arguments)};c._zappar_barcode_finder_destroy=function(){return c.asm._zappar_barcode_finder_destroy.apply(null,arguments)};c._zappar_barcode_finder_enabled=function(){return c.asm._zappar_barcode_finder_enabled.apply(null,arguments)};\nc._zappar_barcode_finder_enabled_set=function(){return c.asm._zappar_barcode_finder_enabled_set.apply(null,arguments)};c._zappar_barcode_finder_formats=function(){return c.asm._zappar_barcode_finder_formats.apply(null,arguments)};c._zappar_barcode_finder_formats_set=function(){return c.asm._zappar_barcode_finder_formats_set.apply(null,arguments)};c._zappar_barcode_finder_found_format=function(){return c.asm._zappar_barcode_finder_found_format.apply(null,arguments)};\nc._zappar_barcode_finder_found_number=function(){return c.asm._zappar_barcode_finder_found_number.apply(null,arguments)};c._zappar_barcode_finder_found_text=function(){return c.asm._zappar_barcode_finder_found_text.apply(null,arguments)};c._zappar_camera_default_device_id=function(){return c.asm._zappar_camera_default_device_id.apply(null,arguments)};c._zappar_camera_source_create=function(){return c.asm._zappar_camera_source_create.apply(null,arguments)};\nc._zappar_camera_source_destroy=function(){return c.asm._zappar_camera_source_destroy.apply(null,arguments)};c._zappar_camera_source_pause=function(){return c.asm._zappar_camera_source_pause.apply(null,arguments)};c._zappar_camera_source_start=function(){return c.asm._zappar_camera_source_start.apply(null,arguments)};c._zappar_face_landmark_anchor_pose=function(){return c.asm._zappar_face_landmark_anchor_pose.apply(null,arguments)};\nc._zappar_face_landmark_create=function(){return c.asm._zappar_face_landmark_create.apply(null,arguments)};c._zappar_face_landmark_destroy=function(){return c.asm._zappar_face_landmark_destroy.apply(null,arguments)};c._zappar_face_mesh_create=function(){return c.asm._zappar_face_mesh_create.apply(null,arguments)};c._zappar_face_mesh_destroy=function(){return c.asm._zappar_face_mesh_destroy.apply(null,arguments)};\nc._zappar_face_tracker_anchor_count=function(){return c.asm._zappar_face_tracker_anchor_count.apply(null,arguments)};c._zappar_face_tracker_anchor_expression_coefficients=function(){return c.asm._zappar_face_tracker_anchor_expression_coefficients.apply(null,arguments)};c._zappar_face_tracker_anchor_id=function(){return c.asm._zappar_face_tracker_anchor_id.apply(null,arguments)};\nc._zappar_face_tracker_anchor_identity_coefficients=function(){return c.asm._zappar_face_tracker_anchor_identity_coefficients.apply(null,arguments)};c._zappar_face_tracker_anchor_pose_raw=function(){return c.asm._zappar_face_tracker_anchor_pose_raw.apply(null,arguments)};c._zappar_face_tracker_create=function(){return c.asm._zappar_face_tracker_create.apply(null,arguments)};c._zappar_face_tracker_destroy=function(){return c.asm._zappar_face_tracker_destroy.apply(null,arguments)};\nc._zappar_face_tracker_enabled=function(){return c.asm._zappar_face_tracker_enabled.apply(null,arguments)};c._zappar_face_tracker_enabled_set=function(){return c.asm._zappar_face_tracker_enabled_set.apply(null,arguments)};c._zappar_face_tracker_max_faces=function(){return c.asm._zappar_face_tracker_max_faces.apply(null,arguments)};c._zappar_face_tracker_max_faces_set=function(){return c.asm._zappar_face_tracker_max_faces_set.apply(null,arguments)};\nc._zappar_face_tracker_model_load_from_memory=function(){return c.asm._zappar_face_tracker_model_load_from_memory.apply(null,arguments)};c._zappar_face_tracker_model_loaded_version=function(){return c.asm._zappar_face_tracker_model_loaded_version.apply(null,arguments)};c._zappar_has_initialized=function(){return c.asm._zappar_has_initialized.apply(null,arguments)};c._zappar_image_tracker_anchor_count=function(){return c.asm._zappar_image_tracker_anchor_count.apply(null,arguments)};\nc._zappar_image_tracker_anchor_id=function(){return c.asm._zappar_image_tracker_anchor_id.apply(null,arguments)};c._zappar_image_tracker_anchor_pose_raw=function(){return c.asm._zappar_image_tracker_anchor_pose_raw.apply(null,arguments)};c._zappar_image_tracker_create=function(){return c.asm._zappar_image_tracker_create.apply(null,arguments)};c._zappar_image_tracker_destroy=function(){return c.asm._zappar_image_tracker_destroy.apply(null,arguments)};\nc._zappar_image_tracker_enabled=function(){return c.asm._zappar_image_tracker_enabled.apply(null,arguments)};c._zappar_image_tracker_enabled_set=function(){return c.asm._zappar_image_tracker_enabled_set.apply(null,arguments)};c._zappar_image_tracker_target_count=function(){return c.asm._zappar_image_tracker_target_count.apply(null,arguments)};c._zappar_image_tracker_target_load_from_memory=function(){return c.asm._zappar_image_tracker_target_load_from_memory.apply(null,arguments)};\nc._zappar_image_tracker_target_loaded_version=function(){return c.asm._zappar_image_tracker_target_loaded_version.apply(null,arguments)};c._zappar_instant_world_tracker_anchor_pose_raw=function(){return c.asm._zappar_instant_world_tracker_anchor_pose_raw.apply(null,arguments)};c._zappar_instant_world_tracker_anchor_pose_set_from_camera_offset=function(){return c.asm._zappar_instant_world_tracker_anchor_pose_set_from_camera_offset.apply(null,arguments)};\nc._zappar_instant_world_tracker_create=function(){return c.asm._zappar_instant_world_tracker_create.apply(null,arguments)};c._zappar_instant_world_tracker_destroy=function(){return c.asm._zappar_instant_world_tracker_destroy.apply(null,arguments)};c._zappar_instant_world_tracker_enabled=function(){return c.asm._zappar_instant_world_tracker_enabled.apply(null,arguments)};c._zappar_instant_world_tracker_enabled_set=function(){return c.asm._zappar_instant_world_tracker_enabled_set.apply(null,arguments)};\nc._zappar_invert=function(){return c.asm._zappar_invert.apply(null,arguments)};c._zappar_log_level=function(){return c.asm._zappar_log_level.apply(null,arguments)};c._zappar_log_level_set=function(){return c.asm._zappar_log_level_set.apply(null,arguments)};c._zappar_pipeline_camera_frame_camera_attitude=function(){return c.asm._zappar_pipeline_camera_frame_camera_attitude.apply(null,arguments)};\nc._zappar_pipeline_camera_frame_submit=function(){return c.asm._zappar_pipeline_camera_frame_submit.apply(null,arguments)};c._zappar_pipeline_camera_frame_texture_gl=function(){return c.asm._zappar_pipeline_camera_frame_texture_gl.apply(null,arguments)};c._zappar_pipeline_camera_frame_texture_matrix=function(){return c.asm._zappar_pipeline_camera_frame_texture_matrix.apply(null,arguments)};\nc._zappar_pipeline_camera_frame_upload_gl=function(){return c.asm._zappar_pipeline_camera_frame_upload_gl.apply(null,arguments)};c._zappar_pipeline_camera_frame_user_data=function(){return c.asm._zappar_pipeline_camera_frame_user_data.apply(null,arguments)};c._zappar_pipeline_camera_frame_user_facing=function(){return c.asm._zappar_pipeline_camera_frame_user_facing.apply(null,arguments)};c._zappar_pipeline_camera_model=function(){return c.asm._zappar_pipeline_camera_model.apply(null,arguments)};\nc._zappar_pipeline_camera_pose_default=function(){return c.asm._zappar_pipeline_camera_pose_default.apply(null,arguments)};c._zappar_pipeline_camera_pose_with_attitude=function(){return c.asm._zappar_pipeline_camera_pose_with_attitude.apply(null,arguments)};c._zappar_pipeline_camera_pose_with_origin=function(){return c.asm._zappar_pipeline_camera_pose_with_origin.apply(null,arguments)};c._zappar_pipeline_create=function(){return c.asm._zappar_pipeline_create.apply(null,arguments)};\nc._zappar_pipeline_destroy=function(){return c.asm._zappar_pipeline_destroy.apply(null,arguments)};c._zappar_pipeline_frame_number=function(){return c.asm._zappar_pipeline_frame_number.apply(null,arguments)};c._zappar_pipeline_frame_update=function(){return c.asm._zappar_pipeline_frame_update.apply(null,arguments)};c._zappar_pipeline_motion_accelerometer_submit=function(){return c.asm._zappar_pipeline_motion_accelerometer_submit.apply(null,arguments)};\nc._zappar_pipeline_motion_attitude_submit=function(){return c.asm._zappar_pipeline_motion_attitude_submit.apply(null,arguments)};c._zappar_pipeline_motion_rotation_rate_submit=function(){return c.asm._zappar_pipeline_motion_rotation_rate_submit.apply(null,arguments)};c._zappar_pipeline_process_gl=function(){return c.asm._zappar_pipeline_process_gl.apply(null,arguments)};c.establishStackSpace=function(){return c.asm.establishStackSpace.apply(null,arguments)};\nc.getTempRet0=function(){return c.asm.getTempRet0.apply(null,arguments)};c.runPostSets=function(){return c.asm.runPostSets.apply(null,arguments)};var Ob=c.setTempRet0=function(){return c.asm.setTempRet0.apply(null,arguments)};c.setThrew=function(){return c.asm.setThrew.apply(null,arguments)};\nvar ra=c.stackAlloc=function(){return c.asm.stackAlloc.apply(null,arguments)},C=c.stackRestore=function(){return c.asm.stackRestore.apply(null,arguments)},B=c.stackSave=function(){return c.asm.stackSave.apply(null,arguments)};c.dynCall_i=function(){return c.asm.dynCall_i.apply(null,arguments)};c.dynCall_ii=function(){return c.asm.dynCall_ii.apply(null,arguments)};c.dynCall_iii=function(){return c.asm.dynCall_iii.apply(null,arguments)};\nc.dynCall_iiii=function(){return c.asm.dynCall_iiii.apply(null,arguments)};c.dynCall_iiiii=function(){return c.asm.dynCall_iiiii.apply(null,arguments)};c.dynCall_iiiiid=function(){return c.asm.dynCall_iiiiid.apply(null,arguments)};c.dynCall_iiiiii=function(){return c.asm.dynCall_iiiiii.apply(null,arguments)};c.dynCall_iiiiiid=function(){return c.asm.dynCall_iiiiiid.apply(null,arguments)};c.dynCall_iiiiiii=function(){return c.asm.dynCall_iiiiiii.apply(null,arguments)};\nc.dynCall_iiiiiiii=function(){return c.asm.dynCall_iiiiiiii.apply(null,arguments)};c.dynCall_iiiiiiiii=function(){return c.asm.dynCall_iiiiiiiii.apply(null,arguments)};c.dynCall_iiiiij=function(){return c.asm.dynCall_iiiiij.apply(null,arguments)};c.dynCall_iiji=function(){return c.asm.dynCall_iiji.apply(null,arguments)};c.dynCall_v=function(){return c.asm.dynCall_v.apply(null,arguments)};c.dynCall_vi=function(){return c.asm.dynCall_vi.apply(null,arguments)};\nc.dynCall_vii=function(){return c.asm.dynCall_vii.apply(null,arguments)};c.dynCall_viiffii=function(){return c.asm.dynCall_viiffii.apply(null,arguments)};c.dynCall_viii=function(){return c.asm.dynCall_viii.apply(null,arguments)};c.dynCall_viiifffii=function(){return c.asm.dynCall_viiifffii.apply(null,arguments)};c.dynCall_viiiffii=function(){return c.asm.dynCall_viiiffii.apply(null,arguments)};c.dynCall_viiii=function(){return c.asm.dynCall_viiii.apply(null,arguments)};\nc.dynCall_viiiii=function(){return c.asm.dynCall_viiiii.apply(null,arguments)};c.dynCall_viiiiiffffffffffffffff=function(){return c.asm.dynCall_viiiiiffffffffffffffff.apply(null,arguments)};c.dynCall_viiiiii=function(){return c.asm.dynCall_viiiiii.apply(null,arguments)};c.dynCall_viijii=function(){return c.asm.dynCall_viijii.apply(null,arguments)};c.dynCall_vij=function(){return c.asm.dynCall_vij.apply(null,arguments)};c.dynCall_viji=function(){return c.asm.dynCall_viji.apply(null,arguments)};\nc.dynCall_vijii=function(){return c.asm.dynCall_vijii.apply(null,arguments)};c.asm=ne;c.cwrap=function(a,b,d,e){d=d||[];var f=d.every(function(a){return\"number\"===a});return\"string\"!==b&&f&&!e?qa(a):function(){var e=d,f=arguments,k=qa(a),m=[],q=0;if(f)for(var r=0;r<f.length;r++){var w=ta[e[r]];w?(0===q&&(q=B()),m[r]=w(f[r])):m[r]=f[r]}e=k.apply(null,m);e=\"string\"===b?H(e):\"boolean\"===b?!!e:e;0!==q&&C(q);return e}};\nc.setValue=function(a,b,d){d=d||\"i8\";\"*\"===d.charAt(d.length-1)&&(d=\"i32\");switch(d){case \"i1\":D[a>>0]=b;break;case \"i8\":D[a>>0]=b;break;case \"i16\":Ca[a>>1]=b;break;case \"i32\":v[a>>2]=b;break;case \"i64\":tempI64=[b>>>0,(tempDouble=b,1<=+Xa(tempDouble)?0<tempDouble?($a(+Za(tempDouble/4294967296),4294967295)|0)>>>0:~~+Ya((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)];v[a>>2]=tempI64[0];v[a+4>>2]=tempI64[1];break;case \"float\":Da[a>>2]=b;break;case \"double\":Ea[a>>3]=b;break;default:z(\"invalid type for setValue: \"+\nd)}};c.getValue=function(a,b){b=b||\"i8\";\"*\"===b.charAt(b.length-1)&&(b=\"i32\");switch(b){case \"i1\":return D[a>>0];case \"i8\":return D[a>>0];case \"i16\":return Ca[a>>1];case \"i32\":return v[a>>2];case \"i64\":return v[a>>2];case \"float\":return Da[a>>2];case \"double\":return Ea[a>>3];default:z(\"invalid type for getValue: \"+b)}return null};c.UTF8ToString=ua;c.then=function(a){if(c.calledRun)a(c);else{var b=c.onRuntimeInitialized;c.onRuntimeInitialized=function(){b&&b();a(c)}}return c};\ncb=function oe(){c.calledRun||pe();c.calledRun||(cb=oe)};\nfunction pe(){function a(){if(!c.calledRun&&(c.calledRun=!0,!pa)){Va||(Va=!0,Pa(Ra));Pa(Sa);if(c.onRuntimeInitialized)c.onRuntimeInitialized();if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var a=c.postRun.shift();Ua.unshift(a)}Pa(Ua)}}if(!(0<ab)){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)Wa();Pa(Qa);0<ab||c.calledRun||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){c.setStatus(\"\")},\n1);a()},1)):a())}}c.run=pe;function z(a){if(c.onAbort)c.onAbort(a);void 0!==a?(ca(a),p(a),a=JSON.stringify(a)):a=\"\";pa=!0;throw\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\";}c.abort=z;if(c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();c.noExitRuntime=!0;pe();\n\n\n  return ZCV;\n}\n);\n})();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ZCV);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL3pjdi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0B6YXBwYXIvemFwcGFyLXRocmVlanMvLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL3pjdi5qcz8yYmM0Il0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIFpDViA9IChmdW5jdGlvbigpIHtcbiAgdmFyIF9zY3JpcHREaXIgPSB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIGRvY3VtZW50LmN1cnJlbnRTY3JpcHQgPyBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYyA6IHVuZGVmaW5lZDtcbiAgcmV0dXJuIChcbmZ1bmN0aW9uKFpDVikge1xuICBaQ1YgPSBaQ1YgfHwge307XG5cbnZhciBjO2N8fChjPXR5cGVvZiBaQ1YgIT09ICd1bmRlZmluZWQnID8gWkNWIDoge30pO3ZhciBhYT17fSxsO2ZvcihsIGluIGMpYy5oYXNPd25Qcm9wZXJ0eShsKSYmKGFhW2xdPWNbbF0pO2MuYXJndW1lbnRzPVtdO2MudGhpc1Byb2dyYW09XCIuL3RoaXMucHJvZ3JhbVwiO2MucXVpdD1mdW5jdGlvbihhLGIpe3Rocm93IGI7fTtjLnByZVJ1bj1bXTtjLnBvc3RSdW49W107dmFyIG49XCJcIjtmdW5jdGlvbiBiYShhKXtyZXR1cm4gYy5sb2NhdGVGaWxlP2MubG9jYXRlRmlsZShhLG4pOm4rYX1uPXNlbGYubG9jYXRpb24uaHJlZjtfc2NyaXB0RGlyJiYobj1fc2NyaXB0RGlyKTswIT09bi5pbmRleE9mKFwiYmxvYjpcIik/bj1uLnN1YnN0cigwLG4ubGFzdEluZGV4T2YoXCIvXCIpKzEpOm49XCJcIjtjLnJlYWQ9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IFhNTEh0dHBSZXF1ZXN0O2Iub3BlbihcIkdFVFwiLGEsITEpO2Iuc2VuZChudWxsKTtyZXR1cm4gYi5yZXNwb25zZVRleHR9O1xuYy5yZWFkQmluYXJ5PWZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBYTUxIdHRwUmVxdWVzdDtiLm9wZW4oXCJHRVRcIixhLCExKTtiLnJlc3BvbnNlVHlwZT1cImFycmF5YnVmZmVyXCI7Yi5zZW5kKG51bGwpO3JldHVybiBuZXcgVWludDhBcnJheShiLnJlc3BvbnNlKX07Yy5yZWFkQXN5bmM9ZnVuY3Rpb24oYSxiLGQpe3ZhciBlPW5ldyBYTUxIdHRwUmVxdWVzdDtlLm9wZW4oXCJHRVRcIixhLCEwKTtlLnJlc3BvbnNlVHlwZT1cImFycmF5YnVmZmVyXCI7ZS5vbmxvYWQ9ZnVuY3Rpb24oKXsyMDA9PWUuc3RhdHVzfHwwPT1lLnN0YXR1cyYmZS5yZXNwb25zZT9iKGUucmVzcG9uc2UpOmQoKX07ZS5vbmVycm9yPWQ7ZS5zZW5kKG51bGwpfTtjLnNldFdpbmRvd1RpdGxlPWZ1bmN0aW9uKGEpe2RvY3VtZW50LnRpdGxlPWF9O1xudmFyIGNhPWMucHJpbnR8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGU/Y29uc29sZS5sb2cuYmluZChjb25zb2xlKTpcInVuZGVmaW5lZFwiIT09dHlwZW9mIHByaW50P3ByaW50Om51bGwpLHA9Yy5wcmludEVycnx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgcHJpbnRFcnI/cHJpbnRFcnI6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiZjb25zb2xlLndhcm4uYmluZChjb25zb2xlKXx8Y2EpO2ZvcihsIGluIGFhKWFhLmhhc093blByb3BlcnR5KGwpJiYoY1tsXT1hYVtsXSk7YWE9dm9pZCAwO2Z1bmN0aW9uIGRhKGEpe3ZhciBiPXU7dT11K2ErMTUmLTE2O3JldHVybiBifWZ1bmN0aW9uIGVhKGEpe3ZhciBiPXZbeD4+Ml07YT1iK2ErMTUmLTE2O3ZbeD4+Ml09YTtyZXR1cm4gYT49eSYmIWZhKCk/KHZbeD4+Ml09YiwwKTpifWZ1bmN0aW9uIGhhKGEpe3ZhciBiO2J8fChiPTE2KTtyZXR1cm4gTWF0aC5jZWlsKGEvYikqYn1cbmZ1bmN0aW9uIGlhKGEpe2phfHwoamE9e30pO2phW2FdfHwoamFbYV09MSxwKGEpKX12YXIgamEsa2E9e1wiZjY0LXJlbVwiOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGElYn0sXCJkZWJ1Z2dlclwiOmZ1bmN0aW9uKCl7ZGVidWdnZXJ9fSxsYT17fTtmdW5jdGlvbiBtYShhKXtpZihhKXthc3NlcnQoXCJ2aVwiKTtsYS52aXx8KGxhLnZpPXt9KTt2YXIgYj1sYS52aTtiW2FdfHwoYlthXT1mdW5jdGlvbihiKXtyZXR1cm4gbmEoXCJ2aVwiLGEsW2JdKX0pO3JldHVybiBiW2FdfX1mdW5jdGlvbiBuYShhLGIsZCl7cmV0dXJuIGQmJmQubGVuZ3RoP2NbXCJkeW5DYWxsX1wiK2FdLmFwcGx5KG51bGwsW2JdLmNvbmNhdChkKSk6Y1tcImR5bkNhbGxfXCIrYV0uY2FsbChudWxsLGIpfXZhciBwYT0hMTtmdW5jdGlvbiBhc3NlcnQoYSxiKXthfHx6KFwiQXNzZXJ0aW9uIGZhaWxlZDogXCIrYil9XG5mdW5jdGlvbiBxYShhKXt2YXIgYj1jW1wiX1wiK2FdO2Fzc2VydChiLFwiQ2Fubm90IGNhbGwgdW5rbm93biBmdW5jdGlvbiBcIithK1wiLCBtYWtlIHN1cmUgaXQgaXMgZXhwb3J0ZWRcIik7cmV0dXJuIGJ9dmFyIHNhPXtzdGFja1NhdmU6ZnVuY3Rpb24oKXtCKCl9LHN0YWNrUmVzdG9yZTpmdW5jdGlvbigpe0MoKX0sYXJyYXlUb0M6ZnVuY3Rpb24oYSl7dmFyIGI9cmEoYS5sZW5ndGgpO0Quc2V0KGEsYik7cmV0dXJuIGJ9LHN0cmluZ1RvQzpmdW5jdGlvbihhKXt2YXIgYj0wO2lmKG51bGwhPT1hJiZ2b2lkIDAhPT1hJiYwIT09YSl7dmFyIGQ9KGEubGVuZ3RoPDwyKSsxO2I9cmEoZCk7RShhLEcsYixkKX1yZXR1cm4gYn19LHRhPXtzdHJpbmc6c2Euc3RyaW5nVG9DLGFycmF5OnNhLmFycmF5VG9DfTtcbmZ1bmN0aW9uIEgoYSl7dmFyIGI7aWYoMD09PWJ8fCFhKXJldHVyblwiXCI7Zm9yKHZhciBkPTAsZSxmPTA7Oyl7ZT1HW2ErZj4+MF07ZHw9ZTtpZigwPT1lJiYhYilicmVhaztmKys7aWYoYiYmZj09YilicmVha31ifHwoYj1mKTtlPVwiXCI7aWYoMTI4PmQpe2Zvcig7MDxiOylkPVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLEcuc3ViYXJyYXkoYSxhK01hdGgubWluKGIsMTAyNCkpKSxlPWU/ZStkOmQsYSs9MTAyNCxiLT0xMDI0O3JldHVybiBlfXJldHVybiB1YShhKX12YXIgdmE9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBUZXh0RGVjb2Rlcj9uZXcgVGV4dERlY29kZXIoXCJ1dGY4XCIpOnZvaWQgMDtcbmZ1bmN0aW9uIHdhKGEsYil7Zm9yKHZhciBkPWI7YVtkXTspKytkO2lmKDE2PGQtYiYmYS5zdWJhcnJheSYmdmEpcmV0dXJuIHZhLmRlY29kZShhLnN1YmFycmF5KGIsZCkpO2ZvcihkPVwiXCI7Oyl7dmFyIGU9YVtiKytdO2lmKCFlKXJldHVybiBkO2lmKGUmMTI4KXt2YXIgZj1hW2IrK10mNjM7aWYoMTkyPT0oZSYyMjQpKWQrPVN0cmluZy5mcm9tQ2hhckNvZGUoKGUmMzEpPDw2fGYpO2Vsc2V7dmFyIGc9YVtiKytdJjYzO2lmKDIyND09KGUmMjQwKSllPShlJjE1KTw8MTJ8Zjw8NnxnO2Vsc2V7dmFyIGg9YVtiKytdJjYzO2lmKDI0MD09KGUmMjQ4KSllPShlJjcpPDwxOHxmPDwxMnxnPDw2fGg7ZWxzZXt2YXIgaz1hW2IrK10mNjM7aWYoMjQ4PT0oZSYyNTIpKWU9KGUmMyk8PDI0fGY8PDE4fGc8PDEyfGg8PDZ8aztlbHNle3ZhciBtPWFbYisrXSY2MztlPShlJjEpPDwzMHxmPDwyNHxnPDwxOHxoPDwxMnxrPDw2fG19fX02NTUzNj5lP2QrPVN0cmluZy5mcm9tQ2hhckNvZGUoZSk6KGUtPVxuNjU1MzYsZCs9U3RyaW5nLmZyb21DaGFyQ29kZSg1NTI5NnxlPj4xMCw1NjMyMHxlJjEwMjMpKX19ZWxzZSBkKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGUpfX1mdW5jdGlvbiB1YShhKXtyZXR1cm4gd2EoRyxhKX1cbmZ1bmN0aW9uIEUoYSxiLGQsZSl7aWYoISgwPGUpKXJldHVybiAwO3ZhciBmPWQ7ZT1kK2UtMTtmb3IodmFyIGc9MDtnPGEubGVuZ3RoOysrZyl7dmFyIGg9YS5jaGFyQ29kZUF0KGcpO2lmKDU1Mjk2PD1oJiY1NzM0Mz49aCl7dmFyIGs9YS5jaGFyQ29kZUF0KCsrZyk7aD02NTUzNisoKGgmMTAyMyk8PDEwKXxrJjEwMjN9aWYoMTI3Pj1oKXtpZihkPj1lKWJyZWFrO2JbZCsrXT1ofWVsc2V7aWYoMjA0Nz49aCl7aWYoZCsxPj1lKWJyZWFrO2JbZCsrXT0xOTJ8aD4+Nn1lbHNle2lmKDY1NTM1Pj1oKXtpZihkKzI+PWUpYnJlYWs7YltkKytdPTIyNHxoPj4xMn1lbHNle2lmKDIwOTcxNTE+PWgpe2lmKGQrMz49ZSlicmVhaztiW2QrK109MjQwfGg+PjE4fWVsc2V7aWYoNjcxMDg4NjM+PWgpe2lmKGQrND49ZSlicmVhaztiW2QrK109MjQ4fGg+PjI0fWVsc2V7aWYoZCs1Pj1lKWJyZWFrO2JbZCsrXT0yNTJ8aD4+MzA7YltkKytdPTEyOHxoPj4yNCY2M31iW2QrK109MTI4fGg+PjE4JjYzfWJbZCsrXT1cbjEyOHxoPj4xMiY2M31iW2QrK109MTI4fGg+PjYmNjN9YltkKytdPTEyOHxoJjYzfX1iW2RdPTA7cmV0dXJuIGQtZn1mdW5jdGlvbiB4YShhKXtmb3IodmFyIGI9MCxkPTA7ZDxhLmxlbmd0aDsrK2Qpe3ZhciBlPWEuY2hhckNvZGVBdChkKTs1NTI5Njw9ZSYmNTczNDM+PWUmJihlPTY1NTM2KygoZSYxMDIzKTw8MTApfGEuY2hhckNvZGVBdCgrK2QpJjEwMjMpOzEyNz49ZT8rK2I6Yj0yMDQ3Pj1lP2IrMjo2NTUzNT49ZT9iKzM6MjA5NzE1MT49ZT9iKzQ6NjcxMDg4NjM+PWU/Yis1OmIrNn1yZXR1cm4gYn1cInVuZGVmaW5lZFwiIT09dHlwZW9mIFRleHREZWNvZGVyJiZuZXcgVGV4dERlY29kZXIoXCJ1dGYtMTZsZVwiKTt2YXIgeWE9NjU1MzYsemE9MTY3NzcyMTYsQWE9MTY3NzcyMTY7ZnVuY3Rpb24gQmEoYSxiKXswPGElYiYmKGErPWItYSViKTtyZXR1cm4gYX12YXIgYnVmZmVyLEQsRyxDYSxKLHYsSyxEYSxFYTtcbmZ1bmN0aW9uIEZhKCl7Yy5IRUFQOD1EPW5ldyBJbnQ4QXJyYXkoYnVmZmVyKTtjLkhFQVAxNj1DYT1uZXcgSW50MTZBcnJheShidWZmZXIpO2MuSEVBUDMyPXY9bmV3IEludDMyQXJyYXkoYnVmZmVyKTtjLkhFQVBVOD1HPW5ldyBVaW50OEFycmF5KGJ1ZmZlcik7Yy5IRUFQVTE2PUo9bmV3IFVpbnQxNkFycmF5KGJ1ZmZlcik7Yy5IRUFQVTMyPUs9bmV3IFVpbnQzMkFycmF5KGJ1ZmZlcik7Yy5IRUFQRjMyPURhPW5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyKTtjLkhFQVBGNjQ9RWE9bmV3IEZsb2F0NjRBcnJheShidWZmZXIpfXZhciBHYSx1LEhhLElhLEphLEthLExhLHg7R2E9dT1JYT1KYT1LYT1MYT14PTA7SGE9ITE7Yy5yZWFsbG9jQnVmZmVyfHwoYy5yZWFsbG9jQnVmZmVyPWZ1bmN0aW9uKGEpe3RyeXt2YXIgYj1EO3ZhciBkPW5ldyBBcnJheUJ1ZmZlcihhKTsobmV3IEludDhBcnJheShkKSkuc2V0KGIpfWNhdGNoKGUpe3JldHVybiExfXJldHVybiBNYShkKT9kOiExfSk7XG5mdW5jdGlvbiBmYSgpe3ZhciBhPWMudXNpbmdXYXNtP3lhOnphLGI9MjE0NzQ4MzY0OC1hO2lmKHZbeD4+Ml0+YilyZXR1cm4hMTt2YXIgZD15O2Zvcih5PU1hdGgubWF4KHksQWEpO3k8dlt4Pj4yXTspNTM2ODcwOTEyPj15P3k9QmEoMip5LGEpOnk9TWF0aC5taW4oQmEoKDMqeSsyMTQ3NDgzNjQ4KS80LGEpLGIpO2E9Yy5yZWFsbG9jQnVmZmVyKHkpO2lmKCFhfHxhLmJ5dGVMZW5ndGghPXkpcmV0dXJuIHk9ZCwhMTtjLmJ1ZmZlcj1idWZmZXI9YTtGYSgpO3JldHVybiEwfXZhciBOYTt0cnl7TmE9RnVuY3Rpb24ucHJvdG90eXBlLmNhbGwuYmluZChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEFycmF5QnVmZmVyLnByb3RvdHlwZSxcImJ5dGVMZW5ndGhcIikuZ2V0KSxOYShuZXcgQXJyYXlCdWZmZXIoNCkpfWNhdGNoKGEpe05hPWZ1bmN0aW9uKGIpe3JldHVybiBiLmJ5dGVMZW5ndGh9fVxudmFyIE9hPWMuVE9UQUxfU1RBQ0t8fDUyNDI4ODAseT1jLlRPVEFMX01FTU9SWXx8MTY3NzcyMTY7eTxPYSYmcChcIlRPVEFMX01FTU9SWSBzaG91bGQgYmUgbGFyZ2VyIHRoYW4gVE9UQUxfU1RBQ0ssIHdhcyBcIit5K1wiISAoVE9UQUxfU1RBQ0s9XCIrT2ErXCIpXCIpO2MuYnVmZmVyP2J1ZmZlcj1jLmJ1ZmZlcjooXCJvYmplY3RcIj09PXR5cGVvZiBXZWJBc3NlbWJseSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYkFzc2VtYmx5Lk1lbW9yeT8oYy53YXNtTWVtb3J5PW5ldyBXZWJBc3NlbWJseS5NZW1vcnkoe2luaXRpYWw6eS95YX0pLGJ1ZmZlcj1jLndhc21NZW1vcnkuYnVmZmVyKTpidWZmZXI9bmV3IEFycmF5QnVmZmVyKHkpLGMuYnVmZmVyPWJ1ZmZlcik7RmEoKTtcbmZ1bmN0aW9uIFBhKGEpe2Zvcig7MDxhLmxlbmd0aDspe3ZhciBiPWEuc2hpZnQoKTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBiKWIoKTtlbHNle3ZhciBkPWIuZztcIm51bWJlclwiPT09dHlwZW9mIGQ/dm9pZCAwPT09Yi5QP2MuZHluQ2FsbF92KGQpOmMuZHluQ2FsbF92aShkLGIuUCk6ZCh2b2lkIDA9PT1iLlA/bnVsbDpiLlApfX19dmFyIFFhPVtdLFJhPVtdLFNhPVtdLFRhPVtdLFVhPVtdLFZhPSExO2Z1bmN0aW9uIFdhKCl7dmFyIGE9Yy5wcmVSdW4uc2hpZnQoKTtRYS51bnNoaWZ0KGEpfXZhciBYYT1NYXRoLmFicyxZYT1NYXRoLmNlaWwsWmE9TWF0aC5mbG9vciwkYT1NYXRoLm1pbixhYj0wLGJiPW51bGwsY2I9bnVsbDtmdW5jdGlvbiBkYigpe2FiKys7Yy5tb25pdG9yUnVuRGVwZW5kZW5jaWVzJiZjLm1vbml0b3JSdW5EZXBlbmRlbmNpZXMoYWIpfVxuZnVuY3Rpb24gZWIoKXthYi0tO2MubW9uaXRvclJ1bkRlcGVuZGVuY2llcyYmYy5tb25pdG9yUnVuRGVwZW5kZW5jaWVzKGFiKTtpZigwPT1hYiYmKG51bGwhPT1iYiYmKGNsZWFySW50ZXJ2YWwoYmIpLGJiPW51bGwpLGNiKSl7dmFyIGE9Y2I7Y2I9bnVsbDthKCl9fWMucHJlbG9hZGVkSW1hZ2VzPXt9O2MucHJlbG9hZGVkQXVkaW9zPXt9O2Z1bmN0aW9uIGZiKGEpe3JldHVybiBTdHJpbmcucHJvdG90eXBlLnN0YXJ0c1dpdGg/YS5zdGFydHNXaXRoKFwiZGF0YTphcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07YmFzZTY0LFwiKTowPT09YS5pbmRleE9mKFwiZGF0YTphcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07YmFzZTY0LFwiKX1cbihmdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXt0cnl7aWYoYy53YXNtQmluYXJ5KXJldHVybiBuZXcgVWludDhBcnJheShjLndhc21CaW5hcnkpO2lmKGMucmVhZEJpbmFyeSlyZXR1cm4gYy5yZWFkQmluYXJ5KGYpO3Rocm93XCJib3RoIGFzeW5jIGFuZCBzeW5jIGZldGNoaW5nIG9mIHRoZSB3YXNtIGZhaWxlZFwiO31jYXRjaChyKXt6KHIpfX1mdW5jdGlvbiBiKCl7cmV0dXJuIGMud2FzbUJpbmFyeXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGZldGNoP25ldyBQcm9taXNlKGZ1bmN0aW9uKGIpe2IoYSgpKX0pOmZldGNoKGYse2NyZWRlbnRpYWxzOlwic2FtZS1vcmlnaW5cIn0pLnRoZW4oZnVuY3Rpb24oYSl7aWYoIWEub2spdGhyb3dcImZhaWxlZCB0byBsb2FkIHdhc20gYmluYXJ5IGZpbGUgYXQgJ1wiK2YrXCInXCI7cmV0dXJuIGEuYXJyYXlCdWZmZXIoKX0pLmNhdGNoKGZ1bmN0aW9uKCl7cmV0dXJuIGEoKX0pfWZ1bmN0aW9uIGQoYSl7ZnVuY3Rpb24gZChhKXtrPWEuZXhwb3J0cztpZihrLm1lbW9yeSl7YT1cbmsubWVtb3J5O3ZhciBiPWMuYnVmZmVyO2EuYnl0ZUxlbmd0aDxiLmJ5dGVMZW5ndGgmJnAoXCJ0aGUgbmV3IGJ1ZmZlciBpbiBtZXJnZU1lbW9yeSBpcyBzbWFsbGVyIHRoYW4gdGhlIHByZXZpb3VzIG9uZS4gaW4gbmF0aXZlIHdhc20sIHdlIHNob3VsZCBncm93IG1lbW9yeSBoZXJlXCIpO2I9bmV3IEludDhBcnJheShiKTsobmV3IEludDhBcnJheShhKSkuc2V0KGIpO2MuYnVmZmVyPWJ1ZmZlcj1hO0ZhKCl9Yy5hc209aztjLnVzaW5nV2FzbT0hMDtlYigpfWZ1bmN0aW9uIGUoYSl7ZChhLmluc3RhbmNlKX1mdW5jdGlvbiBnKGEpe2IoKS50aGVuKGZ1bmN0aW9uKGEpe3JldHVybiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShhLGgpfSkudGhlbihhLGZ1bmN0aW9uKGEpe3AoXCJmYWlsZWQgdG8gYXN5bmNocm9ub3VzbHkgcHJlcGFyZSB3YXNtOiBcIithKTt6KGEpfSl9aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBXZWJBc3NlbWJseSlyZXR1cm4gcChcIm5vIG5hdGl2ZSB3YXNtIHN1cHBvcnQgZGV0ZWN0ZWRcIiksXG4hMTtpZighKGMud2FzbU1lbW9yeSBpbnN0YW5jZW9mIFdlYkFzc2VtYmx5Lk1lbW9yeSkpcmV0dXJuIHAoXCJubyBuYXRpdmUgd2FzbSBNZW1vcnkgaW4gdXNlXCIpLCExO2EubWVtb3J5PWMud2FzbU1lbW9yeTtoLmdsb2JhbD17TmFOOk5hTixJbmZpbml0eTpJbmZpbml0eX07aFtcImdsb2JhbC5NYXRoXCJdPU1hdGg7aC5lbnY9YTtkYigpO2lmKGMuaW5zdGFudGlhdGVXYXNtKXRyeXtyZXR1cm4gYy5pbnN0YW50aWF0ZVdhc20oaCxkKX1jYXRjaChGKXtyZXR1cm4gcChcIk1vZHVsZS5pbnN0YW50aWF0ZVdhc20gY2FsbGJhY2sgZmFpbGVkIHdpdGggZXJyb3I6IFwiK0YpLCExfWMud2FzbUJpbmFyeXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlU3RyZWFtaW5nfHxmYihmKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGZldGNoP2coZSk6V2ViQXNzZW1ibHkuaW5zdGFudGlhdGVTdHJlYW1pbmcoZmV0Y2goZix7Y3JlZGVudGlhbHM6XCJzYW1lLW9yaWdpblwifSksaCkudGhlbihlLFxuZnVuY3Rpb24oYSl7cChcIndhc20gc3RyZWFtaW5nIGNvbXBpbGUgZmFpbGVkOiBcIithKTtwKFwiZmFsbGluZyBiYWNrIHRvIEFycmF5QnVmZmVyIGluc3RhbnRpYXRpb25cIik7ZyhlKX0pO3JldHVybnt9fXZhciBlPVwiemN2Lndhc3RcIixmPVwiemN2Lndhc21cIixnPVwiemN2LnRlbXAuYXNtLmpzXCI7ZmIoZSl8fChlPWJhKGUpKTtmYihmKXx8KGY9YmEoZikpO2ZiKGcpfHwoZz1iYShnKSk7dmFyIGg9e2dsb2JhbDpudWxsLGVudjpudWxsLGFzbTJ3YXNtOmthLHBhcmVudDpjfSxrPW51bGw7Yy5hc21QcmVsb2FkPWMuYXNtO3ZhciBtPWMucmVhbGxvY0J1ZmZlcjtjLnJlYWxsb2NCdWZmZXI9ZnVuY3Rpb24oYSl7aWYoXCJhc21qc1wiPT09cSl2YXIgYj1tKGEpO2Vsc2UgYTp7YT1CYShhLGMudXNpbmdXYXNtP3lhOnphKTt2YXIgZD1jLmJ1ZmZlci5ieXRlTGVuZ3RoO2lmKGMudXNpbmdXYXNtKXRyeXtiPS0xIT09Yy53YXNtTWVtb3J5Lmdyb3coKGEtZCkvNjU1MzYpP2MuYnVmZmVyPWMud2FzbU1lbW9yeS5idWZmZXI6XG5udWxsO2JyZWFrIGF9Y2F0Y2goSSl7Yj1udWxsO2JyZWFrIGF9Yj12b2lkIDB9cmV0dXJuIGJ9O3ZhciBxPVwiXCI7Yy5hc209ZnVuY3Rpb24oYSxiKXtpZighYi50YWJsZSl7YT1jLndhc21UYWJsZVNpemU7dm9pZCAwPT09YSYmKGE9MTAyNCk7dmFyIGU9Yy53YXNtTWF4VGFibGVTaXplO2IudGFibGU9XCJvYmplY3RcIj09PXR5cGVvZiBXZWJBc3NlbWJseSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYkFzc2VtYmx5LlRhYmxlP3ZvaWQgMCE9PWU/bmV3IFdlYkFzc2VtYmx5LlRhYmxlKHtpbml0aWFsOmEsbWF4aW11bTplLGVsZW1lbnQ6XCJhbnlmdW5jXCJ9KTpuZXcgV2ViQXNzZW1ibHkuVGFibGUoe2luaXRpYWw6YSxlbGVtZW50OlwiYW55ZnVuY1wifSk6QXJyYXkoYSk7Yy53YXNtVGFibGU9Yi50YWJsZX1iLl9fbWVtb3J5X2Jhc2V8fChiLl9fbWVtb3J5X2Jhc2U9Yy5TVEFUSUNfQkFTRSk7Yi5fX3RhYmxlX2Jhc2V8fChiLl9fdGFibGVfYmFzZT0wKTtiPWQoYik7YXNzZXJ0KGIsXCJubyBiaW5hcnllbiBtZXRob2Qgc3VjY2VlZGVkLlwiKTtcbnJldHVybiBifX0pKCk7dmFyIGdiPVtmdW5jdGlvbigpe2lmKHNlbGYuY3J5cHRvJiZzZWxmLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMpe3ZhciBhPW5ldyBVaW50MzJBcnJheSgxKTtzZWxmLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYSk7cmV0dXJuIGFbMF19cmV0dXJuIDkwMDcxOTkyNTQ3NDA5OTEqTWF0aC5yYW5kb20oKX1dO0dhPTEwMjQ7dT1HYSs0MzI2MDg7XG5SYS5wdXNoKHtnOmZ1bmN0aW9uKCl7aGIoKX19LHtnOmZ1bmN0aW9uKCl7aWIoKX19LHtnOmZ1bmN0aW9uKCl7amIoKX19LHtnOmZ1bmN0aW9uKCl7a2IoKX19LHtnOmZ1bmN0aW9uKCl7bGIoKX19LHtnOmZ1bmN0aW9uKCl7bWIoKX19LHtnOmZ1bmN0aW9uKCl7bmIoKX19LHtnOmZ1bmN0aW9uKCl7b2IoKX19LHtnOmZ1bmN0aW9uKCl7cGIoKX19LHtnOmZ1bmN0aW9uKCl7cWIoKX19LHtnOmZ1bmN0aW9uKCl7cmIoKX19LHtnOmZ1bmN0aW9uKCl7c2IoKX19LHtnOmZ1bmN0aW9uKCl7dGIoKX19LHtnOmZ1bmN0aW9uKCl7dWIoKX19LHtnOmZ1bmN0aW9uKCl7dmIoKX19LHtnOmZ1bmN0aW9uKCl7d2IoKX19LHtnOmZ1bmN0aW9uKCl7eGIoKX19LHtnOmZ1bmN0aW9uKCl7eWIoKX19LHtnOmZ1bmN0aW9uKCl7emIoKX19LHtnOmZ1bmN0aW9uKCl7QWIoKX19LHtnOmZ1bmN0aW9uKCl7QmIoKX19KTtjLlNUQVRJQ19CQVNFPUdhO2MuU1RBVElDX0JVTVA9NDMyNjA4O3ZhciBDYj11O3UrPTE2O1xudmFyIEw9e307XG5mdW5jdGlvbiBEYihhKXtpZihEYi5EYSl7dmFyIGI9dlthPj4yXTt2YXIgZD12W2I+PjJdfWVsc2UgRGIuRGE9ITAsTC5VU0VSPUwuTE9HTkFNRT1cIndlYl91c2VyXCIsTC5QQVRIPVwiL1wiLEwuUFdEPVwiL1wiLEwuSE9NRT1cIi9ob21lL3dlYl91c2VyXCIsTC5MQU5HPVwiQy5VVEYtOFwiLEwuXz1jLnRoaXNQcm9ncmFtLGQ9SGE/VmE/TSgxMDI0KTplYSgxMDI0KTpkYSgxMDI0KSxiPUhhP1ZhP00oMjU2KTplYSgyNTYpOmRhKDI1NiksdltiPj4yXT1kLHZbYT4+Ml09YjthPVtdO3ZhciBlPTAsZjtmb3IoZiBpbiBMKWlmKFwic3RyaW5nXCI9PT10eXBlb2YgTFtmXSl7dmFyIGc9ZitcIj1cIitMW2ZdO2EucHVzaChnKTtlKz1nLmxlbmd0aH1pZigxMDI0PGUpdGhyb3cgRXJyb3IoXCJFbnZpcm9ubWVudCBzaXplIGV4Y2VlZGVkIFRPVEFMX0VOVl9TSVpFIVwiKTtmb3IoZj0wO2Y8YS5sZW5ndGg7ZisrKXtlPWc9YVtmXTtmb3IodmFyIGg9ZCxrPTA7azxlLmxlbmd0aDsrK2spRFtoKys+PjBdPWUuY2hhckNvZGVBdChrKTtcbkRbaD4+MF09MDt2W2IrNCpmPj4yXT1kO2QrPWcubGVuZ3RoKzF9dltiKzQqYS5sZW5ndGg+PjJdPTB9ZnVuY3Rpb24gTygpe3ooKX1mdW5jdGlvbiBFYigpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgZGF0ZU5vd3x8c2VsZi5wZXJmb3JtYW5jZSYmc2VsZi5wZXJmb3JtYW5jZS5ub3d9XG52YXIgUD17SToxLHU6MixGYzozLEJiOjQsTTo1LGphOjYsVWE6NyxaYjo4LEI6OSxpYjoxMCxmYToxMSxQYzoxMSx5YToxMixXOjEzLHViOjE0LGxjOjE1LGdhOjE2LGhhOjE3LFFjOjE4LFk6MTksWjoyMCxOOjIxLGk6MjIsVWI6MjMsd2E6MjQsRDoyNSxNYzoyNix2YjoyNyxoYzoyOCxPOjI5LENjOjMwLE5iOjMxLHZjOjMyLHJiOjMzLHpjOjM0LGNjOjQyLHliOjQzLGpiOjQ0LEViOjQ1LEZiOjQ2LEdiOjQ3LE1iOjQ4LE5jOjQ5LFhiOjUwLERiOjUxLG9iOjM1LCRiOjM3LCRhOjUyLGNiOjUzLFJjOjU0LFZiOjU1LGViOjU2LGZiOjU3LHBiOjM1LGdiOjU5LGpjOjYwLFliOjYxLEpjOjYyLGljOjYzLGRjOjY0LGVjOjY1LEJjOjY2LGFjOjY3LFhhOjY4LEdjOjY5LGtiOjcwLHdjOjcxLFBiOjcyLHNiOjczLGJiOjc0LHFjOjc2LGFiOjc3LEFjOjc4LEhiOjc5LEliOjgwLExiOjgxLEtiOjgyLEpiOjgzLGtjOjM4LGlhOjM5LFFiOjM2LFg6NDAscmM6OTUsdWM6OTYsbmI6MTA0LFdiOjEwNSxcbllhOjk3LHljOjkxLG9jOjg4LGZjOjkyLERjOjEwOCxtYjoxMTEsVmE6OTgsbGI6MTAzLFRiOjEwMSxSYjoxMDAsS2M6MTEwLHdiOjExMix4YjoxMTMsQWI6MTE1LFphOjExNCxxYjo4OSxPYjo5MCx4Yzo5MyxFYzo5NCxXYTo5OSxTYjoxMDIsQ2I6MTA2LG1jOjEwNyxMYzoxMDksT2M6ODcsdGI6MTIyLEhjOjExNixwYzo5NSxiYzoxMjMsemI6ODQsc2M6NzUsaGI6MTI1LG5jOjEzMSx0YzoxMzAsSWM6ODZ9O2Z1bmN0aW9uIEZiKGEpe2MuX19fZXJybm9fbG9jYXRpb24mJih2W2MuX19fZXJybm9fbG9jYXRpb24oKT4+Ml09YSk7cmV0dXJuIGF9ZnVuY3Rpb24gR2IoYSxiKXtpZigwPT09YSlhPURhdGUubm93KCk7ZWxzZSBpZigxPT09YSYmRWIoKSlhPU8oKTtlbHNlIHJldHVybiBGYihQLmkpLC0xO3ZbYj4+Ml09YS8xRTN8MDt2W2IrND4+Ml09YSUxRTMqMUU2fDA7cmV0dXJuIDB9dmFyIEhiPTAsSWI9W10sUT17fTtcbmZ1bmN0aW9uIEpiKGEpe2lmKCFhfHxRW2FdKXJldHVybiBhO2Zvcih2YXIgYiBpbiBRKXt2YXIgZD0rYjtpZihRW2RdLmthPT09YSlyZXR1cm4gZH1yZXR1cm4gYX1mdW5jdGlvbiBLYihhKXtpZihhKXt2YXIgYj1RW2FdO2Fzc2VydCgwPGIuSik7Yi5KLS07MCE9PWIuSnx8Yi5MfHwoYi5vYSYmYy5keW5DYWxsX3ZpKGIub2EsYSksZGVsZXRlIFFbYV0sX19fY3hhX2ZyZWVfZXhjZXB0aW9uKGEpKX19ZnVuY3Rpb24gX19fY3hhX2ZyZWVfZXhjZXB0aW9uKGEpe3RyeXtyZXR1cm4gTGIoYSl9Y2F0Y2goYil7fX1cbmZ1bmN0aW9uIE1iKCl7dmFyIGE9SWIucG9wKCk7YT1KYihhKTtRW2FdLkx8fChJYi5wdXNoKGEpLFFbYV0uTD0hMCk7SGI9YTt0aHJvdyBhK1wiIC0gRXhjZXB0aW9uIGNhdGNoaW5nIGlzIGRpc2FibGVkLCB0aGlzIGV4Y2VwdGlvbiBjYW5ub3QgYmUgY2F1Z2h0LiBDb21waWxlIHdpdGggLXMgRElTQUJMRV9FWENFUFRJT05fQ0FUQ0hJTkc9MCBvciBESVNBQkxFX0VYQ0VQVElPTl9DQVRDSElORz0yIHRvIGNhdGNoLlwiO31cbmZ1bmN0aW9uIE5iKCl7dmFyIGE9SGI7aWYoIWEpcmV0dXJuKE9iKDApLDApfDA7dmFyIGI9UVthXSxkPWIudHlwZTtpZighZClyZXR1cm4oT2IoMCksYSl8MDt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO2MuX19fY3hhX2lzX3BvaW50ZXJfdHlwZShkKTtOYi5idWZmZXJ8fChOYi5idWZmZXI9TSg0KSk7dltOYi5idWZmZXI+PjJdPWE7YT1OYi5idWZmZXI7Zm9yKHZhciBmPTA7ZjxlLmxlbmd0aDtmKyspaWYoZVtmXSYmYy5fX19jeGFfY2FuX2NhdGNoKGVbZl0sZCxhKSlyZXR1cm4gYT12W2E+PjJdLGIua2E9YSwoT2IoZVtmXSksYSl8MDthPXZbYT4+Ml07cmV0dXJuKE9iKGQpLGEpfDB9XG52YXIgUGI9ezA6XCJTdWNjZXNzXCIsMTpcIk5vdCBzdXBlci11c2VyXCIsMjpcIk5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlcIiwzOlwiTm8gc3VjaCBwcm9jZXNzXCIsNDpcIkludGVycnVwdGVkIHN5c3RlbSBjYWxsXCIsNTpcIkkvTyBlcnJvclwiLDY6XCJObyBzdWNoIGRldmljZSBvciBhZGRyZXNzXCIsNzpcIkFyZyBsaXN0IHRvbyBsb25nXCIsODpcIkV4ZWMgZm9ybWF0IGVycm9yXCIsOTpcIkJhZCBmaWxlIG51bWJlclwiLDEwOlwiTm8gY2hpbGRyZW5cIiwxMTpcIk5vIG1vcmUgcHJvY2Vzc2VzXCIsMTI6XCJOb3QgZW5vdWdoIGNvcmVcIiwxMzpcIlBlcm1pc3Npb24gZGVuaWVkXCIsMTQ6XCJCYWQgYWRkcmVzc1wiLDE1OlwiQmxvY2sgZGV2aWNlIHJlcXVpcmVkXCIsMTY6XCJNb3VudCBkZXZpY2UgYnVzeVwiLDE3OlwiRmlsZSBleGlzdHNcIiwxODpcIkNyb3NzLWRldmljZSBsaW5rXCIsMTk6XCJObyBzdWNoIGRldmljZVwiLDIwOlwiTm90IGEgZGlyZWN0b3J5XCIsMjE6XCJJcyBhIGRpcmVjdG9yeVwiLDIyOlwiSW52YWxpZCBhcmd1bWVudFwiLDIzOlwiVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW1cIixcbjI0OlwiVG9vIG1hbnkgb3BlbiBmaWxlc1wiLDI1OlwiTm90IGEgdHlwZXdyaXRlclwiLDI2OlwiVGV4dCBmaWxlIGJ1c3lcIiwyNzpcIkZpbGUgdG9vIGxhcmdlXCIsMjg6XCJObyBzcGFjZSBsZWZ0IG9uIGRldmljZVwiLDI5OlwiSWxsZWdhbCBzZWVrXCIsMzA6XCJSZWFkIG9ubHkgZmlsZSBzeXN0ZW1cIiwzMTpcIlRvbyBtYW55IGxpbmtzXCIsMzI6XCJCcm9rZW4gcGlwZVwiLDMzOlwiTWF0aCBhcmcgb3V0IG9mIGRvbWFpbiBvZiBmdW5jXCIsMzQ6XCJNYXRoIHJlc3VsdCBub3QgcmVwcmVzZW50YWJsZVwiLDM1OlwiRmlsZSBsb2NraW5nIGRlYWRsb2NrIGVycm9yXCIsMzY6XCJGaWxlIG9yIHBhdGggbmFtZSB0b28gbG9uZ1wiLDM3OlwiTm8gcmVjb3JkIGxvY2tzIGF2YWlsYWJsZVwiLDM4OlwiRnVuY3Rpb24gbm90IGltcGxlbWVudGVkXCIsMzk6XCJEaXJlY3Rvcnkgbm90IGVtcHR5XCIsNDA6XCJUb28gbWFueSBzeW1ib2xpYyBsaW5rc1wiLDQyOlwiTm8gbWVzc2FnZSBvZiBkZXNpcmVkIHR5cGVcIiw0MzpcIklkZW50aWZpZXIgcmVtb3ZlZFwiLFxuNDQ6XCJDaGFubmVsIG51bWJlciBvdXQgb2YgcmFuZ2VcIiw0NTpcIkxldmVsIDIgbm90IHN5bmNocm9uaXplZFwiLDQ2OlwiTGV2ZWwgMyBoYWx0ZWRcIiw0NzpcIkxldmVsIDMgcmVzZXRcIiw0ODpcIkxpbmsgbnVtYmVyIG91dCBvZiByYW5nZVwiLDQ5OlwiUHJvdG9jb2wgZHJpdmVyIG5vdCBhdHRhY2hlZFwiLDUwOlwiTm8gQ1NJIHN0cnVjdHVyZSBhdmFpbGFibGVcIiw1MTpcIkxldmVsIDIgaGFsdGVkXCIsNTI6XCJJbnZhbGlkIGV4Y2hhbmdlXCIsNTM6XCJJbnZhbGlkIHJlcXVlc3QgZGVzY3JpcHRvclwiLDU0OlwiRXhjaGFuZ2UgZnVsbFwiLDU1OlwiTm8gYW5vZGVcIiw1NjpcIkludmFsaWQgcmVxdWVzdCBjb2RlXCIsNTc6XCJJbnZhbGlkIHNsb3RcIiw1OTpcIkJhZCBmb250IGZpbGUgZm10XCIsNjA6XCJEZXZpY2Ugbm90IGEgc3RyZWFtXCIsNjE6XCJObyBkYXRhIChmb3Igbm8gZGVsYXkgaW8pXCIsNjI6XCJUaW1lciBleHBpcmVkXCIsNjM6XCJPdXQgb2Ygc3RyZWFtcyByZXNvdXJjZXNcIiw2NDpcIk1hY2hpbmUgaXMgbm90IG9uIHRoZSBuZXR3b3JrXCIsXG42NTpcIlBhY2thZ2Ugbm90IGluc3RhbGxlZFwiLDY2OlwiVGhlIG9iamVjdCBpcyByZW1vdGVcIiw2NzpcIlRoZSBsaW5rIGhhcyBiZWVuIHNldmVyZWRcIiw2ODpcIkFkdmVydGlzZSBlcnJvclwiLDY5OlwiU3Jtb3VudCBlcnJvclwiLDcwOlwiQ29tbXVuaWNhdGlvbiBlcnJvciBvbiBzZW5kXCIsNzE6XCJQcm90b2NvbCBlcnJvclwiLDcyOlwiTXVsdGlob3AgYXR0ZW1wdGVkXCIsNzM6XCJDcm9zcyBtb3VudCBwb2ludCAobm90IHJlYWxseSBlcnJvcilcIiw3NDpcIlRyeWluZyB0byByZWFkIHVucmVhZGFibGUgbWVzc2FnZVwiLDc1OlwiVmFsdWUgdG9vIGxhcmdlIGZvciBkZWZpbmVkIGRhdGEgdHlwZVwiLDc2OlwiR2l2ZW4gbG9nLiBuYW1lIG5vdCB1bmlxdWVcIiw3NzpcImYuZC4gaW52YWxpZCBmb3IgdGhpcyBvcGVyYXRpb25cIiw3ODpcIlJlbW90ZSBhZGRyZXNzIGNoYW5nZWRcIiw3OTpcIkNhbiAgIGFjY2VzcyBhIG5lZWRlZCBzaGFyZWQgbGliXCIsODA6XCJBY2Nlc3NpbmcgYSBjb3JydXB0ZWQgc2hhcmVkIGxpYlwiLDgxOlwiLmxpYiBzZWN0aW9uIGluIGEub3V0IGNvcnJ1cHRlZFwiLFxuODI6XCJBdHRlbXB0aW5nIHRvIGxpbmsgaW4gdG9vIG1hbnkgbGlic1wiLDgzOlwiQXR0ZW1wdGluZyB0byBleGVjIGEgc2hhcmVkIGxpYnJhcnlcIiw4NDpcIklsbGVnYWwgYnl0ZSBzZXF1ZW5jZVwiLDg2OlwiU3RyZWFtcyBwaXBlIGVycm9yXCIsODc6XCJUb28gbWFueSB1c2Vyc1wiLDg4OlwiU29ja2V0IG9wZXJhdGlvbiBvbiBub24tc29ja2V0XCIsODk6XCJEZXN0aW5hdGlvbiBhZGRyZXNzIHJlcXVpcmVkXCIsOTA6XCJNZXNzYWdlIHRvbyBsb25nXCIsOTE6XCJQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXRcIiw5MjpcIlByb3RvY29sIG5vdCBhdmFpbGFibGVcIiw5MzpcIlVua25vd24gcHJvdG9jb2xcIiw5NDpcIlNvY2tldCB0eXBlIG5vdCBzdXBwb3J0ZWRcIiw5NTpcIk5vdCBzdXBwb3J0ZWRcIiw5NjpcIlByb3RvY29sIGZhbWlseSBub3Qgc3VwcG9ydGVkXCIsOTc6XCJBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sIGZhbWlseVwiLDk4OlwiQWRkcmVzcyBhbHJlYWR5IGluIHVzZVwiLDk5OlwiQWRkcmVzcyBub3QgYXZhaWxhYmxlXCIsXG4xMDA6XCJOZXR3b3JrIGludGVyZmFjZSBpcyBub3QgY29uZmlndXJlZFwiLDEwMTpcIk5ldHdvcmsgaXMgdW5yZWFjaGFibGVcIiwxMDI6XCJDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmtcIiwxMDM6XCJDb25uZWN0aW9uIGFib3J0ZWRcIiwxMDQ6XCJDb25uZWN0aW9uIHJlc2V0IGJ5IHBlZXJcIiwxMDU6XCJObyBidWZmZXIgc3BhY2UgYXZhaWxhYmxlXCIsMTA2OlwiU29ja2V0IGlzIGFscmVhZHkgY29ubmVjdGVkXCIsMTA3OlwiU29ja2V0IGlzIG5vdCBjb25uZWN0ZWRcIiwxMDg6XCJDYW4ndCBzZW5kIGFmdGVyIHNvY2tldCBzaHV0ZG93blwiLDEwOTpcIlRvbyBtYW55IHJlZmVyZW5jZXNcIiwxMTA6XCJDb25uZWN0aW9uIHRpbWVkIG91dFwiLDExMTpcIkNvbm5lY3Rpb24gcmVmdXNlZFwiLDExMjpcIkhvc3QgaXMgZG93blwiLDExMzpcIkhvc3QgaXMgdW5yZWFjaGFibGVcIiwxMTQ6XCJTb2NrZXQgYWxyZWFkeSBjb25uZWN0ZWRcIiwxMTU6XCJDb25uZWN0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3NcIiwxMTY6XCJTdGFsZSBmaWxlIGhhbmRsZVwiLFxuMTIyOlwiUXVvdGEgZXhjZWVkZWRcIiwxMjM6XCJObyBtZWRpdW0gKGluIHRhcGUgZHJpdmUpXCIsMTI1OlwiT3BlcmF0aW9uIGNhbmNlbGVkXCIsMTMwOlwiUHJldmlvdXMgb3duZXIgZGllZFwiLDEzMTpcIlN0YXRlIG5vdCByZWNvdmVyYWJsZVwifTtmdW5jdGlvbiBRYihhLGIpe2Zvcih2YXIgZD0wLGU9YS5sZW5ndGgtMTswPD1lO2UtLSl7dmFyIGY9YVtlXTtcIi5cIj09PWY/YS5zcGxpY2UoZSwxKTpcIi4uXCI9PT1mPyhhLnNwbGljZShlLDEpLGQrKyk6ZCYmKGEuc3BsaWNlKGUsMSksZC0tKX1pZihiKWZvcig7ZDtkLS0pYS51bnNoaWZ0KFwiLi5cIik7cmV0dXJuIGF9ZnVuY3Rpb24gUmIoYSl7dmFyIGI9XCIvXCI9PT1hLmNoYXJBdCgwKSxkPVwiL1wiPT09YS5zdWJzdHIoLTEpOyhhPVFiKGEuc3BsaXQoXCIvXCIpLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4hIWF9KSwhYikuam9pbihcIi9cIikpfHxifHwoYT1cIi5cIik7YSYmZCYmKGErPVwiL1wiKTtyZXR1cm4oYj9cIi9cIjpcIlwiKSthfVxuZnVuY3Rpb24gU2IoYSl7dmFyIGI9L14oXFwvP3wpKFtcXHNcXFNdKj8pKCg/OlxcLnsxLDJ9fFteXFwvXSs/fCkoXFwuW14uXFwvXSp8KSkoPzpbXFwvXSopJC8uZXhlYyhhKS5zbGljZSgxKTthPWJbMF07Yj1iWzFdO2lmKCFhJiYhYilyZXR1cm5cIi5cIjtiJiYoYj1iLnN1YnN0cigwLGIubGVuZ3RoLTEpKTtyZXR1cm4gYStifWZ1bmN0aW9uIFRiKGEpe2lmKFwiL1wiPT09YSlyZXR1cm5cIi9cIjt2YXIgYj1hLmxhc3RJbmRleE9mKFwiL1wiKTtyZXR1cm4tMT09PWI/YTphLnN1YnN0cihiKzEpfVxuZnVuY3Rpb24gVWIoKXtmb3IodmFyIGE9XCJcIixiPSExLGQ9YXJndW1lbnRzLmxlbmd0aC0xOy0xPD1kJiYhYjtkLS0pe2I9MDw9ZD9hcmd1bWVudHNbZF06XCIvXCI7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBiKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudHMgdG8gcGF0aC5yZXNvbHZlIG11c3QgYmUgc3RyaW5nc1wiKTtpZighYilyZXR1cm5cIlwiO2E9YitcIi9cIithO2I9XCIvXCI9PT1iLmNoYXJBdCgwKX1hPVFiKGEuc3BsaXQoXCIvXCIpLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4hIWF9KSwhYikuam9pbihcIi9cIik7cmV0dXJuKGI/XCIvXCI6XCJcIikrYXx8XCIuXCJ9dmFyIFZiPVtdO2Z1bmN0aW9uIFdiKGEsYil7VmJbYV09e2lucHV0OltdLG91dHB1dDpbXSxHOmJ9O1hiKGEsWWIpfVxudmFyIFliPXtvcGVuOmZ1bmN0aW9uKGEpe3ZhciBiPVZiW2Eubm9kZS5yZGV2XTtpZighYil0aHJvdyBuZXcgUihQLlkpO2EudHR5PWI7YS5zZWVrYWJsZT0hMX0sY2xvc2U6ZnVuY3Rpb24oYSl7YS50dHkuRy5mbHVzaChhLnR0eSl9LGZsdXNoOmZ1bmN0aW9uKGEpe2EudHR5LkcuZmx1c2goYS50dHkpfSxyZWFkOmZ1bmN0aW9uKGEsYixkLGUpe2lmKCFhLnR0eXx8IWEudHR5LkcucmEpdGhyb3cgbmV3IFIoUC5qYSk7Zm9yKHZhciBmPTAsZz0wO2c8ZTtnKyspe3RyeXt2YXIgaD1hLnR0eS5HLnJhKGEudHR5KX1jYXRjaChrKXt0aHJvdyBuZXcgUihQLk0pO31pZih2b2lkIDA9PT1oJiYwPT09Zil0aHJvdyBuZXcgUihQLmZhKTtpZihudWxsPT09aHx8dm9pZCAwPT09aClicmVhaztmKys7YltkK2ddPWh9ZiYmKGEubm9kZS50aW1lc3RhbXA9RGF0ZS5ub3coKSk7cmV0dXJuIGZ9LHdyaXRlOmZ1bmN0aW9uKGEsYixkLGUpe2lmKCFhLnR0eXx8IWEudHR5LkcuZGEpdGhyb3cgbmV3IFIoUC5qYSk7XG52YXIgZj0wO3RyeXtpZigwPT09ZCYmMD09PWUpYS50dHkuRy5mbHVzaChhLnR0eSk7ZWxzZSBmb3IoO2Y8ZTspYS50dHkuRy5kYShhLnR0eSxiW2QrZl0pLGYrK31jYXRjaChnKXt0aHJvdyBuZXcgUihQLk0pO31lJiYoYS5ub2RlLnRpbWVzdGFtcD1EYXRlLm5vdygpKTtyZXR1cm4gZn19LGFjPXtyYTpmdW5jdGlvbihhKXtpZighYS5pbnB1dC5sZW5ndGgpe3ZhciBiPW51bGw7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmXCJmdW5jdGlvblwiPT10eXBlb2Ygd2luZG93LnByb21wdD8oYj13aW5kb3cucHJvbXB0KFwiSW5wdXQ6IFwiKSxudWxsIT09YiYmKGIrPVwiXFxuXCIpKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiByZWFkbGluZSYmKGI9cmVhZGxpbmUoKSxudWxsIT09YiYmKGIrPVwiXFxuXCIpKTtpZighYilyZXR1cm4gbnVsbDthLmlucHV0PVpiKGIsITApfXJldHVybiBhLmlucHV0LnNoaWZ0KCl9LGRhOmZ1bmN0aW9uKGEsYil7bnVsbD09PWJ8fDEwPT09Yj8oY2Eod2EoYS5vdXRwdXQsMCkpLFxuYS5vdXRwdXQ9W10pOjAhPWImJmEub3V0cHV0LnB1c2goYil9LGZsdXNoOmZ1bmN0aW9uKGEpe2Eub3V0cHV0JiYwPGEub3V0cHV0Lmxlbmd0aCYmKGNhKHdhKGEub3V0cHV0LDApKSxhLm91dHB1dD1bXSl9fSxiYz17ZGE6ZnVuY3Rpb24oYSxiKXtudWxsPT09Ynx8MTA9PT1iPyhwKHdhKGEub3V0cHV0LDApKSxhLm91dHB1dD1bXSk6MCE9YiYmYS5vdXRwdXQucHVzaChiKX0sZmx1c2g6ZnVuY3Rpb24oYSl7YS5vdXRwdXQmJjA8YS5vdXRwdXQubGVuZ3RoJiYocCh3YShhLm91dHB1dCwwKSksYS5vdXRwdXQ9W10pfX0sUz17bzpudWxsLEE6ZnVuY3Rpb24oKXtyZXR1cm4gUy5jcmVhdGVOb2RlKG51bGwsXCIvXCIsMTY4OTUsMCl9LGNyZWF0ZU5vZGU6ZnVuY3Rpb24oYSxiLGQsZSl7aWYoMjQ1NzY9PT0oZCY2MTQ0MCl8fDQwOTY9PT0oZCY2MTQ0MCkpdGhyb3cgbmV3IFIoUC5JKTtTLm98fChTLm89e2Rpcjp7bm9kZTp7bTpTLmMubSxzOlMuYy5zLGxvb2t1cDpTLmMubG9va3VwLFI6Uy5jLlIsXG5yZW5hbWU6Uy5jLnJlbmFtZSx1bmxpbms6Uy5jLnVubGluayxybWRpcjpTLmMucm1kaXIscmVhZGRpcjpTLmMucmVhZGRpcixzeW1saW5rOlMuYy5zeW1saW5rfSxzdHJlYW06e0Y6Uy5mLkZ9fSxmaWxlOntub2RlOnttOlMuYy5tLHM6Uy5jLnN9LHN0cmVhbTp7RjpTLmYuRixyZWFkOlMuZi5yZWFkLHdyaXRlOlMuZi53cml0ZSxsYTpTLmYubGEsc2E6Uy5mLnNhLFQ6Uy5mLlR9fSxsaW5rOntub2RlOnttOlMuYy5tLHM6Uy5jLnMscmVhZGxpbms6Uy5jLnJlYWRsaW5rfSxzdHJlYW06e319LG5hOntub2RlOnttOlMuYy5tLHM6Uy5jLnN9LHN0cmVhbTpjY319KTtkPWRjKGEsYixkLGUpOzE2Mzg0PT09KGQubW9kZSY2MTQ0MCk/KGQuYz1TLm8uZGlyLm5vZGUsZC5mPVMuby5kaXIuc3RyZWFtLGQuYj17fSk6MzI3Njg9PT0oZC5tb2RlJjYxNDQwKT8oZC5jPVMuby5maWxlLm5vZGUsZC5mPVMuby5maWxlLnN0cmVhbSxkLmg9MCxkLmI9bnVsbCk6NDA5NjA9PT0oZC5tb2RlJjYxNDQwKT9cbihkLmM9Uy5vLmxpbmsubm9kZSxkLmY9Uy5vLmxpbmsuc3RyZWFtKTo4MTkyPT09KGQubW9kZSY2MTQ0MCkmJihkLmM9Uy5vLm5hLm5vZGUsZC5mPVMuby5uYS5zdHJlYW0pO2QudGltZXN0YW1wPURhdGUubm93KCk7YSYmKGEuYltiXT1kKTtyZXR1cm4gZH0sRWE6ZnVuY3Rpb24oYSl7aWYoYS5iJiZhLmIuc3ViYXJyYXkpe2Zvcih2YXIgYj1bXSxkPTA7ZDxhLmg7KytkKWIucHVzaChhLmJbZF0pO3JldHVybiBifXJldHVybiBhLmJ9LFdjOmZ1bmN0aW9uKGEpe3JldHVybiBhLmI/YS5iLnN1YmFycmF5P2EuYi5zdWJhcnJheSgwLGEuaCk6bmV3IFVpbnQ4QXJyYXkoYS5iKTpuZXcgVWludDhBcnJheX0scGE6ZnVuY3Rpb24oYSxiKXthLmImJmEuYi5zdWJhcnJheSYmYj5hLmIubGVuZ3RoJiYoYS5iPVMuRWEoYSksYS5oPWEuYi5sZW5ndGgpO2lmKCFhLmJ8fGEuYi5zdWJhcnJheSl7dmFyIGQ9YS5iP2EuYi5sZW5ndGg6MDtkPj1ifHwoYj1NYXRoLm1heChiLGQqKDEwNDg1NzY+ZD8yOlxuMS4xMjUpfDApLDAhPWQmJihiPU1hdGgubWF4KGIsMjU2KSksZD1hLmIsYS5iPW5ldyBVaW50OEFycmF5KGIpLDA8YS5oJiZhLmIuc2V0KGQuc3ViYXJyYXkoMCxhLmgpLDApKX1lbHNlIGZvcighYS5iJiYwPGImJihhLmI9W10pO2EuYi5sZW5ndGg8YjspYS5iLnB1c2goMCl9LE1hOmZ1bmN0aW9uKGEsYil7aWYoYS5oIT1iKWlmKDA9PWIpYS5iPW51bGwsYS5oPTA7ZWxzZXtpZighYS5ifHxhLmIuc3ViYXJyYXkpe3ZhciBkPWEuYjthLmI9bmV3IFVpbnQ4QXJyYXkobmV3IEFycmF5QnVmZmVyKGIpKTtkJiZhLmIuc2V0KGQuc3ViYXJyYXkoMCxNYXRoLm1pbihiLGEuaCkpKX1lbHNlIGlmKGEuYnx8KGEuYj1bXSksYS5iLmxlbmd0aD5iKWEuYi5sZW5ndGg9YjtlbHNlIGZvcig7YS5iLmxlbmd0aDxiOylhLmIucHVzaCgwKTthLmg9Yn19LGM6e206ZnVuY3Rpb24oYSl7dmFyIGI9e307Yi5kZXY9ODE5Mj09PShhLm1vZGUmNjE0NDApP2EuaWQ6MTtiLmlubz1hLmlkO2IubW9kZT1hLm1vZGU7XG5iLm5saW5rPTE7Yi51aWQ9MDtiLmdpZD0wO2IucmRldj1hLnJkZXY7MTYzODQ9PT0oYS5tb2RlJjYxNDQwKT9iLnNpemU9NDA5NjozMjc2OD09PShhLm1vZGUmNjE0NDApP2Iuc2l6ZT1hLmg6NDA5NjA9PT0oYS5tb2RlJjYxNDQwKT9iLnNpemU9YS5saW5rLmxlbmd0aDpiLnNpemU9MDtiLmF0aW1lPW5ldyBEYXRlKGEudGltZXN0YW1wKTtiLm10aW1lPW5ldyBEYXRlKGEudGltZXN0YW1wKTtiLmN0aW1lPW5ldyBEYXRlKGEudGltZXN0YW1wKTtiLkNhPTQwOTY7Yi5ibG9ja3M9TWF0aC5jZWlsKGIuc2l6ZS9iLkNhKTtyZXR1cm4gYn0sczpmdW5jdGlvbihhLGIpe3ZvaWQgMCE9PWIubW9kZSYmKGEubW9kZT1iLm1vZGUpO3ZvaWQgMCE9PWIudGltZXN0YW1wJiYoYS50aW1lc3RhbXA9Yi50aW1lc3RhbXApO3ZvaWQgMCE9PWIuc2l6ZSYmUy5NYShhLGIuc2l6ZSl9LGxvb2t1cDpmdW5jdGlvbigpe3Rocm93IGZjW1AudV07fSxSOmZ1bmN0aW9uKGEsYixkLGUpe3JldHVybiBTLmNyZWF0ZU5vZGUoYSxcbmIsZCxlKX0scmVuYW1lOmZ1bmN0aW9uKGEsYixkKXtpZigxNjM4ND09PShhLm1vZGUmNjE0NDApKXt0cnl7dmFyIGU9aGMoYixkKX1jYXRjaChnKXt9aWYoZSlmb3IodmFyIGYgaW4gZS5iKXRocm93IG5ldyBSKFAuaWEpO31kZWxldGUgYS5wYXJlbnQuYlthLm5hbWVdO2EubmFtZT1kO2IuYltkXT1hO2EucGFyZW50PWJ9LHVubGluazpmdW5jdGlvbihhLGIpe2RlbGV0ZSBhLmJbYl19LHJtZGlyOmZ1bmN0aW9uKGEsYil7dmFyIGQ9aGMoYSxiKSxlO2ZvcihlIGluIGQuYil0aHJvdyBuZXcgUihQLmlhKTtkZWxldGUgYS5iW2JdfSxyZWFkZGlyOmZ1bmN0aW9uKGEpe3ZhciBiPVtcIi5cIixcIi4uXCJdLGQ7Zm9yKGQgaW4gYS5iKWEuYi5oYXNPd25Qcm9wZXJ0eShkKSYmYi5wdXNoKGQpO3JldHVybiBifSxzeW1saW5rOmZ1bmN0aW9uKGEsYixkKXthPVMuY3JlYXRlTm9kZShhLGIsNDE0NzEsMCk7YS5saW5rPWQ7cmV0dXJuIGF9LHJlYWRsaW5rOmZ1bmN0aW9uKGEpe2lmKDQwOTYwIT09KGEubW9kZSZcbjYxNDQwKSl0aHJvdyBuZXcgUihQLmkpO3JldHVybiBhLmxpbmt9fSxmOntyZWFkOmZ1bmN0aW9uKGEsYixkLGUsZil7dmFyIGc9YS5ub2RlLmI7aWYoZj49YS5ub2RlLmgpcmV0dXJuIDA7YT1NYXRoLm1pbihhLm5vZGUuaC1mLGUpO2Fzc2VydCgwPD1hKTtpZig4PGEmJmcuc3ViYXJyYXkpYi5zZXQoZy5zdWJhcnJheShmLGYrYSksZCk7ZWxzZSBmb3IoZT0wO2U8YTtlKyspYltkK2VdPWdbZitlXTtyZXR1cm4gYX0sd3JpdGU6ZnVuY3Rpb24oYSxiLGQsZSxmLGcpe2c9ITE7aWYoIWUpcmV0dXJuIDA7YT1hLm5vZGU7YS50aW1lc3RhbXA9RGF0ZS5ub3coKTtpZihiLnN1YmFycmF5JiYoIWEuYnx8YS5iLnN1YmFycmF5KSl7aWYoZylyZXR1cm4gYS5iPWIuc3ViYXJyYXkoZCxkK2UpLGEuaD1lO2lmKDA9PT1hLmgmJjA9PT1mKXJldHVybiBhLmI9bmV3IFVpbnQ4QXJyYXkoYi5zdWJhcnJheShkLGQrZSkpLGEuaD1lO2lmKGYrZTw9YS5oKXJldHVybiBhLmIuc2V0KGIuc3ViYXJyYXkoZCxcbmQrZSksZiksZX1TLnBhKGEsZitlKTtpZihhLmIuc3ViYXJyYXkmJmIuc3ViYXJyYXkpYS5iLnNldChiLnN1YmFycmF5KGQsZCtlKSxmKTtlbHNlIGZvcihnPTA7ZzxlO2crKylhLmJbZitnXT1iW2QrZ107YS5oPU1hdGgubWF4KGEuaCxmK2UpO3JldHVybiBlfSxGOmZ1bmN0aW9uKGEsYixkKXsxPT09ZD9iKz1hLnBvc2l0aW9uOjI9PT1kJiYzMjc2OD09PShhLm5vZGUubW9kZSY2MTQ0MCkmJihiKz1hLm5vZGUuaCk7aWYoMD5iKXRocm93IG5ldyBSKFAuaSk7cmV0dXJuIGJ9LGxhOmZ1bmN0aW9uKGEsYixkKXtTLnBhKGEubm9kZSxiK2QpO2Eubm9kZS5oPU1hdGgubWF4KGEubm9kZS5oLGIrZCl9LHNhOmZ1bmN0aW9uKGEsYixkLGUsZixnLGgpe2lmKDMyNzY4IT09KGEubm9kZS5tb2RlJjYxNDQwKSl0aHJvdyBuZXcgUihQLlkpO2Q9YS5ub2RlLmI7aWYoaCYyfHxkLmJ1ZmZlciE9PWImJmQuYnVmZmVyIT09Yi5idWZmZXIpe2lmKDA8Znx8ZitlPGEubm9kZS5oKWQuc3ViYXJyYXk/ZD1cbmQuc3ViYXJyYXkoZixmK2UpOmQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZCxmLGYrZSk7YT0hMDtlPU0oZSk7aWYoIWUpdGhyb3cgbmV3IFIoUC55YSk7Yi5zZXQoZCxlKX1lbHNlIGE9ITEsZT1kLmJ5dGVPZmZzZXQ7cmV0dXJue0thOmUsemE6YX19LFQ6ZnVuY3Rpb24oYSxiLGQsZSxmKXtpZigzMjc2OCE9PShhLm5vZGUubW9kZSY2MTQ0MCkpdGhyb3cgbmV3IFIoUC5ZKTtpZihmJjIpcmV0dXJuIDA7Uy5mLndyaXRlKGEsYiwwLGUsZCwhMSk7cmV0dXJuIDB9fX07dSs9MTY7dSs9MTY7dSs9MTY7dmFyIGljPW51bGwsamM9e30sVD1bXSxrYz0xLGxjPW51bGwsbWM9ITAsbmM9e30sUj1udWxsLGZjPXt9O1xuZnVuY3Rpb24gb2MoYSxiKXthPVViKFwiL1wiLGEpO2I9Ynx8e307aWYoIWEpcmV0dXJue3BhdGg6XCJcIixub2RlOm51bGx9O3ZhciBkPXtxYTohMCxlYTowfSxlO2ZvcihlIGluIGQpdm9pZCAwPT09YltlXSYmKGJbZV09ZFtlXSk7aWYoODxiLmVhKXRocm93IG5ldyBSKFAuWCk7YT1RYihhLnNwbGl0KFwiL1wiKS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuISFhfSksITEpO3ZhciBmPWljO2Q9XCIvXCI7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7dmFyIGc9ZT09PWEubGVuZ3RoLTE7aWYoZyYmYi5wYXJlbnQpYnJlYWs7Zj1oYyhmLGFbZV0pO2Q9UmIoZCtcIi9cIithW2VdKTtmLlMmJighZ3x8ZyYmYi5xYSkmJihmPWYuUy5yb290KTtpZighZ3x8Yi5hYSlmb3IoZz0wOzQwOTYwPT09KGYubW9kZSY2MTQ0MCk7KWlmKGY9cGMoZCksZD1VYihTYihkKSxmKSxmPW9jKGQse2VhOmIuZWF9KS5ub2RlLDQwPGcrKyl0aHJvdyBuZXcgUihQLlgpO31yZXR1cm57cGF0aDpkLG5vZGU6Zn19XG5mdW5jdGlvbiBxYyhhKXtmb3IodmFyIGI7Oyl7aWYoYT09PWEucGFyZW50KXJldHVybiBhPWEuQS50YSxiP1wiL1wiIT09YVthLmxlbmd0aC0xXT9hK1wiL1wiK2I6YStiOmE7Yj1iP2EubmFtZStcIi9cIitiOmEubmFtZTthPWEucGFyZW50fX1mdW5jdGlvbiByYyhhLGIpe2Zvcih2YXIgZD0wLGU9MDtlPGIubGVuZ3RoO2UrKylkPShkPDw1KS1kK2IuY2hhckNvZGVBdChlKXwwO3JldHVybihhK2Q+Pj4wKSVsYy5sZW5ndGh9ZnVuY3Rpb24gc2MoYSl7dmFyIGI9cmMoYS5wYXJlbnQuaWQsYS5uYW1lKTthLkphPWxjW2JdO2xjW2JdPWF9ZnVuY3Rpb24gaGMoYSxiKXt2YXIgZDtpZihkPShkPXRjKGEsXCJ4XCIpKT9kOmEuYy5sb29rdXA/MDpQLlcpdGhyb3cgbmV3IFIoZCxhKTtmb3IoZD1sY1tyYyhhLmlkLGIpXTtkO2Q9ZC5KYSl7dmFyIGU9ZC5uYW1lO2lmKGQucGFyZW50LmlkPT09YS5pZCYmZT09PWIpcmV0dXJuIGR9cmV0dXJuIGEuYy5sb29rdXAoYSxiKX1cbmZ1bmN0aW9uIGRjKGEsYixkLGUpe3VjfHwodWM9ZnVuY3Rpb24oYSxiLGQsZSl7YXx8KGE9dGhpcyk7dGhpcy5wYXJlbnQ9YTt0aGlzLkE9YS5BO3RoaXMuUz1udWxsO3RoaXMuaWQ9a2MrKzt0aGlzLm5hbWU9Yjt0aGlzLm1vZGU9ZDt0aGlzLmM9e307dGhpcy5mPXt9O3RoaXMucmRldj1lfSx1Yy5wcm90b3R5cGU9e30sT2JqZWN0LmRlZmluZVByb3BlcnRpZXModWMucHJvdG90eXBlLHtyZWFkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMzY1PT09KHRoaXMubW9kZSYzNjUpfSxzZXQ6ZnVuY3Rpb24oYSl7YT90aGlzLm1vZGV8PTM2NTp0aGlzLm1vZGUmPS0zNjZ9fSx3cml0ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDE0Nj09PSh0aGlzLm1vZGUmMTQ2KX0sc2V0OmZ1bmN0aW9uKGEpe2E/dGhpcy5tb2RlfD0xNDY6dGhpcy5tb2RlJj0tMTQ3fX19KSk7YT1uZXcgdWMoYSxiLGQsZSk7c2MoYSk7cmV0dXJuIGF9XG52YXIgdmM9e3I6MCxyczoxMDUyNjcyLFwicitcIjoyLHc6NTc3LHd4OjcwNSx4dzo3MDUsXCJ3K1wiOjU3OCxcInd4K1wiOjcwNixcInh3K1wiOjcwNixhOjEwODksYXg6MTIxNyx4YToxMjE3LFwiYStcIjoxMDkwLFwiYXgrXCI6MTIxOCxcInhhK1wiOjEyMTh9O2Z1bmN0aW9uIHdjKGEpe3ZhciBiPVtcInJcIixcIndcIixcInJ3XCJdW2EmM107YSY1MTImJihiKz1cIndcIik7cmV0dXJuIGJ9ZnVuY3Rpb24gdGMoYSxiKXtpZihtYylyZXR1cm4gMDtpZigtMT09PWIuaW5kZXhPZihcInJcIil8fGEubW9kZSYyOTIpe2lmKC0xIT09Yi5pbmRleE9mKFwid1wiKSYmIShhLm1vZGUmMTQ2KXx8LTEhPT1iLmluZGV4T2YoXCJ4XCIpJiYhKGEubW9kZSY3MykpcmV0dXJuIFAuV31lbHNlIHJldHVybiBQLlc7cmV0dXJuIDB9ZnVuY3Rpb24geGMoYSxiKXt0cnl7cmV0dXJuIGhjKGEsYiksUC5oYX1jYXRjaChkKXt9cmV0dXJuIHRjKGEsXCJ3eFwiKX1cbmZ1bmN0aW9uIHljKGEpe3ZhciBiPTQwOTY7Zm9yKGE9YXx8MDthPD1iO2ErKylpZighVFthXSlyZXR1cm4gYTt0aHJvdyBuZXcgUihQLndhKTt9ZnVuY3Rpb24gemMoYSxiKXtBY3x8KEFjPWZ1bmN0aW9uKCl7fSxBYy5wcm90b3R5cGU9e30sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoQWMucHJvdG90eXBlLHtvYmplY3Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm5vZGV9LHNldDpmdW5jdGlvbihhKXt0aGlzLm5vZGU9YX19fSkpO3ZhciBkPW5ldyBBYyxlO2ZvcihlIGluIGEpZFtlXT1hW2VdO2E9ZDtiPXljKGIpO2EuZmQ9YjtyZXR1cm4gVFtiXT1hfXZhciBjYz17b3BlbjpmdW5jdGlvbihhKXthLmY9amNbYS5ub2RlLnJkZXZdLmY7YS5mLm9wZW4mJmEuZi5vcGVuKGEpfSxGOmZ1bmN0aW9uKCl7dGhyb3cgbmV3IFIoUC5PKTt9fTtmdW5jdGlvbiBYYihhLGIpe2pjW2FdPXtmOmJ9fVxuZnVuY3Rpb24gQmMoYSxiKXt2YXIgZD1cIi9cIj09PWIsZT0hYjtpZihkJiZpYyl0aHJvdyBuZXcgUihQLmdhKTtpZighZCYmIWUpe3ZhciBmPW9jKGIse3FhOiExfSk7Yj1mLnBhdGg7Zj1mLm5vZGU7aWYoZi5TKXRocm93IG5ldyBSKFAuZ2EpO2lmKDE2Mzg0IT09KGYubW9kZSY2MTQ0MCkpdGhyb3cgbmV3IFIoUC5aKTt9Yj17dHlwZTphLCRjOnt9LHRhOmIsSWE6W119O2E9YS5BKGIpO2EuQT1iO2Iucm9vdD1hO2Q/aWM9YTpmJiYoZi5TPWIsZi5BJiZmLkEuSWEucHVzaChiKSl9ZnVuY3Rpb24gQ2MoYSxiLGQpe3ZhciBlPW9jKGEse3BhcmVudDohMH0pLm5vZGU7YT1UYihhKTtpZighYXx8XCIuXCI9PT1hfHxcIi4uXCI9PT1hKXRocm93IG5ldyBSKFAuaSk7dmFyIGY9eGMoZSxhKTtpZihmKXRocm93IG5ldyBSKGYpO2lmKCFlLmMuUil0aHJvdyBuZXcgUihQLkkpO3JldHVybiBlLmMuUihlLGEsYixkKX1mdW5jdGlvbiBVKGEpe0NjKGEsMTY4OTUsMCl9XG5mdW5jdGlvbiBEYyhhLGIsZCl7XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBkJiYoZD1iLGI9NDM4KTtDYyhhLGJ8ODE5MixkKX1mdW5jdGlvbiBFYyhhLGIpe2lmKCFVYihhKSl0aHJvdyBuZXcgUihQLnUpO3ZhciBkPW9jKGIse3BhcmVudDohMH0pLm5vZGU7aWYoIWQpdGhyb3cgbmV3IFIoUC51KTtiPVRiKGIpO3ZhciBlPXhjKGQsYik7aWYoZSl0aHJvdyBuZXcgUihlKTtpZighZC5jLnN5bWxpbmspdGhyb3cgbmV3IFIoUC5JKTtkLmMuc3ltbGluayhkLGIsYSl9ZnVuY3Rpb24gcGMoYSl7YT1vYyhhKS5ub2RlO2lmKCFhKXRocm93IG5ldyBSKFAudSk7aWYoIWEuYy5yZWFkbGluayl0aHJvdyBuZXcgUihQLmkpO3JldHVybiBVYihxYyhhLnBhcmVudCksYS5jLnJlYWRsaW5rKGEpKX1cbmZ1bmN0aW9uIEZjKGEsYixkLGUpe2lmKFwiXCI9PT1hKXRocm93IG5ldyBSKFAudSk7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiKXt2YXIgZj12Y1tiXTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYpdGhyb3cgRXJyb3IoXCJVbmtub3duIGZpbGUgb3BlbiBtb2RlOiBcIitiKTtiPWZ9ZD1iJjY0PyhcInVuZGVmaW5lZFwiPT09dHlwZW9mIGQ/NDM4OmQpJjQwOTV8MzI3Njg6MDtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEpdmFyIGc9YTtlbHNle2E9UmIoYSk7dHJ5e2c9b2MoYSx7YWE6IShiJjEzMTA3Mil9KS5ub2RlfWNhdGNoKGspe319Zj0hMTtpZihiJjY0KWlmKGcpe2lmKGImMTI4KXRocm93IG5ldyBSKFAuaGEpO31lbHNlIGc9Q2MoYSxkLDApLGY9ITA7aWYoIWcpdGhyb3cgbmV3IFIoUC51KTs4MTkyPT09KGcubW9kZSY2MTQ0MCkmJihiJj0tNTEzKTtpZihiJjY1NTM2JiYxNjM4NCE9PShnLm1vZGUmNjE0NDApKXRocm93IG5ldyBSKFAuWik7aWYoIWYmJihkPWc/NDA5NjA9PT0oZy5tb2RlJlxuNjE0NDApP1AuWDoxNjM4ND09PShnLm1vZGUmNjE0NDApJiYoXCJyXCIhPT13YyhiKXx8YiY1MTIpP1AuTjp0YyhnLHdjKGIpKTpQLnUpKXRocm93IG5ldyBSKGQpO2lmKGImNTEyKXtkPWc7dmFyIGg7XCJzdHJpbmdcIj09PXR5cGVvZiBkP2g9b2MoZCx7YWE6ITB9KS5ub2RlOmg9ZDtpZighaC5jLnMpdGhyb3cgbmV3IFIoUC5JKTtpZigxNjM4ND09PShoLm1vZGUmNjE0NDApKXRocm93IG5ldyBSKFAuTik7aWYoMzI3NjghPT0oaC5tb2RlJjYxNDQwKSl0aHJvdyBuZXcgUihQLmkpO2lmKGQ9dGMoaCxcIndcIikpdGhyb3cgbmV3IFIoZCk7aC5jLnMoaCx7c2l6ZTowLHRpbWVzdGFtcDpEYXRlLm5vdygpfSl9YiY9LTY0MTtlPXpjKHtub2RlOmcscGF0aDpxYyhnKSxmbGFnczpiLHNlZWthYmxlOiEwLHBvc2l0aW9uOjAsZjpnLmYsU2E6W10sZXJyb3I6ITF9LGUpO2UuZi5vcGVuJiZlLmYub3BlbihlKTshYy5sb2dSZWFkRmlsZXN8fGImMXx8KEdjfHwoR2M9e30pLGEgaW4gR2N8fChHY1thXT0xLFxuY29uc29sZS5sb2coXCJGUy50cmFja2luZ0RlbGVnYXRlIGVycm9yIG9uIHJlYWQgZmlsZTogXCIrYSkpKTt0cnl7bmMub25PcGVuRmlsZSYmKGc9MCwxIT09KGImMjA5NzE1NSkmJihnfD0xKSwwIT09KGImMjA5NzE1NSkmJihnfD0yKSxuYy5vbk9wZW5GaWxlKGEsZykpfWNhdGNoKGspe2NvbnNvbGUubG9nKFwiRlMudHJhY2tpbmdEZWxlZ2F0ZVsnb25PcGVuRmlsZSddKCdcIithK1wiJywgZmxhZ3MpIHRocmV3IGFuIGV4Y2VwdGlvbjogXCIray5tZXNzYWdlKX1yZXR1cm4gZX1mdW5jdGlvbiBIYyhhKXtpZihudWxsPT09YS5mZCl0aHJvdyBuZXcgUihQLkIpO2EuYmEmJihhLmJhPW51bGwpO3RyeXthLmYuY2xvc2UmJmEuZi5jbG9zZShhKX1jYXRjaChiKXt0aHJvdyBiO31maW5hbGx5e1RbYS5mZF09bnVsbH1hLmZkPW51bGx9XG5mdW5jdGlvbiBJYyhhLGIsZCl7aWYobnVsbD09PWEuZmQpdGhyb3cgbmV3IFIoUC5CKTtpZighYS5zZWVrYWJsZXx8IWEuZi5GKXRocm93IG5ldyBSKFAuTyk7YS5wb3NpdGlvbj1hLmYuRihhLGIsZCk7YS5TYT1bXX1mdW5jdGlvbiBKYygpe1J8fChSPWZ1bmN0aW9uKGEsYil7dGhpcy5ub2RlPWI7dGhpcy5OYT1mdW5jdGlvbihhKXt0aGlzLnY9YTtmb3IodmFyIGIgaW4gUClpZihQW2JdPT09YSl7dGhpcy5jb2RlPWI7YnJlYWt9fTt0aGlzLk5hKGEpO3RoaXMubWVzc2FnZT1QYlthXTt0aGlzLnN0YWNrJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInN0YWNrXCIse3ZhbHVlOkVycm9yKCkuc3RhY2ssd3JpdGFibGU6ITB9KX0sUi5wcm90b3R5cGU9RXJyb3IoKSxSLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1SLFtQLnVdLmZvckVhY2goZnVuY3Rpb24oYSl7ZmNbYV09bmV3IFIoYSk7ZmNbYV0uc3RhY2s9XCI8Z2VuZXJpYyBlcnJvciwgbm8gc3RhY2s+XCJ9KSl9dmFyIEtjO1xuZnVuY3Rpb24gTGMoYSxiKXt2YXIgZD0wO2EmJihkfD0zNjUpO2ImJihkfD0xNDYpO3JldHVybiBkfVxuZnVuY3Rpb24gTWMoYSxiLGQpe2E9UmIoXCIvZGV2L1wiK2EpO3ZhciBlPUxjKCEhYiwhIWQpO05jfHwoTmM9NjQpO3ZhciBmPU5jKys8PDh8MDtYYihmLHtvcGVuOmZ1bmN0aW9uKGEpe2Euc2Vla2FibGU9ITF9LGNsb3NlOmZ1bmN0aW9uKCl7ZCYmZC5idWZmZXImJmQuYnVmZmVyLmxlbmd0aCYmZCgxMCl9LHJlYWQ6ZnVuY3Rpb24oYSxkLGUsZil7Zm9yKHZhciBnPTAsaD0wO2g8ZjtoKyspe3RyeXt2YXIgaz1iKCl9Y2F0Y2goQSl7dGhyb3cgbmV3IFIoUC5NKTt9aWYodm9pZCAwPT09ayYmMD09PWcpdGhyb3cgbmV3IFIoUC5mYSk7aWYobnVsbD09PWt8fHZvaWQgMD09PWspYnJlYWs7ZysrO2RbZStoXT1rfWcmJihhLm5vZGUudGltZXN0YW1wPURhdGUubm93KCkpO3JldHVybiBnfSx3cml0ZTpmdW5jdGlvbihhLGIsZSxmKXtmb3IodmFyIGc9MDtnPGY7ZysrKXRyeXtkKGJbZStnXSl9Y2F0Y2gocil7dGhyb3cgbmV3IFIoUC5NKTt9ZiYmKGEubm9kZS50aW1lc3RhbXA9RGF0ZS5ub3coKSk7XG5yZXR1cm4gZ319KTtEYyhhLGUsZil9dmFyIE5jLEZTPXt9LHVjLEFjLEdjLE9jPXt9LFY9MDtmdW5jdGlvbiBYKCl7Vis9NDtyZXR1cm4gdltWLTQ+PjJdfWZ1bmN0aW9uIFBjKCl7dmFyIGE9VFtYKCldO2lmKCFhKXRocm93IG5ldyBSKFAuQik7cmV0dXJuIGF9XG5mdW5jdGlvbiBRYyhhLGIpe1JjPWE7U2M9YjtpZighVGMpcmV0dXJuIDE7aWYoMD09YSlVYz1mdW5jdGlvbigpe3ZhciBhPU1hdGgubWF4KDAsVmMrYi1PKCkpfDA7c2V0VGltZW91dChXYyxhKX0sWGM9XCJ0aW1lb3V0XCI7ZWxzZSBpZigxPT1hKVVjPWZ1bmN0aW9uKCl7WWMoV2MpfSxYYz1cInJBRlwiO2Vsc2UgaWYoMj09YSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBzZXRJbW1lZGlhdGUpe3ZhciBkPVtdO2FkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsZnVuY3Rpb24oYSl7aWYoXCJzZXRpbW1lZGlhdGVcIj09PWEuZGF0YXx8XCJzZXRpbW1lZGlhdGVcIj09PWEuZGF0YS50YXJnZXQpYS5zdG9wUHJvcGFnYXRpb24oKSxkLnNoaWZ0KCkoKX0sITApO3NldEltbWVkaWF0ZT1mdW5jdGlvbihhKXtkLnB1c2goYSk7dm9pZCAwPT09Yy5zZXRJbW1lZGlhdGVzJiYoYy5zZXRJbW1lZGlhdGVzPVtdKTtjLnNldEltbWVkaWF0ZXMucHVzaChhKTtwb3N0TWVzc2FnZSh7dGFyZ2V0Olwic2V0aW1tZWRpYXRlXCJ9KX19VWM9XG5mdW5jdGlvbigpe3NldEltbWVkaWF0ZShXYyl9O1hjPVwiaW1tZWRpYXRlXCJ9cmV0dXJuIDB9XG5mdW5jdGlvbiBaYyhhLGIsZCxlLGYpe2Mubm9FeGl0UnVudGltZT0hMDthc3NlcnQoIVRjLFwiZW1zY3JpcHRlbl9zZXRfbWFpbl9sb29wOiB0aGVyZSBjYW4gb25seSBiZSBvbmUgbWFpbiBsb29wIGZ1bmN0aW9uIGF0IG9uY2U6IGNhbGwgZW1zY3JpcHRlbl9jYW5jZWxfbWFpbl9sb29wIHRvIGNhbmNlbCB0aGUgcHJldmlvdXMgb25lIGJlZm9yZSBzZXR0aW5nIGEgbmV3IG9uZSB3aXRoIGRpZmZlcmVudCBwYXJhbWV0ZXJzLlwiKTtUYz1hOyRjPWU7dmFyIGc9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBlP2Z1bmN0aW9uKCl7Yy5keW5DYWxsX3ZpKGEsZSl9OmZ1bmN0aW9uKCl7Yy5keW5DYWxsX3YoYSl9O3ZhciBoPWFkO1djPWZ1bmN0aW9uKCl7aWYoIXBhKWlmKDA8YmQubGVuZ3RoKXt2YXIgYT1EYXRlLm5vdygpLGI9YmQuc2hpZnQoKTtiLmcoYi5QKTtpZihjZCl7dmFyIGQ9Y2QsZT0wPT1kJTE/ZC0xOk1hdGguZmxvb3IoZCk7Y2Q9Yi5UYz9lOig4KmQrKGUrLjUpKS85fWNvbnNvbGUubG9nKCdtYWluIGxvb3AgYmxvY2tlciBcIicrXG5iLm5hbWUrJ1wiIHRvb2sgJysoRGF0ZS5ub3coKS1hKStcIiBtc1wiKTtjLnNldFN0YXR1cyYmKGE9Yy5zdGF0dXNNZXNzYWdlfHxcIlBsZWFzZSB3YWl0Li4uXCIsYj1jZCxkPWRkLlZjLGI/YjxkP2Muc2V0U3RhdHVzKGErXCIgKFwiKyhkLWIpK1wiL1wiK2QrXCIpXCIpOmMuc2V0U3RhdHVzKGEpOmMuc2V0U3RhdHVzKFwiXCIpKTtoPGFkfHxzZXRUaW1lb3V0KFdjLDApfWVsc2UgaWYoIShoPGFkKSlpZihlZD1lZCsxfDAsMT09UmMmJjE8U2MmJjAhPWVkJVNjKVVjKCk7ZWxzZXswPT1SYyYmKFZjPU8oKSk7XCJ0aW1lb3V0XCI9PT1YYyYmYy5LJiYocChcIkxvb2tzIGxpa2UgeW91IGFyZSByZW5kZXJpbmcgd2l0aG91dCB1c2luZyByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgZm9yIHRoZSBtYWluIGxvb3AuIFlvdSBzaG91bGQgdXNlIDAgZm9yIHRoZSBmcmFtZSByYXRlIGluIGVtc2NyaXB0ZW5fc2V0X21haW5fbG9vcCBpbiBvcmRlciB0byB1c2UgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLCBhcyB0aGF0IGNhbiBncmVhdGx5IGltcHJvdmUgeW91ciBmcmFtZSByYXRlcyFcIiksXG5YYz1cIlwiKTtpZighKHBhfHxjLnByZU1haW5Mb29wJiYhMT09PWMucHJlTWFpbkxvb3AoKSkpe3RyeXtnKCl9Y2F0Y2godyl7dGhyb3cgdyYmXCJvYmplY3RcIj09PXR5cGVvZiB3JiZ3LnN0YWNrJiZwKFwiZXhjZXB0aW9uIHRocm93bjogXCIrW3csdy5zdGFja10pLHc7fWMucG9zdE1haW5Mb29wJiZjLnBvc3RNYWluTG9vcCgpfWg8YWR8fChcIm9iamVjdFwiPT09dHlwZW9mIFNETCYmU0RMLmF1ZGlvJiZTREwuYXVkaW8uTGEmJlNETC5hdWRpby5MYSgpLFVjKCkpfX07Znx8KGImJjA8Yj9RYygwLDFFMy9iKTpRYygxLDEpLFVjKCkpO2lmKGQpdGhyb3dcIlNpbXVsYXRlSW5maW5pdGVMb29wXCI7fXZhciBVYz1udWxsLFhjPVwiXCIsYWQ9MCxUYz1udWxsLCRjPTAsUmM9MCxTYz0wLGVkPTAsYmQ9W10sZGQ9e30sVmMsV2MsY2QsZmQ9ITEsZ2Q9ITEsaGQ9W107XG5mdW5jdGlvbiBpZCgpe2Z1bmN0aW9uIGEoKXtnZD1kb2N1bWVudC5wb2ludGVyTG9ja0VsZW1lbnQ9PT1jLmNhbnZhc3x8ZG9jdW1lbnQubW96UG9pbnRlckxvY2tFbGVtZW50PT09Yy5jYW52YXN8fGRvY3VtZW50LndlYmtpdFBvaW50ZXJMb2NrRWxlbWVudD09PWMuY2FudmFzfHxkb2N1bWVudC5tc1BvaW50ZXJMb2NrRWxlbWVudD09PWMuY2FudmFzfWMucHJlbG9hZFBsdWdpbnN8fChjLnByZWxvYWRQbHVnaW5zPVtdKTtpZighamQpe2pkPSEwO3RyeXtrZD0hMH1jYXRjaChkKXtrZD0hMSxjb25zb2xlLmxvZyhcIndhcm5pbmc6IG5vIGJsb2IgY29uc3RydWN0b3IsIGNhbm5vdCBjcmVhdGUgYmxvYnMgd2l0aCBtaW1ldHlwZXNcIil9bGQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIE1vekJsb2JCdWlsZGVyP01vekJsb2JCdWlsZGVyOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBXZWJLaXRCbG9iQnVpbGRlcj9XZWJLaXRCbG9iQnVpbGRlcjprZD9udWxsOmNvbnNvbGUubG9nKFwid2FybmluZzogbm8gQmxvYkJ1aWxkZXJcIik7XG5tZD1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdy5VUkw/d2luZG93LlVSTDp3aW5kb3cud2Via2l0VVJMOnZvaWQgMDtjLnVhfHxcInVuZGVmaW5lZFwiIT09dHlwZW9mIG1kfHwoY29uc29sZS5sb2coXCJ3YXJuaW5nOiBCcm93c2VyIGRvZXMgbm90IHN1cHBvcnQgY3JlYXRpbmcgb2JqZWN0IFVSTHMuIEJ1aWx0LWluIGJyb3dzZXIgaW1hZ2UgZGVjb2Rpbmcgd2lsbCBub3QgYmUgYXZhaWxhYmxlLlwiKSxjLnVhPSEwKTtjLnByZWxvYWRQbHVnaW5zLnB1c2goe2NhbkhhbmRsZTpmdW5jdGlvbihhKXtyZXR1cm4hYy51YSYmL1xcLihqcGd8anBlZ3xwbmd8Ym1wKSQvaS50ZXN0KGEpfSxoYW5kbGU6ZnVuY3Rpb24oYSxiLGYsZyl7dmFyIGQ9bnVsbDtpZihrZCl0cnl7ZD1uZXcgQmxvYihbYV0se3R5cGU6bmQoYil9KSxkLnNpemUhPT1hLmxlbmd0aCYmKGQ9bmV3IEJsb2IoWyhuZXcgVWludDhBcnJheShhKSkuYnVmZmVyXSx7dHlwZTpuZChiKX0pKX1jYXRjaChxKXtpYShcIkJsb2IgY29uc3RydWN0b3IgcHJlc2VudCBidXQgZmFpbHM6IFwiK1xucStcIjsgZmFsbGluZyBiYWNrIHRvIGJsb2IgYnVpbGRlclwiKX1kfHwoZD1uZXcgbGQsZC5hcHBlbmQoKG5ldyBVaW50OEFycmF5KGEpKS5idWZmZXIpLGQ9ZC5nZXRCbG9iKCkpO3ZhciBlPW1kLmNyZWF0ZU9iamVjdFVSTChkKSxtPW5ldyBJbWFnZTttLm9ubG9hZD1mdW5jdGlvbigpe2Fzc2VydChtLmNvbXBsZXRlLFwiSW1hZ2UgXCIrYitcIiBjb3VsZCBub3QgYmUgZGVjb2RlZFwiKTt2YXIgZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2Qud2lkdGg9bS53aWR0aDtkLmhlaWdodD1tLmhlaWdodDtkLmdldENvbnRleHQoXCIyZFwiKS5kcmF3SW1hZ2UobSwwLDApO2MucHJlbG9hZGVkSW1hZ2VzW2JdPWQ7bWQucmV2b2tlT2JqZWN0VVJMKGUpO2YmJmYoYSl9O20ub25lcnJvcj1mdW5jdGlvbigpe2NvbnNvbGUubG9nKFwiSW1hZ2UgXCIrZStcIiBjb3VsZCBub3QgYmUgZGVjb2RlZFwiKTtnJiZnKCl9O20uc3JjPWV9fSk7Yy5wcmVsb2FkUGx1Z2lucy5wdXNoKHtjYW5IYW5kbGU6ZnVuY3Rpb24oYSl7cmV0dXJuIWMuWmMmJlxuYS5zdWJzdHIoLTQpaW57XCIub2dnXCI6MSxcIi53YXZcIjoxLFwiLm1wM1wiOjF9fSxoYW5kbGU6ZnVuY3Rpb24oYSxiLGYsZyl7ZnVuY3Rpb24gZChkKXttfHwobT0hMCxjLnByZWxvYWRlZEF1ZGlvc1tiXT1kLGYmJmYoYSkpfWZ1bmN0aW9uIGUoKXttfHwobT0hMCxjLnByZWxvYWRlZEF1ZGlvc1tiXT1uZXcgQXVkaW8sZyYmZygpKX12YXIgbT0hMTtpZihrZCl7dHJ5e3ZhciBxPW5ldyBCbG9iKFthXSx7dHlwZTpuZChiKX0pfWNhdGNoKHcpe3JldHVybiBlKCl9cT1tZC5jcmVhdGVPYmplY3RVUkwocSk7dmFyIHI9bmV3IEF1ZGlvO3IuYWRkRXZlbnRMaXN0ZW5lcihcImNhbnBsYXl0aHJvdWdoXCIsZnVuY3Rpb24oKXtkKHIpfSwhMSk7ci5vbmVycm9yPWZ1bmN0aW9uKCl7aWYoIW0pe2NvbnNvbGUubG9nKFwid2FybmluZzogYnJvd3NlciBjb3VsZCBub3QgZnVsbHkgZGVjb2RlIGF1ZGlvIFwiK2IrXCIsIHRyeWluZyBzbG93ZXIgYmFzZTY0IGFwcHJvYWNoXCIpO2Zvcih2YXIgZT1cIlwiLGY9MCxnPTAsXG5oPTA7aDxhLmxlbmd0aDtoKyspZm9yKGY9Zjw8OHxhW2hdLGcrPTg7Njw9Zzspe3ZhciBrPWY+PmctNiY2MztnLT02O2UrPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrL1wiW2tdfTI9PWc/KGUrPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrL1wiWyhmJjMpPDw0XSxlKz1cIj09XCIpOjQ9PWcmJihlKz1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIlsoZiYxNSk8PDJdLGUrPVwiPVwiKTtyLnNyYz1cImRhdGE6YXVkaW8veC1cIitiLnN1YnN0cigtMykrXCI7YmFzZTY0LFwiK2U7ZChyKX19O3Iuc3JjPXE7b2QoZnVuY3Rpb24oKXtkKHIpfSwxRTQpfWVsc2UgcmV0dXJuIGUoKX19KTt2YXIgYj1jLmNhbnZhcztiJiYoYi5yZXF1ZXN0UG9pbnRlckxvY2s9Yi5yZXF1ZXN0UG9pbnRlckxvY2t8fFxuYi5tb3pSZXF1ZXN0UG9pbnRlckxvY2t8fGIud2Via2l0UmVxdWVzdFBvaW50ZXJMb2NrfHxiLm1zUmVxdWVzdFBvaW50ZXJMb2NrfHxmdW5jdGlvbigpe30sYi5leGl0UG9pbnRlckxvY2s9ZG9jdW1lbnQuZXhpdFBvaW50ZXJMb2NrfHxkb2N1bWVudC5tb3pFeGl0UG9pbnRlckxvY2t8fGRvY3VtZW50LndlYmtpdEV4aXRQb2ludGVyTG9ja3x8ZG9jdW1lbnQubXNFeGl0UG9pbnRlckxvY2t8fGZ1bmN0aW9uKCl7fSxiLmV4aXRQb2ludGVyTG9jaz1iLmV4aXRQb2ludGVyTG9jay5iaW5kKGRvY3VtZW50KSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcmxvY2tjaGFuZ2VcIixhLCExKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW96cG9pbnRlcmxvY2tjaGFuZ2VcIixhLCExKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwid2Via2l0cG9pbnRlcmxvY2tjaGFuZ2VcIixhLCExKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibXNwb2ludGVybG9ja2NoYW5nZVwiLGEsXG4hMSksYy5lbGVtZW50UG9pbnRlckxvY2smJmIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oYSl7IWdkJiZjLmNhbnZhcy5yZXF1ZXN0UG9pbnRlckxvY2smJihjLmNhbnZhcy5yZXF1ZXN0UG9pbnRlckxvY2soKSxhLnByZXZlbnREZWZhdWx0KCkpfSwhMSkpfX1cbmZ1bmN0aW9uIHBkKGEsYixkLGUpe2lmKGImJmMuSyYmYT09Yy5jYW52YXMpcmV0dXJuIGMuSztpZihiKXt2YXIgZj17YW50aWFsaWFzOiExLGFscGhhOiExfTtpZihlKWZvcih2YXIgZyBpbiBlKWZbZ109ZVtnXTtpZihmPXFkKGEsZikpdmFyIGg9cmRbZl0uR0xjdHh9ZWxzZSBoPWEuZ2V0Q29udGV4dChcIjJkXCIpO2lmKCFoKXJldHVybiBudWxsO2QmJihifHxhc3NlcnQoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBHTGN0eCxcImNhbm5vdCBzZXQgaW4gbW9kdWxlIGlmIEdMY3R4IGlzIHVzZWQsIGJ1dCB3ZSBhcmUgYSBub24tR0wgY29udGV4dCB0aGF0IHdvdWxkIHJlcGxhY2UgaXRcIiksYy5LPWgsYiYmc2QoZiksYy5iZD1iLGhkLmZvckVhY2goZnVuY3Rpb24oYSl7YSgpfSksaWQoKSk7cmV0dXJuIGh9dmFyIHRkPSExLHVkPXZvaWQgMCx2ZD12b2lkIDA7XG5mdW5jdGlvbiB3ZChhLGIsZCl7ZnVuY3Rpb24gZSgpe2ZkPSExO3ZhciBhPWYucGFyZW50Tm9kZTsoZG9jdW1lbnQuZnVsbHNjcmVlbkVsZW1lbnR8fGRvY3VtZW50Lm1vekZ1bGxTY3JlZW5FbGVtZW50fHxkb2N1bWVudC5tc0Z1bGxzY3JlZW5FbGVtZW50fHxkb2N1bWVudC53ZWJraXRGdWxsc2NyZWVuRWxlbWVudHx8ZG9jdW1lbnQud2Via2l0Q3VycmVudEZ1bGxTY3JlZW5FbGVtZW50KT09PWE/KGYuZXhpdEZ1bGxzY3JlZW49ZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW58fGRvY3VtZW50LmNhbmNlbEZ1bGxTY3JlZW58fGRvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW58fGRvY3VtZW50Lm1zRXhpdEZ1bGxzY3JlZW58fGRvY3VtZW50LndlYmtpdENhbmNlbEZ1bGxTY3JlZW58fGZ1bmN0aW9uKCl7fSxmLmV4aXRGdWxsc2NyZWVuPWYuZXhpdEZ1bGxzY3JlZW4uYmluZChkb2N1bWVudCksdWQmJmYucmVxdWVzdFBvaW50ZXJMb2NrKCksZmQ9ITAsdmQ/KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTREwmJlxuKHZbU0RMLnNjcmVlbj4+Ml09S1tTREwuc2NyZWVuPj4yXXw4Mzg4NjA4KSx4ZChjLmNhbnZhcykseWQoKSk6eGQoZikpOihhLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGYsYSksYS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGEpLHZkPyhcInVuZGVmaW5lZFwiIT10eXBlb2YgU0RMJiYodltTREwuc2NyZWVuPj4yXT1LW1NETC5zY3JlZW4+PjJdJi04Mzg4NjA5KSx4ZChjLmNhbnZhcykseWQoKSk6eGQoZikpO2lmKGMub25GdWxsU2NyZWVuKWMub25GdWxsU2NyZWVuKGZkKTtpZihjLm9uRnVsbHNjcmVlbiljLm9uRnVsbHNjcmVlbihmZCl9dWQ9YTt2ZD1iO3pkPWQ7XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB1ZCYmKHVkPSEwKTtcInVuZGVmaW5lZFwiPT09dHlwZW9mIHZkJiYodmQ9ITEpO1widW5kZWZpbmVkXCI9PT10eXBlb2YgemQmJih6ZD1udWxsKTt2YXIgZj1jLmNhbnZhczt0ZHx8KHRkPSEwLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJmdWxsc2NyZWVuY2hhbmdlXCIsZSwhMSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vemZ1bGxzY3JlZW5jaGFuZ2VcIixcbmUsITEpLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ3ZWJraXRmdWxsc2NyZWVuY2hhbmdlXCIsZSwhMSksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIk1TRnVsbHNjcmVlbkNoYW5nZVwiLGUsITEpKTt2YXIgZz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZyxmKTtnLmFwcGVuZENoaWxkKGYpO2cucmVxdWVzdEZ1bGxzY3JlZW49Zy5yZXF1ZXN0RnVsbHNjcmVlbnx8Zy5tb3pSZXF1ZXN0RnVsbFNjcmVlbnx8Zy5tc1JlcXVlc3RGdWxsc2NyZWVufHwoZy53ZWJraXRSZXF1ZXN0RnVsbHNjcmVlbj9mdW5jdGlvbigpe2cud2Via2l0UmVxdWVzdEZ1bGxzY3JlZW4oRWxlbWVudC5BTExPV19LRVlCT0FSRF9JTlBVVCl9Om51bGwpfHwoZy53ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbj9mdW5jdGlvbigpe2cud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4oRWxlbWVudC5BTExPV19LRVlCT0FSRF9JTlBVVCl9Om51bGwpO2Q/Zy5yZXF1ZXN0RnVsbHNjcmVlbih7Y2Q6ZH0pOlxuZy5yZXF1ZXN0RnVsbHNjcmVlbigpfWZ1bmN0aW9uIEFkKGEsYixkKXtwKFwiQnJvd3Nlci5yZXF1ZXN0RnVsbFNjcmVlbigpIGlzIGRlcHJlY2F0ZWQuIFBsZWFzZSBjYWxsIEJyb3dzZXIucmVxdWVzdEZ1bGxzY3JlZW4gaW5zdGVhZC5cIik7QWQ9ZnVuY3Rpb24oYSxiLGQpe3JldHVybiB3ZChhLGIsZCl9O3JldHVybiB3ZChhLGIsZCl9dmFyIEJkPTA7ZnVuY3Rpb24gQ2QoYSl7dmFyIGI9RGF0ZS5ub3coKTtpZigwPT09QmQpQmQ9YisxRTMvNjA7ZWxzZSBmb3IoO2IrMj49QmQ7KUJkKz0xRTMvNjA7c2V0VGltZW91dChhLE1hdGgubWF4KEJkLWIsMCkpfVxuZnVuY3Rpb24gWWMoYSl7XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3c/Q2QoYSk6KHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fCh3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93Lm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fENkKSx3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGEpKX1mdW5jdGlvbiBEZChhKXtZYyhmdW5jdGlvbigpe3BhfHxhKCl9KX1mdW5jdGlvbiBvZChhLGIpe2Mubm9FeGl0UnVudGltZT0hMDtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cGF8fGEoKX0sYil9XG5mdW5jdGlvbiBuZChhKXtyZXR1cm57anBnOlwiaW1hZ2UvanBlZ1wiLGpwZWc6XCJpbWFnZS9qcGVnXCIscG5nOlwiaW1hZ2UvcG5nXCIsYm1wOlwiaW1hZ2UvYm1wXCIsb2dnOlwiYXVkaW8vb2dnXCIsd2F2OlwiYXVkaW8vd2F2XCIsbXAzOlwiYXVkaW8vbXBlZ1wifVthLnN1YnN0cihhLmxhc3RJbmRleE9mKFwiLlwiKSsxKV19dmFyIEVkPVtdO2Z1bmN0aW9uIHlkKCl7dmFyIGE9Yy5jYW52YXM7RWQuZm9yRWFjaChmdW5jdGlvbihiKXtiKGEud2lkdGgsYS5oZWlnaHQpfSl9XG5mdW5jdGlvbiB4ZChhLGIsZCl7YiYmZD8oYS5UYT1iLGEuRmE9ZCk6KGI9YS5UYSxkPWEuRmEpO3ZhciBlPWIsZj1kO2MuZm9yY2VkQXNwZWN0UmF0aW8mJjA8Yy5mb3JjZWRBc3BlY3RSYXRpbyYmKGUvZjxjLmZvcmNlZEFzcGVjdFJhdGlvP2U9TWF0aC5yb3VuZChmKmMuZm9yY2VkQXNwZWN0UmF0aW8pOmY9TWF0aC5yb3VuZChlL2MuZm9yY2VkQXNwZWN0UmF0aW8pKTtpZigoZG9jdW1lbnQuZnVsbHNjcmVlbkVsZW1lbnR8fGRvY3VtZW50Lm1vekZ1bGxTY3JlZW5FbGVtZW50fHxkb2N1bWVudC5tc0Z1bGxzY3JlZW5FbGVtZW50fHxkb2N1bWVudC53ZWJraXRGdWxsc2NyZWVuRWxlbWVudHx8ZG9jdW1lbnQud2Via2l0Q3VycmVudEZ1bGxTY3JlZW5FbGVtZW50KT09PWEucGFyZW50Tm9kZSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNjcmVlbil7dmFyIGc9TWF0aC5taW4oc2NyZWVuLndpZHRoL2Usc2NyZWVuLmhlaWdodC9mKTtlPU1hdGgucm91bmQoZSpnKTtmPU1hdGgucm91bmQoZipcbmcpfXZkPyhhLndpZHRoIT1lJiYoYS53aWR0aD1lKSxhLmhlaWdodCE9ZiYmKGEuaGVpZ2h0PWYpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiBhLnN0eWxlJiYoYS5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcIndpZHRoXCIpLGEuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJoZWlnaHRcIikpKTooYS53aWR0aCE9YiYmKGEud2lkdGg9YiksYS5oZWlnaHQhPWQmJihhLmhlaWdodD1kKSxcInVuZGVmaW5lZFwiIT10eXBlb2YgYS5zdHlsZSYmKGUhPWJ8fGYhPWQ/KGEuc3R5bGUuc2V0UHJvcGVydHkoXCJ3aWR0aFwiLGUrXCJweFwiLFwiaW1wb3J0YW50XCIpLGEuc3R5bGUuc2V0UHJvcGVydHkoXCJoZWlnaHRcIixmK1wicHhcIixcImltcG9ydGFudFwiKSk6KGEuc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJ3aWR0aFwiKSxhLnN0eWxlLnJlbW92ZVByb3BlcnR5KFwiaGVpZ2h0XCIpKSkpfXZhciBqZCxrZCxsZCxtZCx6ZCxGZD1bXSxZPXZvaWQgMDtmdW5jdGlvbiBaKGEsYil7S1thPj4yXT1iO0tbYSs0Pj4yXT1iLzQyOTQ5NjcyOTZ8MH1cbmZ1bmN0aW9uIEdkKGEsYil7dHJ5e3ZhciBkPWluZGV4ZWREQi5vcGVuKFwiZW1zY3JpcHRlbl9maWxlc3lzdGVtXCIsMSl9Y2F0Y2goZSl7YihlKTtyZXR1cm59ZC5vbnVwZ3JhZGVuZWVkZWQ9ZnVuY3Rpb24oYSl7YT1hLnRhcmdldC5yZXN1bHQ7YS5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKFwiRklMRVNcIikmJmEuZGVsZXRlT2JqZWN0U3RvcmUoXCJGSUxFU1wiKTthLmNyZWF0ZU9iamVjdFN0b3JlKFwiRklMRVNcIil9O2Qub25zdWNjZXNzPWZ1bmN0aW9uKGIpe2EoYi50YXJnZXQucmVzdWx0KX07ZC5vbmVycm9yPWZ1bmN0aW9uKGEpe2IoYSl9fVxuZnVuY3Rpb24gSGQoYSxiLGQsZSl7dmFyIGY9S1thKzg+PjJdO2lmKGYpe3ZhciBnPUgoZiksaD1hKzExMixrPUgoaCk7a3x8KGs9XCJHRVRcIik7dmFyIG09S1toKzQ4Pj4yXSxxPUtbaCs1Mj4+Ml0scj0hIUtbaCs1Nj4+Ml0sdz1LW2grNjQ+PjJdLEE9S1toKzY4Pj4yXTtmPUtbaCs3Mj4+Ml07dmFyIEk9S1toKzc2Pj4yXSxGPUtbaCs4MD4+Ml07aD1LW2grODQ+PjJdO3ZhciBOPSEhKG0mMSksVz0hIShtJjIpO209ISEobSY2NCk7dz13P0godyk6dm9pZCAwO0E9QT9IKEEpOnZvaWQgMDt2YXIgb2E9ST9IKEkpOnZvaWQgMCx0PW5ldyBYTUxIdHRwUmVxdWVzdDt0LndpdGhDcmVkZW50aWFscz1yO3Qub3BlbihrLGcsIW0sdyxBKTttfHwodC50aW1lb3V0PXEpO3QubD1nO3QucmVzcG9uc2VUeXBlPVc/XCJtb3otY2h1bmtlZC1hcnJheWJ1ZmZlclwiOlwiYXJyYXlidWZmZXJcIjtJJiZ0Lm92ZXJyaWRlTWltZVR5cGUob2EpO2lmKGYpZm9yKDs7KXtrPUtbZj4+Ml07aWYoIWspYnJlYWs7Zz1LW2YrXG40Pj4yXTtpZighZylicmVhaztmKz04O2s9SChrKTtnPUgoZyk7dC5zZXRSZXF1ZXN0SGVhZGVyKGssZyl9RmQucHVzaCh0KTtLW2ErMD4+Ml09RmQubGVuZ3RoO2Y9RiYmaD9HLnNsaWNlKEYsRitoKTpudWxsO3Qub25sb2FkPWZ1bmN0aW9uKGUpe3ZhciBmPXQucmVzcG9uc2U/dC5yZXNwb25zZS5ieXRlTGVuZ3RoOjAsZz0wLGg9MDtOJiYhVyYmKGg9ZixnPU0oaCksRy5zZXQobmV3IFVpbnQ4QXJyYXkodC5yZXNwb25zZSksZykpO0tbYSsxMj4+Ml09ZztaKGErMTYsaCk7WihhKzI0LDApO2YmJlooYSszMixmKTtKW2ErNDA+PjFdPXQucmVhZHlTdGF0ZTs0PT09dC5yZWFkeVN0YXRlJiYwPT09dC5zdGF0dXMmJih0LnN0YXR1cz0wPGY/MjAwOjQwNCk7SlthKzQyPj4xXT10LnN0YXR1czt0LnN0YXR1c1RleHQmJkUodC5zdGF0dXNUZXh0LEcsYSs0NCw2NCk7MjAwPT10LnN0YXR1cz9iJiZiKGEsdCxlKTpkJiZkKGEsdCxlKX07dC5vbmVycm9yPWZ1bmN0aW9uKGIpe3ZhciBlPXQuc3RhdHVzO1xuND09dC5yZWFkeVN0YXRlJiYwPT1lJiYoZT00MDQpO0tbYSsxMj4+Ml09MDtaKGErMTYsMCk7WihhKzI0LDApO1ooYSszMiwwKTtKW2ErNDA+PjFdPXQucmVhZHlTdGF0ZTtKW2ErNDI+PjFdPWU7ZCYmZChhLHQsYil9O3Qub250aW1lb3V0PWZ1bmN0aW9uKGIpe2QmJmQoYSx0LGIpfTt0Lm9ucHJvZ3Jlc3M9ZnVuY3Rpb24oYil7dmFyIGQ9TiYmVyYmdC5yZXNwb25zZT90LnJlc3BvbnNlLmJ5dGVMZW5ndGg6MCxmPTA7TiYmVyYmKGY9TShkKSxHLnNldChuZXcgVWludDhBcnJheSh0LnJlc3BvbnNlKSxmKSk7S1thKzEyPj4yXT1mO1ooYSsxNixkKTtaKGErMjQsYi5sb2FkZWQtZCk7WihhKzMyLGIudG90YWwpO0pbYSs0MD4+MV09dC5yZWFkeVN0YXRlOzM8PXQucmVhZHlTdGF0ZSYmMD09PXQuc3RhdHVzJiYwPGIubG9hZGVkJiYodC5zdGF0dXM9MjAwKTtKW2ErNDI+PjFdPXQuc3RhdHVzO3Quc3RhdHVzVGV4dCYmRSh0LnN0YXR1c1RleHQsRyxhKzQ0LDY0KTtlJiZlKGEsdCxiKX07XG50cnl7dC5zZW5kKGYpfWNhdGNoKCRiKXtkJiZkKGEsdCwkYil9fWVsc2UgZChhLDAsXCJubyB1cmwgc3BlY2lmaWVkIVwiKX1mdW5jdGlvbiBJZChhLGIsZCxlLGYpe2lmKGEpe3ZhciBnPUtbYisxMTIrNjA+PjJdO2d8fChnPUtbYis4Pj4yXSk7dmFyIGg9SChnKTt0cnl7dmFyIGs9YS50cmFuc2FjdGlvbihbXCJGSUxFU1wiXSxcInJlYWR3cml0ZVwiKS5vYmplY3RTdG9yZShcIkZJTEVTXCIpLnB1dChkLGgpO2sub25zdWNjZXNzPWZ1bmN0aW9uKCl7SltiKzQwPj4xXT00O0pbYis0Mj4+MV09MjAwO0UoXCJPS1wiLEcsYis0NCw2NCk7ZShiLDAsaCl9O2sub25lcnJvcj1mdW5jdGlvbihhKXtKW2IrNDA+PjFdPTQ7SltiKzQyPj4xXT00MTM7RShcIlBheWxvYWQgVG9vIExhcmdlXCIsRyxiKzQ0LDY0KTtmKGIsMCxhKX19Y2F0Y2gobSl7ZihiLDAsbSl9fWVsc2UgZihiLDAsXCJJbmRleGVkREIgbm90IGF2YWlsYWJsZSFcIil9XG5mdW5jdGlvbiBKZChhLGIsZCxlKXtpZihhKXt2YXIgZj1LW2IrMTEyKzYwPj4yXTtmfHwoZj1LW2IrOD4+Ml0pO2Y9SChmKTt0cnl7dmFyIGc9YS50cmFuc2FjdGlvbihbXCJGSUxFU1wiXSxcInJlYWRvbmx5XCIpLm9iamVjdFN0b3JlKFwiRklMRVNcIikuZ2V0KGYpO2cub25zdWNjZXNzPWZ1bmN0aW9uKGEpe2lmKGEudGFyZ2V0LnJlc3VsdCl7YT1hLnRhcmdldC5yZXN1bHQ7dmFyIGY9YS5ieXRlTGVuZ3RofHxhLmxlbmd0aCxnPU0oZik7Ry5zZXQobmV3IFVpbnQ4QXJyYXkoYSksZyk7S1tiKzEyPj4yXT1nO1ooYisxNixmKTtaKGIrMjQsMCk7WihiKzMyLGYpO0pbYis0MD4+MV09NDtKW2IrNDI+PjFdPTIwMDtFKFwiT0tcIixHLGIrNDQsNjQpO2QoYiwwLGEpfWVsc2UgSltiKzQwPj4xXT00LEpbYis0Mj4+MV09NDA0LEUoXCJOb3QgRm91bmRcIixHLGIrNDQsNjQpLGUoYiwwLFwibm8gZGF0YVwiKX07Zy5vbmVycm9yPWZ1bmN0aW9uKGEpe0pbYis0MD4+MV09NDtKW2IrNDI+PjFdPTQwNDtFKFwiTm90IEZvdW5kXCIsXG5HLGIrNDQsNjQpO2UoYiwwLGEpfX1jYXRjaChoKXtlKGIsMCxoKX19ZWxzZSBlKGIsMCxcIkluZGV4ZWREQiBub3QgYXZhaWxhYmxlIVwiKX1cbmZ1bmN0aW9uIEtkKGEsYixkLGUpe2lmKGEpe3ZhciBmPUtbYisxMTIrNjA+PjJdO2Z8fChmPUtbYis4Pj4yXSk7Zj1IKGYpO3RyeXt2YXIgZz1hLnRyYW5zYWN0aW9uKFtcIkZJTEVTXCJdLFwicmVhZHdyaXRlXCIpLm9iamVjdFN0b3JlKFwiRklMRVNcIikuZGVsZXRlKGYpO2cub25zdWNjZXNzPWZ1bmN0aW9uKGEpe2E9YS50YXJnZXQucmVzdWx0O0tbYisxMj4+Ml09MDtaKGIrMTYsMCk7WihiKzI0LDApO1ooYisyNCwwKTtKW2IrNDA+PjFdPTQ7SltiKzQyPj4xXT0yMDA7RShcIk9LXCIsRyxiKzQ0LDY0KTtkKGIsMCxhKX07Zy5vbmVycm9yPWZ1bmN0aW9uKGEpe0pbYis0MD4+MV09NDtKW2IrNDI+PjFdPTQwNDtFKFwiTm90IEZvdW5kXCIsRyxiKzQ0LDY0KTtlKGIsMCxhKX19Y2F0Y2goaCl7ZShiLDAsaCl9fWVsc2UgZShiLDAsXCJJbmRleGVkREIgbm90IGF2YWlsYWJsZSFcIil9dmFyIExkPXZvaWQgMCxNZDtNZD1kYShNYXRoLm1heCgxMiwxKSk7dmFyIE5kO0xkPU1kO2Fzc2VydCgwPT0oTWQmMykpO1xuZm9yKE5kPU1kKzEyO0xkPE5kO0xkKz00KXZbTGQ+PjJdPTA7Zm9yKE5kPU1kKzEyO0xkPE5kOylEW0xkKys+PjBdPTA7ZnVuY3Rpb24gT2QoYSl7aWYoMD09PWEpcmV0dXJuIDA7YT1IKGEpO2lmKCFMLmhhc093blByb3BlcnR5KGEpKXJldHVybiAwO09kLmwmJkxiKE9kLmwpO2E9TFthXTt2YXIgYj14YShhKSsxLGQ9TShiKTtkJiZFKGEsRCxkLGIpO09kLmw9ZDtyZXR1cm4gT2QubH12YXIgUGQ9MSxRZD0wLFJkPVtdLHJkPVtdLFNkPW51bGwsVGQ9W107ZnVuY3Rpb24gVWQoYSl7Zm9yKHZhciBiPVBkKyssZD1hLmxlbmd0aDtkPGI7ZCsrKWFbZF09bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIHFkKGEsYil7ZnVuY3Rpb24gZCgpe31cInVuZGVmaW5lZFwiPT09dHlwZW9mIGIubWFqb3JWZXJzaW9uJiZcInVuZGVmaW5lZFwiPT09dHlwZW9mIGIubWlub3JWZXJzaW9uJiYoYi5tYWpvclZlcnNpb249MSxiLm1pbm9yVmVyc2lvbj0wKTt0cnl7YS5hZGRFdmVudExpc3RlbmVyKFwid2ViZ2xjb250ZXh0Y3JlYXRpb25lcnJvclwiLGQsITEpO3RyeXtpZigxPT1iLm1ham9yVmVyc2lvbiYmMD09Yi5taW5vclZlcnNpb24pdmFyIGU9YS5nZXRDb250ZXh0KFwid2ViZ2xcIixiKXx8YS5nZXRDb250ZXh0KFwiZXhwZXJpbWVudGFsLXdlYmdsXCIsYik7ZWxzZSBpZigyPT1iLm1ham9yVmVyc2lvbiYmMD09Yi5taW5vclZlcnNpb24pZT1hLmdldENvbnRleHQoXCJ3ZWJnbDJcIixiKTtlbHNlIHRocm93XCJVbnN1cHBvcnRlZCBXZWJHTCBjb250ZXh0IHZlcnNpb24gXCIrbWFqb3JWZXJzaW9uK1wiLlwiK21pbm9yVmVyc2lvbitcIiFcIjt9ZmluYWxseXthLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ3ZWJnbGNvbnRleHRjcmVhdGlvbmVycm9yXCIsXG5kLCExKX1pZighZSl0aHJvd1wiOihcIjt9Y2F0Y2goZil7cmV0dXJuIDB9cmV0dXJuIGU/VmQoZSxiKTowfWZ1bmN0aW9uIFZkKGEsYil7dmFyIGQ9VWQocmQpLGU9e2hhbmRsZTpkLGF0dHJpYnV0ZXM6Yix2ZXJzaW9uOmIubWFqb3JWZXJzaW9uLEdMY3R4OmF9O2EuY2FudmFzJiYoYS5jYW52YXMuU2M9ZSk7cmRbZF09ZTsoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBiLmVuYWJsZUV4dGVuc2lvbnNCeURlZmF1bHR8fGIuZW5hYmxlRXh0ZW5zaW9uc0J5RGVmYXVsdCkmJldkKGUpO3JldHVybiBkfWZ1bmN0aW9uIHNkKGEpe2lmKGEpe2lmKGE9cmRbYV0pR0xjdHg9Yy5LPWEuR0xjdHgsU2Q9YX1lbHNlIEdMY3R4PWMuSz1TZD1udWxsfVxuZnVuY3Rpb24gV2QoYSl7YXx8KGE9U2QpO2lmKCFhLkdhKXthLkdhPSEwO3ZhciBiPWEuR0xjdHg7aWYoMj5hLnZlcnNpb24pe3ZhciBkPWIuZ2V0RXh0ZW5zaW9uKFwiQU5HTEVfaW5zdGFuY2VkX2FycmF5c1wiKTtkJiYoYi52ZXJ0ZXhBdHRyaWJEaXZpc29yPWZ1bmN0aW9uKGEsYil7ZC52ZXJ0ZXhBdHRyaWJEaXZpc29yQU5HTEUoYSxiKX0sYi5kcmF3QXJyYXlzSW5zdGFuY2VkPWZ1bmN0aW9uKGEsYixlLGYpe2QuZHJhd0FycmF5c0luc3RhbmNlZEFOR0xFKGEsYixlLGYpfSxiLmRyYXdFbGVtZW50c0luc3RhbmNlZD1mdW5jdGlvbihhLGIsZSxmLGcpe2QuZHJhd0VsZW1lbnRzSW5zdGFuY2VkQU5HTEUoYSxiLGUsZixnKX0pO3ZhciBlPWIuZ2V0RXh0ZW5zaW9uKFwiT0VTX3ZlcnRleF9hcnJheV9vYmplY3RcIik7ZSYmKGIuY3JlYXRlVmVydGV4QXJyYXk9ZnVuY3Rpb24oKXtyZXR1cm4gZS5jcmVhdGVWZXJ0ZXhBcnJheU9FUygpfSxiLmRlbGV0ZVZlcnRleEFycmF5PWZ1bmN0aW9uKGEpe2UuZGVsZXRlVmVydGV4QXJyYXlPRVMoYSl9LFxuYi5iaW5kVmVydGV4QXJyYXk9ZnVuY3Rpb24oYSl7ZS5iaW5kVmVydGV4QXJyYXlPRVMoYSl9LGIuaXNWZXJ0ZXhBcnJheT1mdW5jdGlvbihhKXtyZXR1cm4gZS5pc1ZlcnRleEFycmF5T0VTKGEpfSk7dmFyIGY9Yi5nZXRFeHRlbnNpb24oXCJXRUJHTF9kcmF3X2J1ZmZlcnNcIik7ZiYmKGIuZHJhd0J1ZmZlcnM9ZnVuY3Rpb24oYSxiKXtmLmRyYXdCdWZmZXJzV0VCR0woYSxiKX0pfWIuVWM9Yi5nZXRFeHRlbnNpb24oXCJFWFRfZGlzam9pbnRfdGltZXJfcXVlcnlcIik7dmFyIGc9XCJPRVNfdGV4dHVyZV9mbG9hdCBPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0IE9FU19zdGFuZGFyZF9kZXJpdmF0aXZlcyBPRVNfdmVydGV4X2FycmF5X29iamVjdCBXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0YyBXRUJHTF9kZXB0aF90ZXh0dXJlIE9FU19lbGVtZW50X2luZGV4X3VpbnQgRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljIEVYVF9mcmFnX2RlcHRoIFdFQkdMX2RyYXdfYnVmZmVycyBBTkdMRV9pbnN0YW5jZWRfYXJyYXlzIE9FU190ZXh0dXJlX2Zsb2F0X2xpbmVhciBPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0X2xpbmVhciBFWFRfYmxlbmRfbWlubWF4IEVYVF9zaGFkZXJfdGV4dHVyZV9sb2QgV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3B2cnRjIEVYVF9jb2xvcl9idWZmZXJfaGFsZl9mbG9hdCBXRUJHTF9jb2xvcl9idWZmZXJfZmxvYXQgRVhUX3NSR0IgV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX2V0YzEgRVhUX2Rpc2pvaW50X3RpbWVyX3F1ZXJ5IFdFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9ldGMgV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX2FzdGMgRVhUX2NvbG9yX2J1ZmZlcl9mbG9hdCBXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0Y19zcmdiIEVYVF9kaXNqb2ludF90aW1lcl9xdWVyeV93ZWJnbDJcIi5zcGxpdChcIiBcIik7XG4oYT1iLmdldFN1cHBvcnRlZEV4dGVuc2lvbnMoKSkmJjA8YS5sZW5ndGgmJmIuZ2V0U3VwcG9ydGVkRXh0ZW5zaW9ucygpLmZvckVhY2goZnVuY3Rpb24oYSl7LTEhPWcuaW5kZXhPZihhKSYmYi5nZXRFeHRlbnNpb24oYSl9KX19ZnVuY3Rpb24gWGQoYSxiLGQsZSl7YSo9ZDtlKj1NYXRoLmZsb29yKChhK2UtMSkvZSk7cmV0dXJuIDA+PWI/MDooYi0xKSplK2F9XG5mdW5jdGlvbiBZZChhLGIsZCxlLGYpe3N3aXRjaChiKXtjYXNlIDY0MDY6Y2FzZSA2NDA5OmNhc2UgNjQwMjpiPTE7YnJlYWs7Y2FzZSA2NDEwOmI9MjticmVhaztjYXNlIDY0MDc6Y2FzZSAzNTkwNDpiPTM7YnJlYWs7Y2FzZSA2NDA4OmNhc2UgMzU5MDY6Yj00O2JyZWFrO2RlZmF1bHQ6cmV0dXJuIFFkfHwoUWQ9MTI4MCksbnVsbH1zd2l0Y2goYSl7Y2FzZSA1MTIxOmIqPTE7YnJlYWs7Y2FzZSA1MTIzOmNhc2UgMzYxOTM6Yio9MjticmVhaztjYXNlIDUxMjU6Y2FzZSA1MTI2OmIqPTQ7YnJlYWs7Y2FzZSAzNDA0MjpiPTQ7YnJlYWs7Y2FzZSAzMzYzNTpjYXNlIDMyODE5OmNhc2UgMzI4MjA6Yj0yO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIFFkfHwoUWQ9MTI4MCksbnVsbH1kPVhkKGQsZSxiLDQpO3N3aXRjaChhKXtjYXNlIDUxMjE6cmV0dXJuIEcuc3ViYXJyYXkoZixmK2QpO2Nhc2UgNTEyNjpyZXR1cm4gRGEuc3ViYXJyYXkoZj4+MixmK2Q+PjIpO2Nhc2UgNTEyNTpjYXNlIDM0MDQyOnJldHVybiBLLnN1YmFycmF5KGY+PlxuMixmK2Q+PjIpO2Nhc2UgNTEyMzpjYXNlIDMzNjM1OmNhc2UgMzI4MTk6Y2FzZSAzMjgyMDpjYXNlIDM2MTkzOnJldHVybiBKLnN1YmFycmF5KGY+PjEsZitkPj4xKTtkZWZhdWx0OnJldHVybiBRZHx8KFFkPTEyODApLG51bGx9fWZ1bmN0aW9uIFpkKCl7WmQubHx8KFpkLmw9W10pO1pkLmwucHVzaChCKCkpO3JldHVybiBaZC5sLmxlbmd0aC0xfXZhciAkZD17fSxhZT0xO2Z1bmN0aW9uIGJlKGEsYil7YmUubHx8KGJlLmw9e30pO2EgaW4gYmUubHx8KGMuZHluQ2FsbF92KGIpLGJlLmxbYV09MSl9ZnVuY3Rpb24gY2UoYSl7cmV0dXJuIDA9PT1hJTQmJigwIT09YSUxMDB8fDA9PT1hJTQwMCl9ZnVuY3Rpb24gZGUoYSxiKXtmb3IodmFyIGQ9MCxlPTA7ZTw9YjtkKz1hW2UrK10pO3JldHVybiBkfXZhciBlZT1bMzEsMjksMzEsMzAsMzEsMzAsMzEsMzEsMzAsMzEsMzAsMzFdLGZlPVszMSwyOCwzMSwzMCwzMSwzMCwzMSwzMSwzMCwzMSwzMCwzMV07XG5mdW5jdGlvbiBnZShhLGIpe2ZvcihhPW5ldyBEYXRlKGEuZ2V0VGltZSgpKTswPGI7KXt2YXIgZD1hLmdldE1vbnRoKCksZT0oY2UoYS5nZXRGdWxsWWVhcigpKT9lZTpmZSlbZF07aWYoYj5lLWEuZ2V0RGF0ZSgpKWItPWUtYS5nZXREYXRlKCkrMSxhLnNldERhdGUoMSksMTE+ZD9hLnNldE1vbnRoKGQrMSk6KGEuc2V0TW9udGgoMCksYS5zZXRGdWxsWWVhcihhLmdldEZ1bGxZZWFyKCkrMSkpO2Vsc2V7YS5zZXREYXRlKGEuZ2V0RGF0ZSgpK2IpO2JyZWFrfX1yZXR1cm4gYX1cbmZ1bmN0aW9uIGhlKGEsYixkLGUpe2Z1bmN0aW9uIGYoYSxiLGQpe2ZvcihhPVwibnVtYmVyXCI9PT10eXBlb2YgYT9hLnRvU3RyaW5nKCk6YXx8XCJcIjthLmxlbmd0aDxiOylhPWRbMF0rYTtyZXR1cm4gYX1mdW5jdGlvbiBnKGEsYil7cmV0dXJuIGYoYSxiLFwiMFwiKX1mdW5jdGlvbiBoKGEsYil7ZnVuY3Rpb24gZChhKXtyZXR1cm4gMD5hPy0xOjA8YT8xOjB9dmFyIGU7MD09PShlPWQoYS5nZXRGdWxsWWVhcigpLWIuZ2V0RnVsbFllYXIoKSkpJiYwPT09KGU9ZChhLmdldE1vbnRoKCktYi5nZXRNb250aCgpKSkmJihlPWQoYS5nZXREYXRlKCktYi5nZXREYXRlKCkpKTtyZXR1cm4gZX1mdW5jdGlvbiBrKGEpe3N3aXRjaChhLmdldERheSgpKXtjYXNlIDA6cmV0dXJuIG5ldyBEYXRlKGEuZ2V0RnVsbFllYXIoKS0xLDExLDI5KTtjYXNlIDE6cmV0dXJuIGE7Y2FzZSAyOnJldHVybiBuZXcgRGF0ZShhLmdldEZ1bGxZZWFyKCksMCwzKTtjYXNlIDM6cmV0dXJuIG5ldyBEYXRlKGEuZ2V0RnVsbFllYXIoKSxcbjAsMik7Y2FzZSA0OnJldHVybiBuZXcgRGF0ZShhLmdldEZ1bGxZZWFyKCksMCwxKTtjYXNlIDU6cmV0dXJuIG5ldyBEYXRlKGEuZ2V0RnVsbFllYXIoKS0xLDExLDMxKTtjYXNlIDY6cmV0dXJuIG5ldyBEYXRlKGEuZ2V0RnVsbFllYXIoKS0xLDExLDMwKX19ZnVuY3Rpb24gbShhKXthPWdlKG5ldyBEYXRlKGEuaisxOTAwLDAsMSksYS5WKTt2YXIgYj1rKG5ldyBEYXRlKGEuZ2V0RnVsbFllYXIoKSsxLDAsNCkpO3JldHVybiAwPj1oKGsobmV3IERhdGUoYS5nZXRGdWxsWWVhcigpLDAsNCkpLGEpPzA+PWgoYixhKT9hLmdldEZ1bGxZZWFyKCkrMTphLmdldEZ1bGxZZWFyKCk6YS5nZXRGdWxsWWVhcigpLTF9dmFyIHE9dltlKzQwPj4yXTtlPXtRYTp2W2U+PjJdLFBhOnZbZSs0Pj4yXSxVOnZbZSs4Pj4yXSxIOnZbZSsxMj4+Ml0sQzp2W2UrMTY+PjJdLGo6dltlKzIwPj4yXSx2YTp2W2UrMjQ+PjJdLFY6dltlKzI4Pj4yXSxhZDp2W2UrMzI+PjJdLE9hOnZbZSszNj4+Ml0sUmE6cT9IKHEpOlxuXCJcIn07ZD1IKGQpO3E9e1wiJWNcIjpcIiVhICViICVkICVIOiVNOiVTICVZXCIsXCIlRFwiOlwiJW0vJWQvJXlcIixcIiVGXCI6XCIlWS0lbS0lZFwiLFwiJWhcIjpcIiViXCIsXCIlclwiOlwiJUk6JU06JVMgJXBcIixcIiVSXCI6XCIlSDolTVwiLFwiJVRcIjpcIiVIOiVNOiVTXCIsXCIleFwiOlwiJW0vJWQvJXlcIixcIiVYXCI6XCIlSDolTTolU1wifTtmb3IodmFyIHIgaW4gcSlkPWQucmVwbGFjZShuZXcgUmVnRXhwKHIsXCJnXCIpLHFbcl0pO3ZhciB3PVwiU3VuZGF5IE1vbmRheSBUdWVzZGF5IFdlZG5lc2RheSBUaHVyc2RheSBGcmlkYXkgU2F0dXJkYXlcIi5zcGxpdChcIiBcIiksQT1cIkphbnVhcnkgRmVicnVhcnkgTWFyY2ggQXByaWwgTWF5IEp1bmUgSnVseSBBdWd1c3QgU2VwdGVtYmVyIE9jdG9iZXIgTm92ZW1iZXIgRGVjZW1iZXJcIi5zcGxpdChcIiBcIik7cT17XCIlYVwiOmZ1bmN0aW9uKGEpe3JldHVybiB3W2EudmFdLnN1YnN0cmluZygwLDMpfSxcIiVBXCI6ZnVuY3Rpb24oYSl7cmV0dXJuIHdbYS52YV19LFwiJWJcIjpmdW5jdGlvbihhKXtyZXR1cm4gQVthLkNdLnN1YnN0cmluZygwLFxuMyl9LFwiJUJcIjpmdW5jdGlvbihhKXtyZXR1cm4gQVthLkNdfSxcIiVDXCI6ZnVuY3Rpb24oYSl7cmV0dXJuIGcoKGEuaisxOTAwKS8xMDB8MCwyKX0sXCIlZFwiOmZ1bmN0aW9uKGEpe3JldHVybiBnKGEuSCwyKX0sXCIlZVwiOmZ1bmN0aW9uKGEpe3JldHVybiBmKGEuSCwyLFwiIFwiKX0sXCIlZ1wiOmZ1bmN0aW9uKGEpe3JldHVybiBtKGEpLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDIpfSxcIiVHXCI6ZnVuY3Rpb24oYSl7cmV0dXJuIG0oYSl9LFwiJUhcIjpmdW5jdGlvbihhKXtyZXR1cm4gZyhhLlUsMil9LFwiJUlcIjpmdW5jdGlvbihhKXthPWEuVTswPT1hP2E9MTI6MTI8YSYmKGEtPTEyKTtyZXR1cm4gZyhhLDIpfSxcIiVqXCI6ZnVuY3Rpb24oYSl7cmV0dXJuIGcoYS5IK2RlKGNlKGEuaisxOTAwKT9lZTpmZSxhLkMtMSksMyl9LFwiJW1cIjpmdW5jdGlvbihhKXtyZXR1cm4gZyhhLkMrMSwyKX0sXCIlTVwiOmZ1bmN0aW9uKGEpe3JldHVybiBnKGEuUGEsMil9LFwiJW5cIjpmdW5jdGlvbigpe3JldHVyblwiXFxuXCJ9LFwiJXBcIjpmdW5jdGlvbihhKXtyZXR1cm4gMDw9XG5hLlUmJjEyPmEuVT9cIkFNXCI6XCJQTVwifSxcIiVTXCI6ZnVuY3Rpb24oYSl7cmV0dXJuIGcoYS5RYSwyKX0sXCIldFwiOmZ1bmN0aW9uKCl7cmV0dXJuXCJcXHRcIn0sXCIldVwiOmZ1bmN0aW9uKGEpe3JldHVybihuZXcgRGF0ZShhLmorMTkwMCxhLkMrMSxhLkgsMCwwLDAsMCkpLmdldERheSgpfHw3fSxcIiVVXCI6ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IERhdGUoYS5qKzE5MDAsMCwxKSxkPTA9PT1iLmdldERheSgpP2I6Z2UoYiw3LWIuZ2V0RGF5KCkpO2E9bmV3IERhdGUoYS5qKzE5MDAsYS5DLGEuSCk7cmV0dXJuIDA+aChkLGEpP2coTWF0aC5jZWlsKCgzMS1kLmdldERhdGUoKSsoZGUoY2UoYS5nZXRGdWxsWWVhcigpKT9lZTpmZSxhLmdldE1vbnRoKCktMSktMzEpK2EuZ2V0RGF0ZSgpKS83KSwyKTowPT09aChkLGIpP1wiMDFcIjpcIjAwXCJ9LFwiJVZcIjpmdW5jdGlvbihhKXt2YXIgYj1rKG5ldyBEYXRlKGEuaisxOTAwLDAsNCkpLGQ9ayhuZXcgRGF0ZShhLmorMTkwMSwwLDQpKSxlPWdlKG5ldyBEYXRlKGEuaitcbjE5MDAsMCwxKSxhLlYpO3JldHVybiAwPmgoZSxiKT9cIjUzXCI6MD49aChkLGUpP1wiMDFcIjpnKE1hdGguY2VpbCgoYi5nZXRGdWxsWWVhcigpPGEuaisxOTAwP2EuViszMi1iLmdldERhdGUoKTphLlYrMS1iLmdldERhdGUoKSkvNyksMil9LFwiJXdcIjpmdW5jdGlvbihhKXtyZXR1cm4obmV3IERhdGUoYS5qKzE5MDAsYS5DKzEsYS5ILDAsMCwwLDApKS5nZXREYXkoKX0sXCIlV1wiOmZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBEYXRlKGEuaiwwLDEpLGQ9MT09PWIuZ2V0RGF5KCk/YjpnZShiLDA9PT1iLmdldERheSgpPzE6Ny1iLmdldERheSgpKzEpO2E9bmV3IERhdGUoYS5qKzE5MDAsYS5DLGEuSCk7cmV0dXJuIDA+aChkLGEpP2coTWF0aC5jZWlsKCgzMS1kLmdldERhdGUoKSsoZGUoY2UoYS5nZXRGdWxsWWVhcigpKT9lZTpmZSxhLmdldE1vbnRoKCktMSktMzEpK2EuZ2V0RGF0ZSgpKS83KSwyKTowPT09aChkLGIpP1wiMDFcIjpcIjAwXCJ9LFwiJXlcIjpmdW5jdGlvbihhKXtyZXR1cm4oYS5qKzE5MDApLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDIpfSxcblwiJVlcIjpmdW5jdGlvbihhKXtyZXR1cm4gYS5qKzE5MDB9LFwiJXpcIjpmdW5jdGlvbihhKXthPWEuT2E7dmFyIGI9MDw9YTthPU1hdGguYWJzKGEpLzYwO3JldHVybihiP1wiK1wiOlwiLVwiKStTdHJpbmcoXCIwMDAwXCIrKGEvNjAqMTAwK2ElNjApKS5zbGljZSgtNCl9LFwiJVpcIjpmdW5jdGlvbihhKXtyZXR1cm4gYS5SYX0sXCIlJVwiOmZ1bmN0aW9uKCl7cmV0dXJuXCIlXCJ9fTtmb3IociBpbiBxKTA8PWQuaW5kZXhPZihyKSYmKGQ9ZC5yZXBsYWNlKG5ldyBSZWdFeHAocixcImdcIikscVtyXShlKSkpO3I9WmIoZCwhMSk7aWYoci5sZW5ndGg+YilyZXR1cm4gMDtELnNldChyLGEpO3JldHVybiByLmxlbmd0aC0xfVxuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkYXRlTm93P089ZGF0ZU5vdzpcIm9iamVjdFwiPT09dHlwZW9mIHNlbGYmJnNlbGYucGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZWxmLnBlcmZvcm1hbmNlLm5vdz9PPWZ1bmN0aW9uKCl7cmV0dXJuIHNlbGYucGVyZm9ybWFuY2Uubm93KCl9Olwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3c/Tz1mdW5jdGlvbigpe3JldHVybiBwZXJmb3JtYW5jZS5ub3coKX06Tz1EYXRlLm5vdztKYygpO2xjPUFycmF5KDQwOTYpO0JjKFMsXCIvXCIpO1UoXCIvdG1wXCIpO1UoXCIvaG9tZVwiKTtVKFwiL2hvbWUvd2ViX3VzZXJcIik7XG4oZnVuY3Rpb24oKXtVKFwiL2RldlwiKTtYYigyNTkse3JlYWQ6ZnVuY3Rpb24oKXtyZXR1cm4gMH0sd3JpdGU6ZnVuY3Rpb24oYSxiLGYsZyl7cmV0dXJuIGd9fSk7RGMoXCIvZGV2L251bGxcIiwyNTkpO1diKDEyODAsYWMpO1diKDE1MzYsYmMpO0RjKFwiL2Rldi90dHlcIiwxMjgwKTtEYyhcIi9kZXYvdHR5MVwiLDE1MzYpO2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY3J5cHRvKXt2YXIgYT1uZXcgVWludDhBcnJheSgxKTt2YXIgYj1mdW5jdGlvbigpe2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoYSk7cmV0dXJuIGFbMF19fWVsc2UgYj1mdW5jdGlvbigpe3ooXCJyYW5kb21fZGV2aWNlXCIpfTtNYyhcInJhbmRvbVwiLGIpO01jKFwidXJhbmRvbVwiLGIpO1UoXCIvZGV2L3NobVwiKTtVKFwiL2Rldi9zaG0vdG1wXCIpfSkoKTtVKFwiL3Byb2NcIik7VShcIi9wcm9jL3NlbGZcIik7VShcIi9wcm9jL3NlbGYvZmRcIik7XG5CYyh7QTpmdW5jdGlvbigpe3ZhciBhPWRjKFwiL3Byb2Mvc2VsZlwiLFwiZmRcIiwxNjg5NSw3Myk7YS5jPXtsb29rdXA6ZnVuY3Rpb24oYSxkKXt2YXIgYj1UWytkXTtpZighYil0aHJvdyBuZXcgUihQLkIpO2E9e3BhcmVudDpudWxsLEE6e3RhOlwiZmFrZVwifSxjOntyZWFkbGluazpmdW5jdGlvbigpe3JldHVybiBiLnBhdGh9fX07cmV0dXJuIGEucGFyZW50PWF9fTtyZXR1cm4gYX19LFwiL3Byb2Mvc2VsZi9mZFwiKTtcblJhLnVuc2hpZnQoZnVuY3Rpb24oKXtpZighYy5ub0ZTSW5pdCYmIUtjKXthc3NlcnQoIUtjLFwiRlMuaW5pdCB3YXMgcHJldmlvdXNseSBjYWxsZWQuIElmIHlvdSB3YW50IHRvIGluaXRpYWxpemUgbGF0ZXIgd2l0aCBjdXN0b20gcGFyYW1ldGVycywgcmVtb3ZlIGFueSBlYXJsaWVyIGNhbGxzIChub3RlIHRoYXQgb25lIGlzIGF1dG9tYXRpY2FsbHkgYWRkZWQgdG8gdGhlIGdlbmVyYXRlZCBjb2RlKVwiKTtLYz0hMDtKYygpO2Muc3RkaW49Yy5zdGRpbjtjLnN0ZG91dD1jLnN0ZG91dDtjLnN0ZGVycj1jLnN0ZGVycjtjLnN0ZGluP01jKFwic3RkaW5cIixjLnN0ZGluKTpFYyhcIi9kZXYvdHR5XCIsXCIvZGV2L3N0ZGluXCIpO2Muc3Rkb3V0P01jKFwic3Rkb3V0XCIsbnVsbCxjLnN0ZG91dCk6RWMoXCIvZGV2L3R0eVwiLFwiL2Rldi9zdGRvdXRcIik7Yy5zdGRlcnI/TWMoXCJzdGRlcnJcIixudWxsLGMuc3RkZXJyKTpFYyhcIi9kZXYvdHR5MVwiLFwiL2Rldi9zdGRlcnJcIik7dmFyIGE9RmMoXCIvZGV2L3N0ZGluXCIsXG5cInJcIik7YXNzZXJ0KDA9PT1hLmZkLFwiaW52YWxpZCBoYW5kbGUgZm9yIHN0ZGluIChcIithLmZkK1wiKVwiKTthPUZjKFwiL2Rldi9zdGRvdXRcIixcIndcIik7YXNzZXJ0KDE9PT1hLmZkLFwiaW52YWxpZCBoYW5kbGUgZm9yIHN0ZG91dCAoXCIrYS5mZCtcIilcIik7YT1GYyhcIi9kZXYvc3RkZXJyXCIsXCJ3XCIpO2Fzc2VydCgyPT09YS5mZCxcImludmFsaWQgaGFuZGxlIGZvciBzdGRlcnIgKFwiK2EuZmQrXCIpXCIpfX0pO1NhLnB1c2goZnVuY3Rpb24oKXttYz0hMX0pO1RhLnB1c2goZnVuY3Rpb24oKXtLYz0hMTt2YXIgYT1jLl9mZmx1c2g7YSYmYSgwKTtmb3IoYT0wO2E8VC5sZW5ndGg7YSsrKXt2YXIgYj1UW2FdO2ImJkhjKGIpfX0pO1JhLnVuc2hpZnQoZnVuY3Rpb24oKXt9KTtUYS5wdXNoKGZ1bmN0aW9uKCl7fSk7XG5jLnJlcXVlc3RGdWxsU2NyZWVuPWZ1bmN0aW9uKGEsYixkKXtwKFwiTW9kdWxlLnJlcXVlc3RGdWxsU2NyZWVuIGlzIGRlcHJlY2F0ZWQuIFBsZWFzZSBjYWxsIE1vZHVsZS5yZXF1ZXN0RnVsbHNjcmVlbiBpbnN0ZWFkLlwiKTtjLnJlcXVlc3RGdWxsU2NyZWVuPWMucmVxdWVzdEZ1bGxzY3JlZW47QWQoYSxiLGQpfTtjLnJlcXVlc3RGdWxsc2NyZWVuPWZ1bmN0aW9uKGEsYixkKXt3ZChhLGIsZCl9O2MucmVxdWVzdEFuaW1hdGlvbkZyYW1lPWZ1bmN0aW9uKGEpe1ljKGEpfTtjLnNldENhbnZhc1NpemU9ZnVuY3Rpb24oYSxiLGQpe3hkKGMuY2FudmFzLGEsYik7ZHx8eWQoKX07Yy5wYXVzZU1haW5Mb29wPWZ1bmN0aW9uKCl7VWM9bnVsbDthZCsrfTtjLnJlc3VtZU1haW5Mb29wPWZ1bmN0aW9uKCl7YWQrKzt2YXIgYT1SYyxiPVNjLGQ9VGM7VGM9bnVsbDtaYyhkLDAsITEsJGMsITApO1FjKGEsYik7VWMoKX07XG5jLmdldFVzZXJNZWRpYT1mdW5jdGlvbigpe3dpbmRvdy5nZXRVc2VyTWVkaWF8fCh3aW5kb3cuZ2V0VXNlck1lZGlhPW5hdmlnYXRvci5nZXRVc2VyTWVkaWF8fG5hdmlnYXRvci5tb3pHZXRVc2VyTWVkaWEpO3dpbmRvdy5nZXRVc2VyTWVkaWEodm9pZCAwKX07Yy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYixkLGUpe3JldHVybiBwZChhLGIsZCxlKX07KGZ1bmN0aW9uKCl7dmFyIGE9XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBFTlZJUk9OTUVOVF9JU19GRVRDSF9XT1JLRVI7R2QoZnVuY3Rpb24oYil7WT1iO2EmJmViKCl9LGZ1bmN0aW9uKCl7WT0hMTthJiZlYigpfSk7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBFTlZJUk9OTUVOVF9JU19GRVRDSF9XT1JLRVImJkVOVklST05NRU5UX0lTX0ZFVENIX1dPUktFUnx8ZGIoKX0pKCk7Zm9yKHZhciBHTGN0eCxsZT0wOzI1Nj5sZTtsZSsrKTtmb3IobGU9MDszMj5sZTtsZSsrKVRkLnB1c2goQXJyYXkobGUpKTt4PWRhKDQpO0lhPUphPWhhKHUpO1xuS2E9SWErT2E7TGE9aGEoS2EpO3ZbeD4+Ml09TGE7SGE9ITA7ZnVuY3Rpb24gWmIoYSxiKXt2YXIgZD1BcnJheSh4YShhKSsxKTthPUUoYSxkLDAsZC5sZW5ndGgpO2ImJihkLmxlbmd0aD1hKTtyZXR1cm4gZH1jLndhc21UYWJsZVNpemU9MjQ2ODtjLndhc21NYXhUYWJsZVNpemU9MjQ2ODtjLkFhPXt9O1xuYy5CYT17YWJvcnQ6eixhc3NlcnQ6YXNzZXJ0LGVubGFyZ2VNZW1vcnk6ZmEsZ2V0VG90YWxNZW1vcnk6ZnVuY3Rpb24oKXtyZXR1cm4geX0sYWJvcnRPbkNhbm5vdEdyb3dNZW1vcnk6ZnVuY3Rpb24oKXt6KFwiQ2Fubm90IGVubGFyZ2UgbWVtb3J5IGFycmF5cy4gRWl0aGVyICgxKSBjb21waWxlIHdpdGggIC1zIFRPVEFMX01FTU9SWT1YICB3aXRoIFggaGlnaGVyIHRoYW4gdGhlIGN1cnJlbnQgdmFsdWUgXCIreStcIiwgKDIpIGNvbXBpbGUgd2l0aCAgLXMgQUxMT1dfTUVNT1JZX0dST1dUSD0xICB3aGljaCBhbGxvd3MgaW5jcmVhc2luZyB0aGUgc2l6ZSBhdCBydW50aW1lLCBvciAoMykgaWYgeW91IHdhbnQgbWFsbG9jIHRvIHJldHVybiBOVUxMICgwKSBpbnN0ZWFkIG9mIHRoaXMgYWJvcnQsIGNvbXBpbGUgd2l0aCAgLXMgQUJPUlRJTkdfTUFMTE9DPTAgXCIpfSxpbnZva2VfaTpmdW5jdGlvbihhKXt2YXIgYj1CKCk7dHJ5e3JldHVybiBjLmR5bkNhbGxfaShhKX1jYXRjaChkKXtDKGIpO1xuaWYoXCJudW1iZXJcIiE9PXR5cGVvZiBkJiZcImxvbmdqbXBcIiE9PWQpdGhyb3cgZDtjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfaWk6ZnVuY3Rpb24oYSxiKXt2YXIgZD1CKCk7dHJ5e3JldHVybiBjLmR5bkNhbGxfaWkoYSxiKX1jYXRjaChlKXtDKGQpO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgZSYmXCJsb25nam1wXCIhPT1lKXRocm93IGU7Yy5zZXRUaHJldygxLDApfX0saW52b2tlX2lpaTpmdW5jdGlvbihhLGIsZCl7dmFyIGU9QigpO3RyeXtyZXR1cm4gYy5keW5DYWxsX2lpaShhLGIsZCl9Y2F0Y2goZil7QyhlKTtpZihcIm51bWJlclwiIT09dHlwZW9mIGYmJlwibG9uZ2ptcFwiIT09Zil0aHJvdyBmO2Muc2V0VGhyZXcoMSwwKX19LGludm9rZV9paWlpOmZ1bmN0aW9uKGEsYixkLGUpe3ZhciBmPUIoKTt0cnl7cmV0dXJuIGMuZHluQ2FsbF9paWlpKGEsYixkLGUpfWNhdGNoKGcpe0MoZik7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBnJiZcImxvbmdqbXBcIiE9PWcpdGhyb3cgZztjLnNldFRocmV3KDEsMCl9fSxcbmludm9rZV9paWlpaTpmdW5jdGlvbihhLGIsZCxlLGYpe3ZhciBnPUIoKTt0cnl7cmV0dXJuIGMuZHluQ2FsbF9paWlpaShhLGIsZCxlLGYpfWNhdGNoKGgpe0MoZyk7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBoJiZcImxvbmdqbXBcIiE9PWgpdGhyb3cgaDtjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfaWlpaWlkOmZ1bmN0aW9uKGEsYixkLGUsZixnKXt2YXIgaD1CKCk7dHJ5e3JldHVybiBjLmR5bkNhbGxfaWlpaWlkKGEsYixkLGUsZixnKX1jYXRjaChrKXtDKGgpO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgayYmXCJsb25nam1wXCIhPT1rKXRocm93IGs7Yy5zZXRUaHJldygxLDApfX0saW52b2tlX2lpaWlpaTpmdW5jdGlvbihhLGIsZCxlLGYsZyl7dmFyIGg9QigpO3RyeXtyZXR1cm4gYy5keW5DYWxsX2lpaWlpaShhLGIsZCxlLGYsZyl9Y2F0Y2goayl7QyhoKTtpZihcIm51bWJlclwiIT09dHlwZW9mIGsmJlwibG9uZ2ptcFwiIT09ayl0aHJvdyBrO2Muc2V0VGhyZXcoMSwwKX19LGludm9rZV9paWlpaWlkOmZ1bmN0aW9uKGEsXG5iLGQsZSxmLGcsaCl7dmFyIGs9QigpO3RyeXtyZXR1cm4gYy5keW5DYWxsX2lpaWlpaWQoYSxiLGQsZSxmLGcsaCl9Y2F0Y2gobSl7QyhrKTtpZihcIm51bWJlclwiIT09dHlwZW9mIG0mJlwibG9uZ2ptcFwiIT09bSl0aHJvdyBtO2Muc2V0VGhyZXcoMSwwKX19LGludm9rZV9paWlpaWlpOmZ1bmN0aW9uKGEsYixkLGUsZixnLGgpe3ZhciBrPUIoKTt0cnl7cmV0dXJuIGMuZHluQ2FsbF9paWlpaWlpKGEsYixkLGUsZixnLGgpfWNhdGNoKG0pe0Moayk7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBtJiZcImxvbmdqbXBcIiE9PW0pdGhyb3cgbTtjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfaWlpaWlpaWk6ZnVuY3Rpb24oYSxiLGQsZSxmLGcsaCxrKXt2YXIgbT1CKCk7dHJ5e3JldHVybiBjLmR5bkNhbGxfaWlpaWlpaWkoYSxiLGQsZSxmLGcsaCxrKX1jYXRjaChxKXtDKG0pO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgcSYmXCJsb25nam1wXCIhPT1xKXRocm93IHE7Yy5zZXRUaHJldygxLDApfX0saW52b2tlX2lpaWlpaWlpaTpmdW5jdGlvbihhLFxuYixkLGUsZixnLGgsayxtKXt2YXIgcT1CKCk7dHJ5e3JldHVybiBjLmR5bkNhbGxfaWlpaWlpaWlpKGEsYixkLGUsZixnLGgsayxtKX1jYXRjaChyKXtDKHEpO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgciYmXCJsb25nam1wXCIhPT1yKXRocm93IHI7Yy5zZXRUaHJldygxLDApfX0saW52b2tlX2lpaWlpajpmdW5jdGlvbihhLGIsZCxlLGYsZyxoKXt2YXIgaz1CKCk7dHJ5e3JldHVybiBjLmR5bkNhbGxfaWlpaWlqKGEsYixkLGUsZixnLGgpfWNhdGNoKG0pe0Moayk7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBtJiZcImxvbmdqbXBcIiE9PW0pdGhyb3cgbTtjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfaWlqaTpmdW5jdGlvbihhLGIsZCxlLGYpe3ZhciBnPUIoKTt0cnl7cmV0dXJuIGMuZHluQ2FsbF9paWppKGEsYixkLGUsZil9Y2F0Y2goaCl7QyhnKTtpZihcIm51bWJlclwiIT09dHlwZW9mIGgmJlwibG9uZ2ptcFwiIT09aCl0aHJvdyBoO2Muc2V0VGhyZXcoMSwwKX19LGludm9rZV92OmZ1bmN0aW9uKGEpe3ZhciBiPVxuQigpO3RyeXtjLmR5bkNhbGxfdihhKX1jYXRjaChkKXtDKGIpO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgZCYmXCJsb25nam1wXCIhPT1kKXRocm93IGQ7Yy5zZXRUaHJldygxLDApfX0saW52b2tlX3ZpOmZ1bmN0aW9uKGEsYil7dmFyIGQ9QigpO3RyeXtjLmR5bkNhbGxfdmkoYSxiKX1jYXRjaChlKXtDKGQpO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgZSYmXCJsb25nam1wXCIhPT1lKXRocm93IGU7Yy5zZXRUaHJldygxLDApfX0saW52b2tlX3ZpaTpmdW5jdGlvbihhLGIsZCl7dmFyIGU9QigpO3RyeXtjLmR5bkNhbGxfdmlpKGEsYixkKX1jYXRjaChmKXtDKGUpO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgZiYmXCJsb25nam1wXCIhPT1mKXRocm93IGY7Yy5zZXRUaHJldygxLDApfX0saW52b2tlX3ZpaWZmaWk6ZnVuY3Rpb24oYSxiLGQsZSxmLGcsaCl7dmFyIGs9QigpO3RyeXtjLmR5bkNhbGxfdmlpZmZpaShhLGIsZCxlLGYsZyxoKX1jYXRjaChtKXtDKGspO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgbSYmXCJsb25nam1wXCIhPT1cbm0pdGhyb3cgbTtjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfdmlpaTpmdW5jdGlvbihhLGIsZCxlKXt2YXIgZj1CKCk7dHJ5e2MuZHluQ2FsbF92aWlpKGEsYixkLGUpfWNhdGNoKGcpe0MoZik7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBnJiZcImxvbmdqbXBcIiE9PWcpdGhyb3cgZztjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfdmlpaWZmZmlpOmZ1bmN0aW9uKGEsYixkLGUsZixnLGgsayxtKXt2YXIgcT1CKCk7dHJ5e2MuZHluQ2FsbF92aWlpZmZmaWkoYSxiLGQsZSxmLGcsaCxrLG0pfWNhdGNoKHIpe0MocSk7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiByJiZcImxvbmdqbXBcIiE9PXIpdGhyb3cgcjtjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfdmlpaWZmaWk6ZnVuY3Rpb24oYSxiLGQsZSxmLGcsaCxrKXt2YXIgbT1CKCk7dHJ5e2MuZHluQ2FsbF92aWlpZmZpaShhLGIsZCxlLGYsZyxoLGspfWNhdGNoKHEpe0MobSk7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBxJiZcImxvbmdqbXBcIiE9PXEpdGhyb3cgcTtcbmMuc2V0VGhyZXcoMSwwKX19LGludm9rZV92aWlpaTpmdW5jdGlvbihhLGIsZCxlLGYpe3ZhciBnPUIoKTt0cnl7Yy5keW5DYWxsX3ZpaWlpKGEsYixkLGUsZil9Y2F0Y2goaCl7QyhnKTtpZihcIm51bWJlclwiIT09dHlwZW9mIGgmJlwibG9uZ2ptcFwiIT09aCl0aHJvdyBoO2Muc2V0VGhyZXcoMSwwKX19LGludm9rZV92aWlpaWk6ZnVuY3Rpb24oYSxiLGQsZSxmLGcpe3ZhciBoPUIoKTt0cnl7Yy5keW5DYWxsX3ZpaWlpaShhLGIsZCxlLGYsZyl9Y2F0Y2goayl7QyhoKTtpZihcIm51bWJlclwiIT09dHlwZW9mIGsmJlwibG9uZ2ptcFwiIT09ayl0aHJvdyBrO2Muc2V0VGhyZXcoMSwwKX19LGludm9rZV92aWlpaWlmZmZmZmZmZmZmZmZmZmZmOmZ1bmN0aW9uKGEsYixkLGUsZixnLGgsayxtLHEscix3LEEsSSxGLE4sVyxvYSx0LCRiLGllLGplKXt2YXIga2U9QigpO3RyeXtjLmR5bkNhbGxfdmlpaWlpZmZmZmZmZmZmZmZmZmZmZihhLGIsZCxlLGYsZyxoLGssbSxxLHIsdyxBLEksRixOLFcsb2EsXG50LCRiLGllLGplKX1jYXRjaChlYyl7QyhrZSk7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBlYyYmXCJsb25nam1wXCIhPT1lYyl0aHJvdyBlYztjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfdmlpaWlpaTpmdW5jdGlvbihhLGIsZCxlLGYsZyxoKXt2YXIgaz1CKCk7dHJ5e2MuZHluQ2FsbF92aWlpaWlpKGEsYixkLGUsZixnLGgpfWNhdGNoKG0pe0Moayk7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBtJiZcImxvbmdqbXBcIiE9PW0pdGhyb3cgbTtjLnNldFRocmV3KDEsMCl9fSxpbnZva2VfdmlpamlpOmZ1bmN0aW9uKGEsYixkLGUsZixnLGgpe3ZhciBrPUIoKTt0cnl7Yy5keW5DYWxsX3ZpaWppaShhLGIsZCxlLGYsZyxoKX1jYXRjaChtKXtDKGspO2lmKFwibnVtYmVyXCIhPT10eXBlb2YgbSYmXCJsb25nam1wXCIhPT1tKXRocm93IG07Yy5zZXRUaHJldygxLDApfX0saW52b2tlX3ZpajpmdW5jdGlvbihhLGIsZCxlKXt2YXIgZj1CKCk7dHJ5e2MuZHluQ2FsbF92aWooYSxiLGQsZSl9Y2F0Y2goZyl7QyhmKTtcbmlmKFwibnVtYmVyXCIhPT10eXBlb2YgZyYmXCJsb25nam1wXCIhPT1nKXRocm93IGc7Yy5zZXRUaHJldygxLDApfX0saW52b2tlX3Zpamk6ZnVuY3Rpb24oYSxiLGQsZSxmKXt2YXIgZz1CKCk7dHJ5e2MuZHluQ2FsbF92aWppKGEsYixkLGUsZil9Y2F0Y2goaCl7QyhnKTtpZihcIm51bWJlclwiIT09dHlwZW9mIGgmJlwibG9uZ2ptcFwiIT09aCl0aHJvdyBoO2Muc2V0VGhyZXcoMSwwKX19LGludm9rZV92aWppaTpmdW5jdGlvbihhLGIsZCxlLGYsZyl7dmFyIGg9QigpO3RyeXtjLmR5bkNhbGxfdmlqaWkoYSxiLGQsZSxmLGcpfWNhdGNoKGspe0MoaCk7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBrJiZcImxvbmdqbXBcIiE9PWspdGhyb3cgaztjLnNldFRocmV3KDEsMCl9fSxfX19idWlsZEVudmlyb25tZW50OkRiLF9fX2Nsb2NrX2dldHRpbWU6ZnVuY3Rpb24oKXtyZXR1cm4gR2IuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxfX19jeGFfYWxsb2NhdGVfZXhjZXB0aW9uOmZ1bmN0aW9uKGEpe3JldHVybiBNKGEpfSxcbl9fX2N4YV9iZWdpbl9jYXRjaDpmdW5jdGlvbihhKXt2YXIgYj1RW2FdO2ImJiFiLm1hJiYoYi5tYT0hMCxtZS4kLS0pO2ImJihiLkw9ITEpO0liLnB1c2goYSk7KGI9SmIoYSkpJiZRW2JdLkorKztyZXR1cm4gYX0sX19fY3hhX2N1cnJlbnRfcHJpbWFyeV9leGNlcHRpb246ZnVuY3Rpb24oKXt2YXIgYT1JYltJYi5sZW5ndGgtMV18fDA7aWYoYSl7dmFyIGI9SmIoYSk7YiYmUVtiXS5KKyt9cmV0dXJuIGF9LF9fX2N4YV9kZWNyZW1lbnRfZXhjZXB0aW9uX3JlZmNvdW50OmZ1bmN0aW9uKGEpe0tiKEpiKGEpKX0sX19fY3hhX2VuZF9jYXRjaDpmdW5jdGlvbigpe2Muc2V0VGhyZXcoMCk7dmFyIGE9SWIucG9wKCk7YSYmKEtiKEpiKGEpKSxIYj0wKX0sX19fY3hhX2ZpbmRfbWF0Y2hpbmdfY2F0Y2g6TmIsX19fY3hhX2ZyZWVfZXhjZXB0aW9uOl9fX2N4YV9mcmVlX2V4Y2VwdGlvbixfX19jeGFfaW5jcmVtZW50X2V4Y2VwdGlvbl9yZWZjb3VudDpmdW5jdGlvbihhKXsoYT1KYihhKSkmJlxuUVthXS5KKyt9LF9fX2N4YV9wdXJlX3ZpcnR1YWw6ZnVuY3Rpb24oKXtwYT0hMDt0aHJvd1wiUHVyZSB2aXJ0dWFsIGZ1bmN0aW9uIGNhbGxlZCFcIjt9LF9fX2N4YV9yZXRocm93Ok1iLF9fX2N4YV9yZXRocm93X3ByaW1hcnlfZXhjZXB0aW9uOmZ1bmN0aW9uKGEpe2EmJihJYi5wdXNoKGEpLFFbYV0uTD0hMCxNYigpKX0sX19fY3hhX3Rocm93OmZ1bmN0aW9uKGEsYixkKXtRW2FdPXtLYTphLGthOmEsdHlwZTpiLG9hOmQsSjowLG1hOiExLEw6ITF9O0hiPWE7XCJ1bmNhdWdodF9leGNlcHRpb25cImluIG1lP21lLiQrKzptZS4kPTE7dGhyb3cgYStcIiAtIEV4Y2VwdGlvbiBjYXRjaGluZyBpcyBkaXNhYmxlZCwgdGhpcyBleGNlcHRpb24gY2Fubm90IGJlIGNhdWdodC4gQ29tcGlsZSB3aXRoIC1zIERJU0FCTEVfRVhDRVBUSU9OX0NBVENISU5HPTAgb3IgRElTQUJMRV9FWENFUFRJT05fQ0FUQ0hJTkc9MiB0byBjYXRjaC5cIjt9LF9fX2N4YV91bmNhdWdodF9leGNlcHRpb246ZnVuY3Rpb24oKXtyZXR1cm4hIW1lLiR9LFxuX19fZ3h4X3BlcnNvbmFsaXR5X3YwOmZ1bmN0aW9uKCl7fSxfX19sb2NrOmZ1bmN0aW9uKCl7fSxfX19tYXBfZmlsZTpmdW5jdGlvbigpe0ZiKFAuSSk7cmV0dXJuLTF9LF9fX3Jlc3VtZUV4Y2VwdGlvbjpmdW5jdGlvbihhKXtIYnx8KEhiPWEpO3Rocm93IGErXCIgLSBFeGNlcHRpb24gY2F0Y2hpbmcgaXMgZGlzYWJsZWQsIHRoaXMgZXhjZXB0aW9uIGNhbm5vdCBiZSBjYXVnaHQuIENvbXBpbGUgd2l0aCAtcyBESVNBQkxFX0VYQ0VQVElPTl9DQVRDSElORz0wIG9yIERJU0FCTEVfRVhDRVBUSU9OX0NBVENISU5HPTIgdG8gY2F0Y2guXCI7fSxfX19zZXRFcnJObzpGYixfX19zeXNjYWxsMTQwOmZ1bmN0aW9uKGEsYil7Vj1iO3RyeXt2YXIgZD1QYygpO1goKTt2YXIgZT1YKCksZj1YKCksZz1YKCk7SWMoZCxlLGcpO3ZbZj4+Ml09ZC5wb3NpdGlvbjtkLmJhJiYwPT09ZSYmMD09PWcmJihkLmJhPW51bGwpO3JldHVybiAwfWNhdGNoKGgpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgRlMmJlxuaCBpbnN0YW5jZW9mIFJ8fHooaCksLWgudn19LF9fX3N5c2NhbGwxNDU6ZnVuY3Rpb24oYSxiKXtWPWI7dHJ5e3ZhciBkPVBjKCksZT1YKCk7YTp7dmFyIGY9WCgpO2ZvcihiPWE9MDtiPGY7YisrKXt2YXIgZz12W2UrKDgqYis0KT4+Ml0saD1kLGs9dltlKzgqYj4+Ml0sbT1nLHE9dm9pZCAwLHI9RDtpZigwPm18fDA+cSl0aHJvdyBuZXcgUihQLmkpO2lmKG51bGw9PT1oLmZkKXRocm93IG5ldyBSKFAuQik7aWYoMT09PShoLmZsYWdzJjIwOTcxNTUpKXRocm93IG5ldyBSKFAuQik7aWYoMTYzODQ9PT0oaC5ub2RlLm1vZGUmNjE0NDApKXRocm93IG5ldyBSKFAuTik7aWYoIWguZi5yZWFkKXRocm93IG5ldyBSKFAuaSk7dmFyIHc9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBxO2lmKCF3KXE9aC5wb3NpdGlvbjtlbHNlIGlmKCFoLnNlZWthYmxlKXRocm93IG5ldyBSKFAuTyk7dmFyIEE9aC5mLnJlYWQoaCxyLGssbSxxKTt3fHwoaC5wb3NpdGlvbis9QSk7dmFyIEk9QTtpZigwPkkpe3ZhciBGPVxuLTE7YnJlYWsgYX1hKz1JO2lmKEk8ZylicmVha31GPWF9cmV0dXJuIEZ9Y2F0Y2goTil7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBGUyYmTiBpbnN0YW5jZW9mIFJ8fHooTiksLU4udn19LF9fX3N5c2NhbGwxNDY6ZnVuY3Rpb24oYSxiKXtWPWI7dHJ5e3ZhciBkPVBjKCksZT1YKCk7YTp7dmFyIGY9WCgpO2ZvcihiPWE9MDtiPGY7YisrKXt2YXIgZz1kLGg9dltlKzgqYj4+Ml0saz12W2UrKDgqYis0KT4+Ml0sbT1ELHE9dm9pZCAwO2lmKDA+a3x8MD5xKXRocm93IG5ldyBSKFAuaSk7aWYobnVsbD09PWcuZmQpdGhyb3cgbmV3IFIoUC5CKTtpZigwPT09KGcuZmxhZ3MmMjA5NzE1NSkpdGhyb3cgbmV3IFIoUC5CKTtpZigxNjM4ND09PShnLm5vZGUubW9kZSY2MTQ0MCkpdGhyb3cgbmV3IFIoUC5OKTtpZighZy5mLndyaXRlKXRocm93IG5ldyBSKFAuaSk7Zy5mbGFncyYxMDI0JiZJYyhnLDAsMik7dmFyIHI9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBxO2lmKCFyKXE9Zy5wb3NpdGlvbjtcbmVsc2UgaWYoIWcuc2Vla2FibGUpdGhyb3cgbmV3IFIoUC5PKTt2YXIgdz1nLmYud3JpdGUoZyxtLGgsayxxLHZvaWQgMCk7cnx8KGcucG9zaXRpb24rPXcpO3RyeXtpZihnLnBhdGgmJm5jLm9uV3JpdGVUb0ZpbGUpbmMub25Xcml0ZVRvRmlsZShnLnBhdGgpfWNhdGNoKEYpe2NvbnNvbGUubG9nKFwiRlMudHJhY2tpbmdEZWxlZ2F0ZVsnb25Xcml0ZVRvRmlsZSddKCdcIitwYXRoK1wiJykgdGhyZXcgYW4gZXhjZXB0aW9uOiBcIitGLm1lc3NhZ2UpfXZhciBBPXc7aWYoMD5BKXt2YXIgST0tMTticmVhayBhfWErPUF9ST1hfXJldHVybiBJfWNhdGNoKEYpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgRlMmJkYgaW5zdGFuY2VvZiBSfHx6KEYpLC1GLnZ9fSxfX19zeXNjYWxsMTk2OmZ1bmN0aW9uKGEsYil7Vj1iO3RyeXt2YXIgZD1IKFgoKSk7YTp7dmFyIGU9WCgpO3RyeXt2YXIgZj1vYyhkLHthYTohMX0pLm5vZGU7aWYoIWYpdGhyb3cgbmV3IFIoUC51KTtpZighZi5jLm0pdGhyb3cgbmV3IFIoUC5JKTtcbnZhciBnPWYuYy5tKGYpfWNhdGNoKGspe2lmKGsmJmsubm9kZSYmUmIoZCkhPT1SYihxYyhrLm5vZGUpKSl7dmFyIGg9LVAuWjticmVhayBhfXRocm93IGs7fXZbZT4+Ml09Zy5kZXY7dltlKzQ+PjJdPTA7dltlKzg+PjJdPWcuaW5vO3ZbZSsxMj4+Ml09Zy5tb2RlO3ZbZSsxNj4+Ml09Zy5ubGluazt2W2UrMjA+PjJdPWcudWlkO3ZbZSsyND4+Ml09Zy5naWQ7dltlKzI4Pj4yXT1nLnJkZXY7dltlKzMyPj4yXT0wO3ZbZSszNj4+Ml09Zy5zaXplO3ZbZSs0MD4+Ml09NDA5Njt2W2UrNDQ+PjJdPWcuYmxvY2tzO3ZbZSs0OD4+Ml09Zy5hdGltZS5nZXRUaW1lKCkvMUUzfDA7dltlKzUyPj4yXT0wO3ZbZSs1Nj4+Ml09Zy5tdGltZS5nZXRUaW1lKCkvMUUzfDA7dltlKzYwPj4yXT0wO3ZbZSs2ND4+Ml09Zy5jdGltZS5nZXRUaW1lKCkvMUUzfDA7dltlKzY4Pj4yXT0wO3ZbZSs3Mj4+Ml09Zy5pbm87aD0wfXJldHVybiBofWNhdGNoKGspe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgRlMmJlxuayBpbnN0YW5jZW9mIFJ8fHooayksLWsudn19LF9fX3N5c2NhbGwyMjE6ZnVuY3Rpb24oYSxiKXtWPWI7dHJ5e3ZhciBkPVBjKCk7c3dpdGNoKFgoKSl7Y2FzZSAwOnZhciBlPVgoKTtyZXR1cm4gMD5lPy1QLmk6RmMoZC5wYXRoLGQuZmxhZ3MsMCxlKS5mZDtjYXNlIDE6Y2FzZSAyOnJldHVybiAwO2Nhc2UgMzpyZXR1cm4gZC5mbGFncztjYXNlIDQ6cmV0dXJuIGU9WCgpLGQuZmxhZ3N8PWUsMDtjYXNlIDEyOmNhc2UgMTI6cmV0dXJuIGU9WCgpLENhW2UrMD4+MV09MiwwO2Nhc2UgMTM6Y2FzZSAxNDpjYXNlIDEzOmNhc2UgMTQ6cmV0dXJuIDA7Y2FzZSAxNjpjYXNlIDg6cmV0dXJuLVAuaTtjYXNlIDk6cmV0dXJuIEZiKFAuaSksLTE7ZGVmYXVsdDpyZXR1cm4tUC5pfX1jYXRjaChmKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIEZTJiZmIGluc3RhbmNlb2YgUnx8eihmKSwtZi52fX0sX19fc3lzY2FsbDU6ZnVuY3Rpb24oYSxiKXtWPWI7dHJ5e3ZhciBkPUgoWCgpKSxlPVgoKSxcbmY9WCgpO3JldHVybiBGYyhkLGUsZikuZmR9Y2F0Y2goZyl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBGUyYmZyBpbnN0YW5jZW9mIFJ8fHooZyksLWcudn19LF9fX3N5c2NhbGw1NDpmdW5jdGlvbihhLGIpe1Y9Yjt0cnl7dmFyIGQ9UGMoKSxlPVgoKTtzd2l0Y2goZSl7Y2FzZSAyMTUwOTpjYXNlIDIxNTA1OnJldHVybiBkLnR0eT8wOi1QLkQ7Y2FzZSAyMTUxMDpjYXNlIDIxNTExOmNhc2UgMjE1MTI6Y2FzZSAyMTUwNjpjYXNlIDIxNTA3OmNhc2UgMjE1MDg6cmV0dXJuIGQudHR5PzA6LVAuRDtjYXNlIDIxNTE5OmlmKCFkLnR0eSlyZXR1cm4tUC5EO3ZhciBmPVgoKTtyZXR1cm4gdltmPj4yXT0wO2Nhc2UgMjE1MjA6cmV0dXJuIGQudHR5Py1QLmk6LVAuRDtjYXNlIDIxNTMxOmE9Zj1YKCk7aWYoIWQuZi5IYSl0aHJvdyBuZXcgUihQLkQpO3JldHVybiBkLmYuSGEoZCxlLGEpO2Nhc2UgMjE1MjM6cmV0dXJuIGQudHR5PzA6LVAuRDtjYXNlIDIxNTI0OnJldHVybiBkLnR0eT8wOlxuLVAuRDtkZWZhdWx0OnooXCJiYWQgaW9jdGwgc3lzY2FsbCBcIitlKX19Y2F0Y2goZyl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBGUyYmZyBpbnN0YW5jZW9mIFJ8fHooZyksLWcudn19LF9fX3N5c2NhbGw2OmZ1bmN0aW9uKGEsYil7Vj1iO3RyeXt2YXIgZD1QYygpO0hjKGQpO3JldHVybiAwfWNhdGNoKGUpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgRlMmJmUgaW5zdGFuY2VvZiBSfHx6KGUpLC1lLnZ9fSxfX19zeXNjYWxsOTE6ZnVuY3Rpb24oYSxiKXtWPWI7dHJ5e3ZhciBkPVgoKSxlPVgoKSxmPU9jW2RdO2lmKCFmKXJldHVybiAwO2lmKGU9PT1mLlhjKXt2YXIgZz1UW2YuZmRdLGg9Zi5mbGFncyxrPW5ldyBVaW50OEFycmF5KEcuc3ViYXJyYXkoZCxkK2UpKTtnJiZnLmYuVCYmZy5mLlQoZyxrLDAsZSxoKTtPY1tkXT1udWxsO2YuemEmJkxiKGYuWWMpfXJldHVybiAwfWNhdGNoKG0pe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgRlMmJm0gaW5zdGFuY2VvZiBSfHxcbnoobSksLW0udn19LF9fX3VubG9jazpmdW5jdGlvbigpe30sX19hZGREYXlzOmdlLF9fYXJyYXlTdW06ZGUsX19lbXNjcmlwdGVuX2ZldGNoX2NhY2hlX2RhdGE6SWQsX19lbXNjcmlwdGVuX2ZldGNoX2RlbGV0ZV9jYWNoZWRfZGF0YTpLZCxfX2Vtc2NyaXB0ZW5fZmV0Y2hfbG9hZF9jYWNoZWRfZGF0YTpKZCxfX2Vtc2NyaXB0ZW5fZmV0Y2hfeGhyOkhkLF9fZW1zY3JpcHRlbl9nZXRfZmV0Y2hfd29ya19xdWV1ZTpmdW5jdGlvbigpe3JldHVybiBNZH0sX19pc0xlYXBZZWFyOmNlLF9hYm9ydDpmdW5jdGlvbigpe2MuYWJvcnQoKX0sX2Nsb2NrX2dldHRpbWU6R2IsX2VtaWRlbnRpdHk6ZnVuY3Rpb24oKXt2YXIgYT0obmV3IFVSTChsb2NhdGlvbi5vcmlnaW4pKS5ob3N0bmFtZTswPT09YS5sZW5ndGgmJihhPShuZXcgVVJMKGxvY2F0aW9uLmhyZWYucmVwbGFjZShcImJsb2I6XCIsXCJcIikpKS5ob3N0bmFtZSk7aWYoL14oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KS4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KS4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KS4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSQvLnRlc3QoYSkpMD09PVxuYS5pbmRleE9mKFwiMTAuXCIpJiYoYT1cIjEwLipcIiksMD09PWEuaW5kZXhPZihcIjE5Mi4xNjguXCIpJiYoYT1cIjE5Mi4xNjguKlwiKSwwPT09YS5pbmRleE9mKFwiMTI3LlwiKSYmKGE9XCIxMjcuKlwiKTtlbHNle3ZhciBiPW5ldyBSZWdFeHAoXCIoXCIrU3RyaW5nLmZyb21DaGFyQ29kZSg5MikrXCIubmdyb2tcIitTdHJpbmcuZnJvbUNoYXJDb2RlKDkyKStcIi5pbykkXCIsXCJpXCIpO2IudGVzdChhKSYmKGE9XCIqLm5ncm9rLmlvXCIpO2I9bmV3IFJlZ0V4cChcIihcIitTdHJpbmcuZnJvbUNoYXJDb2RlKDkyKStcIi5hcndlYlwiK1N0cmluZy5mcm9tQ2hhckNvZGUoOTIpK1wiLmFwcCkkXCIsXCJpXCIpO2IudGVzdChhKSYmKGE9XCIqLmFyd2ViLmFwcFwiKX1iPXhhKGEpKzE7dmFyIGQ9TShiKTtFKGEsRyxkLGIrMSk7cmV0dXJuIGR9LF9lbWxpY2VycjpmdW5jdGlvbigpe3NlbGYucG9zdE1lc3NhZ2Uoe3Q6XCJsaWNlcnJcIn0pfSxfZW1zY3JpcHRlbl9hc21fY29uc3RfaTpmdW5jdGlvbihhKXtyZXR1cm4gZ2JbYV0oKX0sX2Vtc2NyaXB0ZW5fYXN5bmNfY2FsbDpmdW5jdGlvbihhLFxuYixkKXtmdW5jdGlvbiBlKCl7bWEoYSkoYil9Yy5ub0V4aXRSdW50aW1lPSEwOzA8PWQ/b2QoZSxkKTpEZChlKX0sX2Vtc2NyaXB0ZW5fZ2V0X25vdzpPLF9lbXNjcmlwdGVuX2dldF9ub3dfaXNfbW9ub3RvbmljOkViLF9lbXNjcmlwdGVuX2lzX21haW5fYnJvd3Nlcl90aHJlYWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sX2Vtc2NyaXB0ZW5faXNfbWFpbl9ydW50aW1lX3RocmVhZDpmdW5jdGlvbigpe3JldHVybiAxfSxfZW1zY3JpcHRlbl9tZW1jcHlfYmlnOmZ1bmN0aW9uKGEsYixkKXtHLnNldChHLnN1YmFycmF5KGIsYitkKSxhKTtyZXR1cm4gYX0sX2Vtc2NyaXB0ZW5fc2V0X21haW5fbG9vcDpaYyxfZW1zY3JpcHRlbl9zZXRfbWFpbl9sb29wX3RpbWluZzpRYyxfZW1zY3JpcHRlbl9zdGFydF9mZXRjaDpmdW5jdGlvbihhLGIsZCxlKXtmdW5jdGlvbiBmKGEpe0hkKGEsbSxoLGspfWZ1bmN0aW9uIGcoYSl7SGQoYSxxLGgsayl9ZnVuY3Rpb24gaChhKXtJJiZcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBuYT9jLmR5bkNhbGxfdmkoSSxhKTpkJiZkKGEpfWZ1bmN0aW9uIGsoYSl7RiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIG5hP2MuZHluQ2FsbF92aShGLGEpOmUmJmUoYSl9ZnVuY3Rpb24gbShhLGQpe0lkKFksYSxkLnJlc3BvbnNlLGZ1bmN0aW9uKGEpe0EmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBuYT9jLmR5bkNhbGxfdmkoQSxhKTpiJiZiKGEpfSxmdW5jdGlvbihhKXtBJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbmE/Yy5keW5DYWxsX3ZpKEEsYSk6YiYmYihhKX0pfWZ1bmN0aW9uIHEoYSl7QSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIG5hP2MuZHluQ2FsbF92aShBLGEpOmImJmIoYSl9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiYoYy5ub0V4aXRSdW50aW1lPSEwKTt2YXIgcj1hKzExMix3PUgociksQT1LW3IrMzY+PjJdLEk9S1tyKzQwPj4yXSxGPUtbcis0ND4+Ml0sTj1LW3IrNDg+PjJdLFc9ISEoTiY0KSxvYT0hIShOJjMyKTtpZihOJjE2JiZcIkVNX0lEQl9TVE9SRVwiIT09dyYmXCJFTV9JREJfREVMRVRFXCIhPT1cbncpe2lmKG9hKXJldHVybiAwO1c/SGQoYSxtLGgsayk6SGQoYSxxLGgsayl9ZWxzZXtpZighWSlyZXR1cm4gaChhKSwwO1wiRU1fSURCX1NUT1JFXCI9PT13Pyh3PUtbcis4MD4+Ml0scj1HLnNsaWNlKHcsdytLW3IrODQ+PjJdKSxJZChZLGEscixxLGgpKTpcIkVNX0lEQl9ERUxFVEVcIj09PXc/S2QoWSxhLHEsaCk6b2E/SmQoWSxhLHEsaCk6Vz9KZChZLGEscSxmKTpKZChZLGEscSxnKX1yZXR1cm4gYX0sX2dldGVudjpPZCxfZ2V0dGltZW9mZGF5OmZ1bmN0aW9uKGEpe3ZhciBiPURhdGUubm93KCk7dlthPj4yXT1iLzFFM3wwO3ZbYSs0Pj4yXT1iJTFFMyoxRTN8MDtyZXR1cm4gMH0sX2dsQmluZFRleHR1cmU6ZnVuY3Rpb24oYSxiKXtHTGN0eC5iaW5kVGV4dHVyZShhLGI/UmRbYl06bnVsbCl9LF9nbEdlblRleHR1cmVzOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBkPTA7ZDxhO2QrKyl7dmFyIGU9R0xjdHguY3JlYXRlVGV4dHVyZSgpO2lmKCFlKXtmb3IoUWR8fChRZD0xMjgyKTtkPGE7KXZbYitcbjQqZCsrPj4yXT0wO2JyZWFrfXZhciBmPVVkKFJkKTtlLm5hbWU9ZjtSZFtmXT1lO3ZbYis0KmQ+PjJdPWZ9fSxfZ2xUZXhJbWFnZTJEOmZ1bmN0aW9uKGEsYixkLGUsZixnLGgsayxtKXt2YXIgcT1udWxsO20mJihxPVlkKGssaCxlLGYsbSkpO0dMY3R4LnRleEltYWdlMkQoYSxiLGQsZSxmLGcsaCxrLHEpfSxfZ2xUZXhQYXJhbWV0ZXJpOmZ1bmN0aW9uKGEsYixkKXtHTGN0eC50ZXhQYXJhbWV0ZXJpKGEsYixkKX0sX2xsdm1fZXhwMl9mMzI6ZnVuY3Rpb24oYSl7cmV0dXJuIE1hdGgucG93KDIsYSl9LF9sbHZtX3N0YWNrcmVzdG9yZTpmdW5jdGlvbihhKXt2YXIgYj1aZC5sW2FdO1pkLmwuc3BsaWNlKGEsMSk7QyhiKX0sX2xsdm1fc3RhY2tzYXZlOlpkLF9sbHZtX3RyYXA6ZnVuY3Rpb24oKXt6KFwidHJhcCFcIil9LF9wdGhyZWFkX2NvbmRfZGVzdHJveTpmdW5jdGlvbigpe3JldHVybiAwfSxfcHRocmVhZF9jb25kX2luaXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMH0sX3B0aHJlYWRfY29uZF9zaWduYWw6ZnVuY3Rpb24oKXtyZXR1cm4gMH0sXG5fcHRocmVhZF9jb25kX3dhaXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMH0sX3B0aHJlYWRfY3JlYXRlOmZ1bmN0aW9uKCl7cmV0dXJuIDExfSxfcHRocmVhZF9nZXRzcGVjaWZpYzpmdW5jdGlvbihhKXtyZXR1cm4gJGRbYV18fDB9LF9wdGhyZWFkX2pvaW46ZnVuY3Rpb24oKXt9LF9wdGhyZWFkX2tleV9jcmVhdGU6ZnVuY3Rpb24oYSl7aWYoMD09YSlyZXR1cm4gUC5pO3ZbYT4+Ml09YWU7JGRbYWVdPTA7YWUrKztyZXR1cm4gMH0sX3B0aHJlYWRfbXV0ZXhfZGVzdHJveTpmdW5jdGlvbigpe30sX3B0aHJlYWRfbXV0ZXhfaW5pdDpmdW5jdGlvbigpe30sX3B0aHJlYWRfb25jZTpiZSxfcHRocmVhZF9zZXRzcGVjaWZpYzpmdW5jdGlvbihhLGIpe2lmKCEoYSBpbiAkZCkpcmV0dXJuIFAuaTskZFthXT1iO3JldHVybiAwfSxfc3RyZnRpbWU6aGUsX3N0cmZ0aW1lX2w6ZnVuY3Rpb24oYSxiLGQsZSl7cmV0dXJuIGhlKGEsYixkLGUpfSxfc3lzY29uZjpmdW5jdGlvbihhKXtzd2l0Y2goYSl7Y2FzZSAzMDpyZXR1cm4gMTYzODQ7XG5jYXNlIDg1OnJldHVybiAxMzEwNjg7Y2FzZSAxMzI6Y2FzZSAxMzM6Y2FzZSAxMjpjYXNlIDEzNzpjYXNlIDEzODpjYXNlIDE1OmNhc2UgMjM1OmNhc2UgMTY6Y2FzZSAxNzpjYXNlIDE4OmNhc2UgMTk6Y2FzZSAyMDpjYXNlIDE0OTpjYXNlIDEzOmNhc2UgMTA6Y2FzZSAyMzY6Y2FzZSAxNTM6Y2FzZSA5OmNhc2UgMjE6Y2FzZSAyMjpjYXNlIDE1OTpjYXNlIDE1NDpjYXNlIDE0OmNhc2UgNzc6Y2FzZSA3ODpjYXNlIDEzOTpjYXNlIDgwOmNhc2UgODE6Y2FzZSA4MjpjYXNlIDY4OmNhc2UgNjc6Y2FzZSAxNjQ6Y2FzZSAxMTpjYXNlIDI5OmNhc2UgNDc6Y2FzZSA0ODpjYXNlIDk1OmNhc2UgNTI6Y2FzZSA1MTpjYXNlIDQ2OnJldHVybiAyMDA4MDk7Y2FzZSA3OTpyZXR1cm4gMDtjYXNlIDI3OmNhc2UgMjQ2OmNhc2UgMTI3OmNhc2UgMTI4OmNhc2UgMjM6Y2FzZSAyNDpjYXNlIDE2MDpjYXNlIDE2MTpjYXNlIDE4MTpjYXNlIDE4MjpjYXNlIDI0MjpjYXNlIDE4MzpjYXNlIDE4NDpjYXNlIDI0MzpjYXNlIDI0NDpjYXNlIDI0NTpjYXNlIDE2NTpjYXNlIDE3ODpjYXNlIDE3OTpjYXNlIDQ5OmNhc2UgNTA6Y2FzZSAxNjg6Y2FzZSAxNjk6Y2FzZSAxNzU6Y2FzZSAxNzA6Y2FzZSAxNzE6Y2FzZSAxNzI6Y2FzZSA5NzpjYXNlIDc2OmNhc2UgMzI6Y2FzZSAxNzM6Y2FzZSAzNTpyZXR1cm4tMTtcbmNhc2UgMTc2OmNhc2UgMTc3OmNhc2UgNzpjYXNlIDE1NTpjYXNlIDg6Y2FzZSAxNTc6Y2FzZSAxMjU6Y2FzZSAxMjY6Y2FzZSA5MjpjYXNlIDkzOmNhc2UgMTI5OmNhc2UgMTMwOmNhc2UgMTMxOmNhc2UgOTQ6Y2FzZSA5MTpyZXR1cm4gMTtjYXNlIDc0OmNhc2UgNjA6Y2FzZSA2OTpjYXNlIDcwOmNhc2UgNDpyZXR1cm4gMTAyNDtjYXNlIDMxOmNhc2UgNDI6Y2FzZSA3MjpyZXR1cm4gMzI7Y2FzZSA4NzpjYXNlIDI2OmNhc2UgMzM6cmV0dXJuIDIxNDc0ODM2NDc7Y2FzZSAzNDpjYXNlIDE6cmV0dXJuIDQ3ODM5O2Nhc2UgMzg6Y2FzZSAzNjpyZXR1cm4gOTk7Y2FzZSA0MzpjYXNlIDM3OnJldHVybiAyMDQ4O2Nhc2UgMDpyZXR1cm4gMjA5NzE1MjtjYXNlIDM6cmV0dXJuIDY1NTM2O2Nhc2UgMjg6cmV0dXJuIDMyNzY4O2Nhc2UgNDQ6cmV0dXJuIDMyNzY3O2Nhc2UgNzU6cmV0dXJuIDE2Mzg0O2Nhc2UgMzk6cmV0dXJuIDFFMztjYXNlIDg5OnJldHVybiA3MDA7Y2FzZSA3MTpyZXR1cm4gMjU2O1xuY2FzZSA0MDpyZXR1cm4gMjU1O2Nhc2UgMjpyZXR1cm4gMTAwO2Nhc2UgMTgwOnJldHVybiA2NDtjYXNlIDI1OnJldHVybiAyMDtjYXNlIDU6cmV0dXJuIDE2O2Nhc2UgNjpyZXR1cm4gNjtjYXNlIDczOnJldHVybiA0O2Nhc2UgODQ6cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBuYXZpZ2F0b3I/bmF2aWdhdG9yLmhhcmR3YXJlQ29uY3VycmVuY3l8fDE6MX1GYihQLmkpO3JldHVybi0xfSxlbXNjcmlwdGVuV2ViR0xDb21wdXRlSW1hZ2VTaXplOlhkLGVtc2NyaXB0ZW5XZWJHTEdldFRleFBpeGVsRGF0YTpZZCxEWU5BTUlDVE9QX1BUUjp4LHRlbXBEb3VibGVQdHI6Q2IsU1RBQ0tUT1A6SmEsU1RBQ0tfTUFYOkthfTt2YXIgbmU9Yy5hc20oYy5BYSxjLkJhLGJ1ZmZlcik7Yy5hc209bmU7XG52YXIgaGI9Yy5fX0dMT0JBTF9fSV8wMDAxMDE9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX0lfMDAwMTAxLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sdGI9Yy5fX0dMT0JBTF9fc3ViX0lfQVpIaWdoTGV2ZWxFbmNvZGVyX2NwcD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX0dMT0JBTF9fc3ViX0lfQVpIaWdoTGV2ZWxFbmNvZGVyX2NwcC5hcHBseShudWxsLGFyZ3VtZW50cyl9LHZiPWMuX19HTE9CQUxfX3N1Yl9JX0NhbWVyYVNvdXJjZV9jcHA9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX0NhbWVyYVNvdXJjZV9jcHAuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxwYj1jLl9fR0xPQkFMX19zdWJfSV9DaGFyYWN0ZXJTZXRFQ0lfY3BwPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fR0xPQkFMX19zdWJfSV9DaGFyYWN0ZXJTZXRFQ0lfY3BwLmFwcGx5KG51bGwsYXJndW1lbnRzKX0scmI9Yy5fX0dMT0JBTF9fc3ViX0lfRE1FQ0VuY29kZXJfY3BwPVxuZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX0RNRUNFbmNvZGVyX2NwcC5hcHBseShudWxsLGFyZ3VtZW50cyl9LHFiPWMuX19HTE9CQUxfX3N1Yl9JX0RNSGlnaExldmVsRW5jb2Rlcl9jcHA9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX0RNSGlnaExldmVsRW5jb2Rlcl9jcHAuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxtYj1jLl9fR0xPQkFMX19zdWJfSV9HcmlkU2FtcGxlcl9jcHA9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX0dyaWRTYW1wbGVyX2NwcC5hcHBseShudWxsLGFyZ3VtZW50cyl9LG9iPWMuX19HTE9CQUxfX3N1Yl9JX09EQ29kZTEyOFBhdHRlcm5zX2NwcD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX0dMT0JBTF9fc3ViX0lfT0RDb2RlMTI4UGF0dGVybnNfY3BwLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sbmI9Yy5fX0dMT0JBTF9fc3ViX0lfT0RSU1NFeHBhbmRlZFJlYWRlcl9jcHA9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX09EUlNTRXhwYW5kZWRSZWFkZXJfY3BwLmFwcGx5KG51bGwsXG5hcmd1bWVudHMpfSxpYj1jLl9fR0xPQkFMX19zdWJfSV9QREZEZXRlY3Rvcl9jcHA9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX1BERkRldGVjdG9yX2NwcC5hcHBseShudWxsLGFyZ3VtZW50cyl9LHViPWMuX19HTE9CQUxfX3N1Yl9JX1N0YW5kYXJkU3RhdHNNYW5hZ2VyX2NwcD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX0dMT0JBTF9fc3ViX0lfU3RhbmRhcmRTdGF0c01hbmFnZXJfY3BwLmFwcGx5KG51bGwsYXJndW1lbnRzKX0seGI9Yy5fX0dMT0JBTF9fc3ViX0lfYmFyY29kZV9maW5kZXJfY3BwPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fR0xPQkFMX19zdWJfSV9iYXJjb2RlX2ZpbmRlcl9jcHAuYXBwbHkobnVsbCxhcmd1bWVudHMpfSx5Yj1jLl9fR0xPQkFMX19zdWJfSV9mYWNlX2xhbmRtYXJrX2NwcD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX0dMT0JBTF9fc3ViX0lfZmFjZV9sYW5kbWFya19jcHAuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxcbndiPWMuX19HTE9CQUxfX3N1Yl9JX2ZhY2VfbWVzaF9jcHA9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX2ZhY2VfbWVzaF9jcHAuYXBwbHkobnVsbCxhcmd1bWVudHMpfSx6Yj1jLl9fR0xPQkFMX19zdWJfSV9mYWNlX3RyYWNrZXJfY3BwPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fR0xPQkFMX19zdWJfSV9mYWNlX3RyYWNrZXJfY3BwLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sQWI9Yy5fX0dMT0JBTF9fc3ViX0lfaW1hZ2VfdHJhY2tlcl9jcHA9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX2ltYWdlX3RyYWNrZXJfY3BwLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sQmI9Yy5fX0dMT0JBTF9fc3ViX0lfaW5zdGFudF90cmFja2VyX2NwcD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX0dMT0JBTF9fc3ViX0lfaW5zdGFudF90cmFja2VyX2NwcC5hcHBseShudWxsLGFyZ3VtZW50cyl9LGpiPWMuX19HTE9CQUxfX3N1Yl9JX2lvc3RyZWFtX2NwcD1cbmZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fR0xPQkFMX19zdWJfSV9pb3N0cmVhbV9jcHAuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxzYj1jLl9fR0xPQkFMX19zdWJfSV9waXBlbGluZV9jcHA9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19HTE9CQUxfX3N1Yl9JX3BpcGVsaW5lX2NwcC5hcHBseShudWxsLGFyZ3VtZW50cyl9LGxiPWMuX19HTE9CQUxfX3N1Yl9JX3phcHBhcl9mYWNlX3RyYWNrZXJfY3BwPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fR0xPQkFMX19zdWJfSV96YXBwYXJfZmFjZV90cmFja2VyX2NwcC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19aMjB6YXBwYXJfZmFjZV9tZXNoX3V2c1AxOXphcHBhcl9mYWNlX21lc2hfdGk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aMjB6YXBwYXJfZmFjZV9tZXNoX3V2c1AxOXphcHBhcl9mYWNlX21lc2hfdGkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuX19aMjN6YXBwYXJfZmFjZV9tZXNoX3VwZGF0ZVAxOXphcHBhcl9mYWNlX21lc2hfdGlQS2ZTMl9pPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fWjIzemFwcGFyX2ZhY2VfbWVzaF91cGRhdGVQMTl6YXBwYXJfZmFjZV9tZXNoX3RpUEtmUzJfaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19aMjR6YXBwYXJfZmFjZV9tZXNoX2luZGljZXNQMTl6YXBwYXJfZmFjZV9tZXNoX3RpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fWjI0emFwcGFyX2ZhY2VfbWVzaF9pbmRpY2VzUDE5emFwcGFyX2ZhY2VfbWVzaF90aS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19aMjR6YXBwYXJfZmFjZV9tZXNoX25vcm1hbHNQMTl6YXBwYXJfZmFjZV9tZXNoX3RpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fWjI0emFwcGFyX2ZhY2VfbWVzaF9ub3JtYWxzUDE5emFwcGFyX2ZhY2VfbWVzaF90aS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5fX1oyNXphcHBhcl9mYWNlX21lc2hfdXZzX3NpemVQMTl6YXBwYXJfZmFjZV9tZXNoX3RpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fWjI1emFwcGFyX2ZhY2VfbWVzaF91dnNfc2l6ZVAxOXphcHBhcl9mYWNlX21lc2hfdGkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl9fWjI1emFwcGFyX2ZhY2VfbWVzaF92ZXJ0aWNlc1AxOXphcHBhcl9mYWNlX21lc2hfdGk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aMjV6YXBwYXJfZmFjZV9tZXNoX3ZlcnRpY2VzUDE5emFwcGFyX2ZhY2VfbWVzaF90aS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19aMjd6YXBwYXJfZmFjZV9sYW5kbWFya191cGRhdGVQMjN6YXBwYXJfZmFjZV9sYW5kbWFya190aVBLZlMyX2k9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aMjd6YXBwYXJfZmFjZV9sYW5kbWFya191cGRhdGVQMjN6YXBwYXJfZmFjZV9sYW5kbWFya190aVBLZlMyX2kuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuX19aMjl6YXBwYXJfZmFjZV9tZXNoX2luZGljZXNfc2l6ZVAxOXphcHBhcl9mYWNlX21lc2hfdGk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aMjl6YXBwYXJfZmFjZV9tZXNoX2luZGljZXNfc2l6ZVAxOXphcHBhcl9mYWNlX21lc2hfdGkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl9fWjI5emFwcGFyX2ZhY2VfbWVzaF9ub3JtYWxzX3NpemVQMTl6YXBwYXJfZmFjZV9tZXNoX3RpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fWjI5emFwcGFyX2ZhY2VfbWVzaF9ub3JtYWxzX3NpemVQMTl6YXBwYXJfZmFjZV9tZXNoX3RpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5fX1ozMHphcHBhcl9mYWNlX21lc2hfdmVydGljZXNfc2l6ZVAxOXphcHBhcl9mYWNlX21lc2hfdGk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aMzB6YXBwYXJfZmFjZV9tZXNoX3ZlcnRpY2VzX3NpemVQMTl6YXBwYXJfZmFjZV9tZXNoX3RpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl9fWjMxemFwcGFyX2ZhY2VfbWVzaF9sb2FkZWRfdmVyc2lvblAxOXphcHBhcl9mYWNlX21lc2hfdGk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aMzF6YXBwYXJfZmFjZV9tZXNoX2xvYWRlZF92ZXJzaW9uUDE5emFwcGFyX2ZhY2VfbWVzaF90aS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19aMzN6YXBwYXJfZmFjZV9tZXNoX2xvYWRfZnJvbV9tZW1vcnlQMTl6YXBwYXJfZmFjZV9tZXNoX3RpUEtjaWlpaWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aMzN6YXBwYXJfZmFjZV9tZXNoX2xvYWRfZnJvbV9tZW1vcnlQMTl6YXBwYXJfZmFjZV9tZXNoX3RpUEtjaWlpaWkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuX19aNDB6YXBwYXJfaW1hZ2VfdHJhY2tlcl90YXJnZXRfcHJldmlld19yZ2JhUDIzemFwcGFyX2ltYWdlX3RyYWNrZXJfdGlpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fWjQwemFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X3ByZXZpZXdfcmdiYVAyM3phcHBhcl9pbWFnZV90cmFja2VyX3RpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19aNDJ6YXBwYXJfaW1hZ2VfdHJhY2tlcl90YXJnZXRfbG9hZF9mcm9tX2ZpbGVQMjN6YXBwYXJfaW1hZ2VfdHJhY2tlcl90aVBLYz1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX1o0MnphcHBhcl9pbWFnZV90cmFja2VyX3RhcmdldF9sb2FkX2Zyb21fZmlsZVAyM3phcHBhcl9pbWFnZV90cmFja2VyX3RpUEtjLmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl9fWjQ1emFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X3ByZXZpZXdfcmdiYV9zaXplUDIzemFwcGFyX2ltYWdlX3RyYWNrZXJfdGlpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fWjQ1emFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X3ByZXZpZXdfcmdiYV9zaXplUDIzemFwcGFyX2ltYWdlX3RyYWNrZXJfdGlpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5fX1o0NnphcHBhcl9pbWFnZV90cmFja2VyX3RhcmdldF9wcmV2aWV3X2NvbXByZXNzZWRQMjN6YXBwYXJfaW1hZ2VfdHJhY2tlcl90aWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aNDZ6YXBwYXJfaW1hZ2VfdHJhY2tlcl90YXJnZXRfcHJldmlld19jb21wcmVzc2VkUDIzemFwcGFyX2ltYWdlX3RyYWNrZXJfdGlpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl9fWjQ2emFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X3ByZXZpZXdfcmdiYV93aWR0aFAyM3phcHBhcl9pbWFnZV90cmFja2VyX3RpaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX1o0NnphcHBhcl9pbWFnZV90cmFja2VyX3RhcmdldF9wcmV2aWV3X3JnYmFfd2lkdGhQMjN6YXBwYXJfaW1hZ2VfdHJhY2tlcl90aWkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl9fWjQ3emFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X3ByZXZpZXdfcmdiYV9oZWlnaHRQMjN6YXBwYXJfaW1hZ2VfdHJhY2tlcl90aWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aNDd6YXBwYXJfaW1hZ2VfdHJhY2tlcl90YXJnZXRfcHJldmlld19yZ2JhX2hlaWdodFAyM3phcHBhcl9pbWFnZV90cmFja2VyX3RpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5fX1o1MXphcHBhcl9pbWFnZV90cmFja2VyX3RhcmdldF9wcmV2aWV3X2NvbXByZXNzZWRfc2l6ZVAyM3phcHBhcl9pbWFnZV90cmFja2VyX3RpaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX1o1MXphcHBhcl9pbWFnZV90cmFja2VyX3RhcmdldF9wcmV2aWV3X2NvbXByZXNzZWRfc2l6ZVAyM3phcHBhcl9pbWFnZV90cmFja2VyX3RpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19aNTV6YXBwYXJfaW1hZ2VfdHJhY2tlcl90YXJnZXRfcHJldmlld19jb21wcmVzc2VkX21pbWV0eXBlUDIzemFwcGFyX2ltYWdlX3RyYWNrZXJfdGlpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fWjU1emFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X3ByZXZpZXdfY29tcHJlc3NlZF9taW1ldHlwZVAyM3phcHBhcl9pbWFnZV90cmFja2VyX3RpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xudmFyIG1lPWMuX19aU3QxOHVuY2F1Z2h0X2V4Y2VwdGlvbnY9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19aU3QxOHVuY2F1Z2h0X2V4Y2VwdGlvbnYuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl9fX2N4YV9jYW5fY2F0Y2g9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19fY3hhX2Nhbl9jYXRjaC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19fY3hhX2lzX3BvaW50ZXJfdHlwZT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX19jeGFfaXNfcG9pbnRlcl90eXBlLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5fX19lbV9qc19fZW1pZGVudGl0eT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fX19lbV9qc19fZW1pZGVudGl0eS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19fZW1fanNfX2VtbGljZXJyPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fX2VtX2pzX19lbWxpY2Vyci5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xudmFyIGtiPWMuX19fZW1zY3JpcHRlbl9lbnZpcm9uX2NvbnN0cnVjdG9yPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9fX2Vtc2NyaXB0ZW5fZW52aXJvbl9jb25zdHJ1Y3Rvci5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX19fZXJybm9fbG9jYXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19fZXJybm9fbG9jYXRpb24uYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl9fZ2V0X2Vudmlyb249ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX19nZXRfZW52aXJvbi5hcHBseShudWxsLGFyZ3VtZW50cyl9O3ZhciBNYT1jLl9lbXNjcmlwdGVuX3JlcGxhY2VfbWVtb3J5PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9lbXNjcmlwdGVuX3JlcGxhY2VfbWVtb3J5LmFwcGx5KG51bGwsYXJndW1lbnRzKX0sTGI9Yy5fZnJlZT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fZnJlZS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5fbGx2bV9ic3dhcF9pMzI9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX2xsdm1fYnN3YXBfaTMyLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5fbGx2bV9yb3VuZF9mMzI9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX2xsdm1fcm91bmRfZjMyLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5fbGx2bV9yb3VuZF9mNjQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX2xsdm1fcm91bmRfZjY0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07dmFyIE09Yy5fbWFsbG9jPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl9tYWxsb2MuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl9tZW1jcHk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX21lbWNweS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX21lbW1vdmU9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX21lbW1vdmUuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl9tZW1zZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX21lbXNldC5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5fcHRocmVhZF9jb25kX2Jyb2FkY2FzdD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fcHRocmVhZF9jb25kX2Jyb2FkY2FzdC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3B0aHJlYWRfbXV0ZXhfbG9jaz1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fcHRocmVhZF9tdXRleF9sb2NrLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5fcHRocmVhZF9tdXRleF91bmxvY2s9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3B0aHJlYWRfbXV0ZXhfdW5sb2NrLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5fcm91bmQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3JvdW5kLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5fc2Jyaz1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5fc2Jyay5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5femFwcGFyX2FuYWx5dGljc19wcm9qZWN0X2lkX3NldD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2FuYWx5dGljc19wcm9qZWN0X2lkX3NldC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9iYXJjb2RlX2ZpbmRlcl9jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9iYXJjb2RlX2ZpbmRlcl9jcmVhdGUuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfYmFyY29kZV9maW5kZXJfZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2JhcmNvZGVfZmluZGVyX2Rlc3Ryb3kuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfYmFyY29kZV9maW5kZXJfZW5hYmxlZD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2JhcmNvZGVfZmluZGVyX2VuYWJsZWQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuX3phcHBhcl9iYXJjb2RlX2ZpbmRlcl9lbmFibGVkX3NldD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2JhcmNvZGVfZmluZGVyX2VuYWJsZWRfc2V0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2JhcmNvZGVfZmluZGVyX2Zvcm1hdHM9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9iYXJjb2RlX2ZpbmRlcl9mb3JtYXRzLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2JhcmNvZGVfZmluZGVyX2Zvcm1hdHNfc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfYmFyY29kZV9maW5kZXJfZm9ybWF0c19zZXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfYmFyY29kZV9maW5kZXJfZm91bmRfZm9ybWF0PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfYmFyY29kZV9maW5kZXJfZm91bmRfZm9ybWF0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfYmFyY29kZV9maW5kZXJfZm91bmRfbnVtYmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfYmFyY29kZV9maW5kZXJfZm91bmRfbnVtYmVyLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2JhcmNvZGVfZmluZGVyX2ZvdW5kX3RleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9iYXJjb2RlX2ZpbmRlcl9mb3VuZF90ZXh0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2NhbWVyYV9kZWZhdWx0X2RldmljZV9pZD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2NhbWVyYV9kZWZhdWx0X2RldmljZV9pZC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9jYW1lcmFfc291cmNlX2NyZWF0ZT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2NhbWVyYV9zb3VyY2VfY3JlYXRlLmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfY2FtZXJhX3NvdXJjZV9kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfY2FtZXJhX3NvdXJjZV9kZXN0cm95LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2NhbWVyYV9zb3VyY2VfcGF1c2U9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9jYW1lcmFfc291cmNlX3BhdXNlLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2NhbWVyYV9zb3VyY2Vfc3RhcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9jYW1lcmFfc291cmNlX3N0YXJ0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2ZhY2VfbGFuZG1hcmtfYW5jaG9yX3Bvc2U9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX2xhbmRtYXJrX2FuY2hvcl9wb3NlLmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfZmFjZV9sYW5kbWFya19jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX2xhbmRtYXJrX2NyZWF0ZS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9mYWNlX2xhbmRtYXJrX2Rlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX2xhbmRtYXJrX2Rlc3Ryb3kuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfZmFjZV9tZXNoX2NyZWF0ZT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2ZhY2VfbWVzaF9jcmVhdGUuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfZmFjZV9tZXNoX2Rlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX21lc2hfZGVzdHJveS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5femFwcGFyX2ZhY2VfdHJhY2tlcl9hbmNob3JfY291bnQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX3RyYWNrZXJfYW5jaG9yX2NvdW50LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2ZhY2VfdHJhY2tlcl9hbmNob3JfZXhwcmVzc2lvbl9jb2VmZmljaWVudHM9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX3RyYWNrZXJfYW5jaG9yX2V4cHJlc3Npb25fY29lZmZpY2llbnRzLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2ZhY2VfdHJhY2tlcl9hbmNob3JfaWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX3RyYWNrZXJfYW5jaG9yX2lkLmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfZmFjZV90cmFja2VyX2FuY2hvcl9pZGVudGl0eV9jb2VmZmljaWVudHM9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX3RyYWNrZXJfYW5jaG9yX2lkZW50aXR5X2NvZWZmaWNpZW50cy5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9mYWNlX3RyYWNrZXJfYW5jaG9yX3Bvc2VfcmF3PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfZmFjZV90cmFja2VyX2FuY2hvcl9wb3NlX3Jhdy5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9mYWNlX3RyYWNrZXJfY3JlYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfZmFjZV90cmFja2VyX2NyZWF0ZS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9mYWNlX3RyYWNrZXJfZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2ZhY2VfdHJhY2tlcl9kZXN0cm95LmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfZmFjZV90cmFja2VyX2VuYWJsZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX3RyYWNrZXJfZW5hYmxlZC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9mYWNlX3RyYWNrZXJfZW5hYmxlZF9zZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX3RyYWNrZXJfZW5hYmxlZF9zZXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfZmFjZV90cmFja2VyX21heF9mYWNlcz1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2ZhY2VfdHJhY2tlcl9tYXhfZmFjZXMuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfZmFjZV90cmFja2VyX21heF9mYWNlc19zZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9mYWNlX3RyYWNrZXJfbWF4X2ZhY2VzX3NldC5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5femFwcGFyX2ZhY2VfdHJhY2tlcl9tb2RlbF9sb2FkX2Zyb21fbWVtb3J5PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfZmFjZV90cmFja2VyX21vZGVsX2xvYWRfZnJvbV9tZW1vcnkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfZmFjZV90cmFja2VyX21vZGVsX2xvYWRlZF92ZXJzaW9uPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfZmFjZV90cmFja2VyX21vZGVsX2xvYWRlZF92ZXJzaW9uLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2hhc19pbml0aWFsaXplZD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2hhc19pbml0aWFsaXplZC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9pbWFnZV90cmFja2VyX2FuY2hvcl9jb3VudD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2ltYWdlX3RyYWNrZXJfYW5jaG9yX2NvdW50LmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfaW1hZ2VfdHJhY2tlcl9hbmNob3JfaWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9pbWFnZV90cmFja2VyX2FuY2hvcl9pZC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9pbWFnZV90cmFja2VyX2FuY2hvcl9wb3NlX3Jhdz1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2ltYWdlX3RyYWNrZXJfYW5jaG9yX3Bvc2VfcmF3LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2ltYWdlX3RyYWNrZXJfY3JlYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW1hZ2VfdHJhY2tlcl9jcmVhdGUuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfaW1hZ2VfdHJhY2tlcl9kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW1hZ2VfdHJhY2tlcl9kZXN0cm95LmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfaW1hZ2VfdHJhY2tlcl9lbmFibGVkPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW1hZ2VfdHJhY2tlcl9lbmFibGVkLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2ltYWdlX3RyYWNrZXJfZW5hYmxlZF9zZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9pbWFnZV90cmFja2VyX2VuYWJsZWRfc2V0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X2NvdW50PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW1hZ2VfdHJhY2tlcl90YXJnZXRfY291bnQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfaW1hZ2VfdHJhY2tlcl90YXJnZXRfbG9hZF9mcm9tX21lbW9yeT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X2xvYWRfZnJvbV9tZW1vcnkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuX3phcHBhcl9pbWFnZV90cmFja2VyX3RhcmdldF9sb2FkZWRfdmVyc2lvbj1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2ltYWdlX3RyYWNrZXJfdGFyZ2V0X2xvYWRlZF92ZXJzaW9uLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2luc3RhbnRfd29ybGRfdHJhY2tlcl9hbmNob3JfcG9zZV9yYXc9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9pbnN0YW50X3dvcmxkX3RyYWNrZXJfYW5jaG9yX3Bvc2VfcmF3LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2luc3RhbnRfd29ybGRfdHJhY2tlcl9hbmNob3JfcG9zZV9zZXRfZnJvbV9jYW1lcmFfb2Zmc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW5zdGFudF93b3JsZF90cmFja2VyX2FuY2hvcl9wb3NlX3NldF9mcm9tX2NhbWVyYV9vZmZzZXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuX3phcHBhcl9pbnN0YW50X3dvcmxkX3RyYWNrZXJfY3JlYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW5zdGFudF93b3JsZF90cmFja2VyX2NyZWF0ZS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9pbnN0YW50X3dvcmxkX3RyYWNrZXJfZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2luc3RhbnRfd29ybGRfdHJhY2tlcl9kZXN0cm95LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2luc3RhbnRfd29ybGRfdHJhY2tlcl9lbmFibGVkPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW5zdGFudF93b3JsZF90cmFja2VyX2VuYWJsZWQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfaW5zdGFudF93b3JsZF90cmFja2VyX2VuYWJsZWRfc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW5zdGFudF93b3JsZF90cmFja2VyX2VuYWJsZWRfc2V0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfaW52ZXJ0PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfaW52ZXJ0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX2xvZ19sZXZlbD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX2xvZ19sZXZlbC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9sb2dfbGV2ZWxfc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfbG9nX2xldmVsX3NldC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9waXBlbGluZV9jYW1lcmFfZnJhbWVfY2FtZXJhX2F0dGl0dWRlPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX2ZyYW1lX2NhbWVyYV9hdHRpdHVkZS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9mcmFtZV9zdWJtaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9waXBlbGluZV9jYW1lcmFfZnJhbWVfc3VibWl0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9mcmFtZV90ZXh0dXJlX2dsPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX2ZyYW1lX3RleHR1cmVfZ2wuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX2ZyYW1lX3RleHR1cmVfbWF0cml4PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX2ZyYW1lX3RleHR1cmVfbWF0cml4LmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX2ZyYW1lX3VwbG9hZF9nbD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9mcmFtZV91cGxvYWRfZ2wuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX2ZyYW1lX3VzZXJfZGF0YT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9mcmFtZV91c2VyX2RhdGEuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX2ZyYW1lX3VzZXJfZmFjaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX2ZyYW1lX3VzZXJfZmFjaW5nLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9tb2RlbD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9tb2RlbC5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9wb3NlX2RlZmF1bHQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9waXBlbGluZV9jYW1lcmFfcG9zZV9kZWZhdWx0LmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9wb3NlX3dpdGhfYXR0aXR1ZGU9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9waXBlbGluZV9jYW1lcmFfcG9zZV93aXRoX2F0dGl0dWRlLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX3BpcGVsaW5lX2NhbWVyYV9wb3NlX3dpdGhfb3JpZ2luPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfcGlwZWxpbmVfY2FtZXJhX3Bvc2Vfd2l0aF9vcmlnaW4uYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfcGlwZWxpbmVfY3JlYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfcGlwZWxpbmVfY3JlYXRlLmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLl96YXBwYXJfcGlwZWxpbmVfZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX3BpcGVsaW5lX2Rlc3Ryb3kuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfcGlwZWxpbmVfZnJhbWVfbnVtYmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfcGlwZWxpbmVfZnJhbWVfbnVtYmVyLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5femFwcGFyX3BpcGVsaW5lX2ZyYW1lX3VwZGF0ZT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX3BpcGVsaW5lX2ZyYW1lX3VwZGF0ZS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9waXBlbGluZV9tb3Rpb25fYWNjZWxlcm9tZXRlcl9zdWJtaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9waXBlbGluZV9tb3Rpb25fYWNjZWxlcm9tZXRlcl9zdWJtaXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuX3phcHBhcl9waXBlbGluZV9tb3Rpb25fYXR0aXR1ZGVfc3VibWl0PWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLl96YXBwYXJfcGlwZWxpbmVfbW90aW9uX2F0dGl0dWRlX3N1Ym1pdC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuX3phcHBhcl9waXBlbGluZV9tb3Rpb25fcm90YXRpb25fcmF0ZV9zdWJtaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uX3phcHBhcl9waXBlbGluZV9tb3Rpb25fcm90YXRpb25fcmF0ZV9zdWJtaXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLl96YXBwYXJfcGlwZWxpbmVfcHJvY2Vzc19nbD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5femFwcGFyX3BpcGVsaW5lX3Byb2Nlc3NfZ2wuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmVzdGFibGlzaFN0YWNrU3BhY2U9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZXN0YWJsaXNoU3RhY2tTcGFjZS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5nZXRUZW1wUmV0MD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5nZXRUZW1wUmV0MC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MucnVuUG9zdFNldHM9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20ucnVuUG9zdFNldHMuYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgT2I9Yy5zZXRUZW1wUmV0MD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5zZXRUZW1wUmV0MC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2Muc2V0VGhyZXc9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uc2V0VGhyZXcuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbnZhciByYT1jLnN0YWNrQWxsb2M9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uc3RhY2tBbGxvYy5hcHBseShudWxsLGFyZ3VtZW50cyl9LEM9Yy5zdGFja1Jlc3RvcmU9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uc3RhY2tSZXN0b3JlLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sQj1jLnN0YWNrU2F2ZT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5zdGFja1NhdmUuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX2kuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfaWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF9paS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF9paWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF9paWkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuZHluQ2FsbF9paWlpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLmR5bkNhbGxfaWlpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF9paWlpaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX2lpaWlpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5keW5DYWxsX2lpaWlpZD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX2lpaWlpZC5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF9paWlpaWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF9paWlpaWkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfaWlpaWlpZD1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX2lpaWlpaWQuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfaWlpaWlpaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX2lpaWlpaWkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuZHluQ2FsbF9paWlpaWlpaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX2lpaWlpaWlpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5keW5DYWxsX2lpaWlpaWlpaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX2lpaWlpaWlpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF9paWlpaWo9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF9paWlpaWouYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfaWlqaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX2lpamkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfdj1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX3YuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfdmk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF92aS5hcHBseShudWxsLGFyZ3VtZW50cyl9O1xuYy5keW5DYWxsX3ZpaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX3ZpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF92aWlmZmlpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLmR5bkNhbGxfdmlpZmZpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF92aWlpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLmR5bkNhbGxfdmlpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF92aWlpZmZmaWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF92aWlpZmZmaWkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfdmlpaWZmaWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF92aWlpZmZpaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF92aWlpaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX3ZpaWlpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07XG5jLmR5bkNhbGxfdmlpaWlpPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXNtLmR5bkNhbGxfdmlpaWlpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5keW5DYWxsX3ZpaWlpaWZmZmZmZmZmZmZmZmZmZmY9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF92aWlpaWlmZmZmZmZmZmZmZmZmZmZmLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5keW5DYWxsX3ZpaWlpaWk9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF92aWlpaWlpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5keW5DYWxsX3ZpaWppaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX3ZpaWppaS5hcHBseShudWxsLGFyZ3VtZW50cyl9O2MuZHluQ2FsbF92aWo9ZnVuY3Rpb24oKXtyZXR1cm4gYy5hc20uZHluQ2FsbF92aWouYXBwbHkobnVsbCxhcmd1bWVudHMpfTtjLmR5bkNhbGxfdmlqaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX3ZpamkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtcbmMuZHluQ2FsbF92aWppaT1mdW5jdGlvbigpe3JldHVybiBjLmFzbS5keW5DYWxsX3ZpamlpLmFwcGx5KG51bGwsYXJndW1lbnRzKX07Yy5hc209bmU7Yy5jd3JhcD1mdW5jdGlvbihhLGIsZCxlKXtkPWR8fFtdO3ZhciBmPWQuZXZlcnkoZnVuY3Rpb24oYSl7cmV0dXJuXCJudW1iZXJcIj09PWF9KTtyZXR1cm5cInN0cmluZ1wiIT09YiYmZiYmIWU/cWEoYSk6ZnVuY3Rpb24oKXt2YXIgZT1kLGY9YXJndW1lbnRzLGs9cWEoYSksbT1bXSxxPTA7aWYoZilmb3IodmFyIHI9MDtyPGYubGVuZ3RoO3IrKyl7dmFyIHc9dGFbZVtyXV07dz8oMD09PXEmJihxPUIoKSksbVtyXT13KGZbcl0pKTptW3JdPWZbcl19ZT1rLmFwcGx5KG51bGwsbSk7ZT1cInN0cmluZ1wiPT09Yj9IKGUpOlwiYm9vbGVhblwiPT09Yj8hIWU6ZTswIT09cSYmQyhxKTtyZXR1cm4gZX19O1xuYy5zZXRWYWx1ZT1mdW5jdGlvbihhLGIsZCl7ZD1kfHxcImk4XCI7XCIqXCI9PT1kLmNoYXJBdChkLmxlbmd0aC0xKSYmKGQ9XCJpMzJcIik7c3dpdGNoKGQpe2Nhc2UgXCJpMVwiOkRbYT4+MF09YjticmVhaztjYXNlIFwiaThcIjpEW2E+PjBdPWI7YnJlYWs7Y2FzZSBcImkxNlwiOkNhW2E+PjFdPWI7YnJlYWs7Y2FzZSBcImkzMlwiOnZbYT4+Ml09YjticmVhaztjYXNlIFwiaTY0XCI6dGVtcEk2ND1bYj4+PjAsKHRlbXBEb3VibGU9YiwxPD0rWGEodGVtcERvdWJsZSk/MDx0ZW1wRG91YmxlPygkYSgrWmEodGVtcERvdWJsZS80Mjk0OTY3Mjk2KSw0Mjk0OTY3Mjk1KXwwKT4+PjA6fn4rWWEoKHRlbXBEb3VibGUtKyh+fnRlbXBEb3VibGU+Pj4wKSkvNDI5NDk2NzI5Nik+Pj4wOjApXTt2W2E+PjJdPXRlbXBJNjRbMF07dlthKzQ+PjJdPXRlbXBJNjRbMV07YnJlYWs7Y2FzZSBcImZsb2F0XCI6RGFbYT4+Ml09YjticmVhaztjYXNlIFwiZG91YmxlXCI6RWFbYT4+M109YjticmVhaztkZWZhdWx0OnooXCJpbnZhbGlkIHR5cGUgZm9yIHNldFZhbHVlOiBcIitcbmQpfX07Yy5nZXRWYWx1ZT1mdW5jdGlvbihhLGIpe2I9Ynx8XCJpOFwiO1wiKlwiPT09Yi5jaGFyQXQoYi5sZW5ndGgtMSkmJihiPVwiaTMyXCIpO3N3aXRjaChiKXtjYXNlIFwiaTFcIjpyZXR1cm4gRFthPj4wXTtjYXNlIFwiaThcIjpyZXR1cm4gRFthPj4wXTtjYXNlIFwiaTE2XCI6cmV0dXJuIENhW2E+PjFdO2Nhc2UgXCJpMzJcIjpyZXR1cm4gdlthPj4yXTtjYXNlIFwiaTY0XCI6cmV0dXJuIHZbYT4+Ml07Y2FzZSBcImZsb2F0XCI6cmV0dXJuIERhW2E+PjJdO2Nhc2UgXCJkb3VibGVcIjpyZXR1cm4gRWFbYT4+M107ZGVmYXVsdDp6KFwiaW52YWxpZCB0eXBlIGZvciBnZXRWYWx1ZTogXCIrYil9cmV0dXJuIG51bGx9O2MuVVRGOFRvU3RyaW5nPXVhO2MudGhlbj1mdW5jdGlvbihhKXtpZihjLmNhbGxlZFJ1bilhKGMpO2Vsc2V7dmFyIGI9Yy5vblJ1bnRpbWVJbml0aWFsaXplZDtjLm9uUnVudGltZUluaXRpYWxpemVkPWZ1bmN0aW9uKCl7YiYmYigpO2EoYyl9fXJldHVybiBjfTtcbmNiPWZ1bmN0aW9uIG9lKCl7Yy5jYWxsZWRSdW58fHBlKCk7Yy5jYWxsZWRSdW58fChjYj1vZSl9O1xuZnVuY3Rpb24gcGUoKXtmdW5jdGlvbiBhKCl7aWYoIWMuY2FsbGVkUnVuJiYoYy5jYWxsZWRSdW49ITAsIXBhKSl7VmF8fChWYT0hMCxQYShSYSkpO1BhKFNhKTtpZihjLm9uUnVudGltZUluaXRpYWxpemVkKWMub25SdW50aW1lSW5pdGlhbGl6ZWQoKTtpZihjLnBvc3RSdW4pZm9yKFwiZnVuY3Rpb25cIj09dHlwZW9mIGMucG9zdFJ1biYmKGMucG9zdFJ1bj1bYy5wb3N0UnVuXSk7Yy5wb3N0UnVuLmxlbmd0aDspe3ZhciBhPWMucG9zdFJ1bi5zaGlmdCgpO1VhLnVuc2hpZnQoYSl9UGEoVWEpfX1pZighKDA8YWIpKXtpZihjLnByZVJ1bilmb3IoXCJmdW5jdGlvblwiPT10eXBlb2YgYy5wcmVSdW4mJihjLnByZVJ1bj1bYy5wcmVSdW5dKTtjLnByZVJ1bi5sZW5ndGg7KVdhKCk7UGEoUWEpOzA8YWJ8fGMuY2FsbGVkUnVufHwoYy5zZXRTdGF0dXM/KGMuc2V0U3RhdHVzKFwiUnVubmluZy4uLlwiKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe2Muc2V0U3RhdHVzKFwiXCIpfSxcbjEpO2EoKX0sMSkpOmEoKSl9fWMucnVuPXBlO2Z1bmN0aW9uIHooYSl7aWYoYy5vbkFib3J0KWMub25BYm9ydChhKTt2b2lkIDAhPT1hPyhjYShhKSxwKGEpLGE9SlNPTi5zdHJpbmdpZnkoYSkpOmE9XCJcIjtwYT0hMDt0aHJvd1wiYWJvcnQoXCIrYStcIikuIEJ1aWxkIHdpdGggLXMgQVNTRVJUSU9OUz0xIGZvciBtb3JlIGluZm8uXCI7fWMuYWJvcnQ9ejtpZihjLnByZUluaXQpZm9yKFwiZnVuY3Rpb25cIj09dHlwZW9mIGMucHJlSW5pdCYmKGMucHJlSW5pdD1bYy5wcmVJbml0XSk7MDxjLnByZUluaXQubGVuZ3RoOyljLnByZUluaXQucG9wKCkoKTtjLm5vRXhpdFJ1bnRpbWU9ITA7cGUoKTtcblxuXG4gIHJldHVybiBaQ1Y7XG59XG4pO1xufSkoKTtcbmV4cG9ydCBkZWZhdWx0IFpDVjsiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/zcv.js\n");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/zcv.wasm":
/*!*****************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/zcv.wasm ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"79a9ee7cc93d3f6956fc17a4ad1de0d5.wasm\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHphcHBhci96YXBwYXItY3YvbGliL3pjdi53YXNtLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHphcHBhci96YXBwYXItdGhyZWVqcy8uL25vZGVfbW9kdWxlcy9AemFwcGFyL3phcHBhci1jdi9saWIvemN2Lndhc20/ZDdlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNzlhOWVlN2NjOTNkM2Y2OTU2ZmMxN2E0YWQxZGUwZDUud2FzbVwiOyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@zappar/zappar-cv/lib/zcv.wasm\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/common.js":
/*!**********************************************!*\
  !*** ./node_modules/gl-matrix/esm/common.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EPSILON\": () => (/* binding */ EPSILON),\n/* harmony export */   \"ARRAY_TYPE\": () => (/* binding */ ARRAY_TYPE),\n/* harmony export */   \"RANDOM\": () => (/* binding */ RANDOM),\n/* harmony export */   \"setMatrixArrayType\": () => (/* binding */ setMatrixArrayType),\n/* harmony export */   \"toRadian\": () => (/* binding */ toRadian),\n/* harmony export */   \"equals\": () => (/* binding */ equals)\n/* harmony export */ });\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2wtbWF0cml4L2VzbS9jb21tb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AemFwcGFyL3phcHBhci10aHJlZWpzLy4vbm9kZV9tb2R1bGVzL2dsLW1hdHJpeC9lc20vY29tbW9uLmpzP2M5NGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvbW1vbiB1dGlsaXRpZXNcclxuICogQG1vZHVsZSBnbE1hdHJpeFxyXG4gKi9cbi8vIENvbmZpZ3VyYXRpb24gQ29uc3RhbnRzXG5leHBvcnQgdmFyIEVQU0lMT04gPSAwLjAwMDAwMTtcbmV4cG9ydCB2YXIgQVJSQVlfVFlQRSA9IHR5cGVvZiBGbG9hdDMyQXJyYXkgIT09ICd1bmRlZmluZWQnID8gRmxvYXQzMkFycmF5IDogQXJyYXk7XG5leHBvcnQgdmFyIFJBTkRPTSA9IE1hdGgucmFuZG9tO1xuLyoqXHJcbiAqIFNldHMgdGhlIHR5cGUgb2YgYXJyYXkgdXNlZCB3aGVuIGNyZWF0aW5nIG5ldyB2ZWN0b3JzIGFuZCBtYXRyaWNlc1xyXG4gKlxyXG4gKiBAcGFyYW0ge1R5cGV9IHR5cGUgQXJyYXkgdHlwZSwgc3VjaCBhcyBGbG9hdDMyQXJyYXkgb3IgQXJyYXlcclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRNYXRyaXhBcnJheVR5cGUodHlwZSkge1xuICBBUlJBWV9UWVBFID0gdHlwZTtcbn1cbnZhciBkZWdyZWUgPSBNYXRoLlBJIC8gMTgwO1xuLyoqXHJcbiAqIENvbnZlcnQgRGVncmVlIFRvIFJhZGlhblxyXG4gKlxyXG4gKiBAcGFyYW0ge051bWJlcn0gYSBBbmdsZSBpbiBEZWdyZWVzXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gdG9SYWRpYW4oYSkge1xuICByZXR1cm4gYSAqIGRlZ3JlZTtcbn1cbi8qKlxyXG4gKiBUZXN0cyB3aGV0aGVyIG9yIG5vdCB0aGUgYXJndW1lbnRzIGhhdmUgYXBwcm94aW1hdGVseSB0aGUgc2FtZSB2YWx1ZSwgd2l0aGluIGFuIGFic29sdXRlXHJcbiAqIG9yIHJlbGF0aXZlIHRvbGVyYW5jZSBvZiBnbE1hdHJpeC5FUFNJTE9OIChhbiBhYnNvbHV0ZSB0b2xlcmFuY2UgaXMgdXNlZCBmb3IgdmFsdWVzIGxlc3NcclxuICogdGhhbiBvciBlcXVhbCB0byAxLjAsIGFuZCBhIHJlbGF0aXZlIHRvbGVyYW5jZSBpcyB1c2VkIGZvciBsYXJnZXIgdmFsdWVzKVxyXG4gKlxyXG4gKiBAcGFyYW0ge051bWJlcn0gYSBUaGUgZmlyc3QgbnVtYmVyIHRvIHRlc3QuXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSBiIFRoZSBzZWNvbmQgbnVtYmVyIHRvIHRlc3QuXHJcbiAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmIHRoZSBudW1iZXJzIGFyZSBhcHByb3hpbWF0ZWx5IGVxdWFsLCBmYWxzZSBvdGhlcndpc2UuXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgcmV0dXJuIE1hdGguYWJzKGEgLSBiKSA8PSBFUFNJTE9OICogTWF0aC5tYXgoMS4wLCBNYXRoLmFicyhhKSwgTWF0aC5hYnMoYikpO1xufVxuaWYgKCFNYXRoLmh5cG90KSBNYXRoLmh5cG90ID0gZnVuY3Rpb24gKCkge1xuICB2YXIgeSA9IDAsXG4gICAgICBpID0gYXJndW1lbnRzLmxlbmd0aDtcblxuICB3aGlsZSAoaS0tKSB7XG4gICAgeSArPSBhcmd1bWVudHNbaV0gKiBhcmd1bWVudHNbaV07XG4gIH1cblxuICByZXR1cm4gTWF0aC5zcXJ0KHkpO1xufTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/common.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/index.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"glMatrix\": () => (/* reexport module object */ _common_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   \"mat2\": () => (/* reexport module object */ _mat2_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   \"mat2d\": () => (/* reexport module object */ _mat2d_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   \"mat3\": () => (/* reexport module object */ _mat3_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   \"mat4\": () => (/* reexport module object */ _mat4_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   \"quat\": () => (/* reexport module object */ _quat_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   \"quat2\": () => (/* reexport module object */ _quat2_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   \"vec2\": () => (/* reexport module object */ _vec2_js__WEBPACK_IMPORTED_MODULE_7__),\n/* harmony export */   \"vec3\": () => (/* reexport module object */ _vec3_js__WEBPACK_IMPORTED_MODULE_8__),\n/* harmony export */   \"vec4\": () => (/* reexport module object */ _vec4_js__WEBPACK_IMPORTED_MODULE_9__)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _mat2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat2.js */ \"./node_modules/gl-matrix/esm/mat2.js\");\n/* harmony import */ var _mat2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat2d.js */ \"./node_modules/gl-matrix/esm/mat2d.js\");\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3.js */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mat4.js */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./quat.js */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var _quat2_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./quat2.js */ \"./node_modules/gl-matrix/esm/quat2.js\");\n/* harmony import */ var _vec2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vec2.js */ \"./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vec3.js */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vec4.js */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2wtbWF0cml4L2VzbS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL0B6YXBwYXIvemFwcGFyLXRocmVlanMvLi9ub2RlX21vZHVsZXMvZ2wtbWF0cml4L2VzbS9pbmRleC5qcz8yMGU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGdsTWF0cml4IGZyb20gXCIuL2NvbW1vbi5qc1wiO1xuaW1wb3J0ICogYXMgbWF0MiBmcm9tIFwiLi9tYXQyLmpzXCI7XG5pbXBvcnQgKiBhcyBtYXQyZCBmcm9tIFwiLi9tYXQyZC5qc1wiO1xuaW1wb3J0ICogYXMgbWF0MyBmcm9tIFwiLi9tYXQzLmpzXCI7XG5pbXBvcnQgKiBhcyBtYXQ0IGZyb20gXCIuL21hdDQuanNcIjtcbmltcG9ydCAqIGFzIHF1YXQgZnJvbSBcIi4vcXVhdC5qc1wiO1xuaW1wb3J0ICogYXMgcXVhdDIgZnJvbSBcIi4vcXVhdDIuanNcIjtcbmltcG9ydCAqIGFzIHZlYzIgZnJvbSBcIi4vdmVjMi5qc1wiO1xuaW1wb3J0ICogYXMgdmVjMyBmcm9tIFwiLi92ZWMzLmpzXCI7XG5pbXBvcnQgKiBhcyB2ZWM0IGZyb20gXCIuL3ZlYzQuanNcIjtcbmV4cG9ydCB7IGdsTWF0cml4LCBtYXQyLCBtYXQyZCwgbWF0MywgbWF0NCwgcXVhdCwgcXVhdDIsIHZlYzIsIHZlYzMsIHZlYzQgfTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/index.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat2.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat2.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"adjoint\": () => (/* binding */ adjoint),\n/* harmony export */   \"determinant\": () => (/* binding */ determinant),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromScaling\": () => (/* binding */ fromScaling),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"frob\": () => (/* binding */ frob),\n/* harmony export */   \"LDU\": () => (/* binding */ LDU),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"multiplyScalarAndAdd\": () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"sub\": () => (/* binding */ sub)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/mat2.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat2d.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat2d.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"determinant\": () => (/* binding */ determinant),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"translate\": () => (/* binding */ translate),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromScaling\": () => (/* binding */ fromScaling),\n/* harmony export */   \"fromTranslation\": () => (/* binding */ fromTranslation),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"frob\": () => (/* binding */ frob),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"multiplyScalarAndAdd\": () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"sub\": () => (/* binding */ sub)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b, c,\r\n *  d, tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(6);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/mat2d.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"fromMat4\": () => (/* binding */ fromMat4),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"adjoint\": () => (/* binding */ adjoint),\n/* harmony export */   \"determinant\": () => (/* binding */ determinant),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"translate\": () => (/* binding */ translate),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"fromTranslation\": () => (/* binding */ fromTranslation),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromScaling\": () => (/* binding */ fromScaling),\n/* harmony export */   \"fromMat2d\": () => (/* binding */ fromMat2d),\n/* harmony export */   \"fromQuat\": () => (/* binding */ fromQuat),\n/* harmony export */   \"normalFromMat4\": () => (/* binding */ normalFromMat4),\n/* harmony export */   \"projection\": () => (/* binding */ projection),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"frob\": () => (/* binding */ frob),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"multiplyScalarAndAdd\": () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"sub\": () => (/* binding */ sub)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/mat3.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"adjoint\": () => (/* binding */ adjoint),\n/* harmony export */   \"determinant\": () => (/* binding */ determinant),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"translate\": () => (/* binding */ translate),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"fromTranslation\": () => (/* binding */ fromTranslation),\n/* harmony export */   \"fromScaling\": () => (/* binding */ fromScaling),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromXRotation\": () => (/* binding */ fromXRotation),\n/* harmony export */   \"fromYRotation\": () => (/* binding */ fromYRotation),\n/* harmony export */   \"fromZRotation\": () => (/* binding */ fromZRotation),\n/* harmony export */   \"fromRotationTranslation\": () => (/* binding */ fromRotationTranslation),\n/* harmony export */   \"fromQuat2\": () => (/* binding */ fromQuat2),\n/* harmony export */   \"getTranslation\": () => (/* binding */ getTranslation),\n/* harmony export */   \"getScaling\": () => (/* binding */ getScaling),\n/* harmony export */   \"getRotation\": () => (/* binding */ getRotation),\n/* harmony export */   \"fromRotationTranslationScale\": () => (/* binding */ fromRotationTranslationScale),\n/* harmony export */   \"fromRotationTranslationScaleOrigin\": () => (/* binding */ fromRotationTranslationScaleOrigin),\n/* harmony export */   \"fromQuat\": () => (/* binding */ fromQuat),\n/* harmony export */   \"frustum\": () => (/* binding */ frustum),\n/* harmony export */   \"perspective\": () => (/* binding */ perspective),\n/* harmony export */   \"perspectiveFromFieldOfView\": () => (/* binding */ perspectiveFromFieldOfView),\n/* harmony export */   \"ortho\": () => (/* binding */ ortho),\n/* harmony export */   \"lookAt\": () => (/* binding */ lookAt),\n/* harmony export */   \"targetTo\": () => (/* binding */ targetTo),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"frob\": () => (/* binding */ frob),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"multiplyScalarAndAdd\": () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"sub\": () => (/* binding */ sub)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/mat4.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/quat.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/quat.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"setAxisAngle\": () => (/* binding */ setAxisAngle),\n/* harmony export */   \"getAxisAngle\": () => (/* binding */ getAxisAngle),\n/* harmony export */   \"getAngle\": () => (/* binding */ getAngle),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"calculateW\": () => (/* binding */ calculateW),\n/* harmony export */   \"exp\": () => (/* binding */ exp),\n/* harmony export */   \"ln\": () => (/* binding */ ln),\n/* harmony export */   \"pow\": () => (/* binding */ pow),\n/* harmony export */   \"slerp\": () => (/* binding */ slerp),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"conjugate\": () => (/* binding */ conjugate),\n/* harmony export */   \"fromMat3\": () => (/* binding */ fromMat3),\n/* harmony export */   \"fromEuler\": () => (/* binding */ fromEuler),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"rotationTo\": () => (/* binding */ rotationTo),\n/* harmony export */   \"sqlerp\": () => (/* binding */ sqlerp),\n/* harmony export */   \"setAxes\": () => (/* binding */ setAxes)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3.js */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3.js */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec4.js */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\n\n\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var u2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var u3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar clone = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar fromValues = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar copy = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar set = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar add = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar scale = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar lerp = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nvar length = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar normalize = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar exactEquals = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar equals = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.create();\n  var xUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.fromValues(1, 0, 0);\n  var yUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.dot(a, b);\n\n    if (dot < -0.999999) {\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, xUnitVec3, a);\n      if (_vec3_js__WEBPACK_IMPORTED_MODULE_2__.len(tmpvec3) < 0.000001) _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, yUnitVec3, a);\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nvar setAxes = function () {\n  var matr = _mat3_js__WEBPACK_IMPORTED_MODULE_3__.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2wtbWF0cml4L2VzbS9xdWF0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHphcHBhci96YXBwYXItdGhyZWVqcy8uL25vZGVfbW9kdWxlcy9nbC1tYXRyaXgvZXNtL3F1YXQuanM/OTI1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBnbE1hdHJpeCBmcm9tIFwiLi9jb21tb24uanNcIjtcbmltcG9ydCAqIGFzIG1hdDMgZnJvbSBcIi4vbWF0My5qc1wiO1xuaW1wb3J0ICogYXMgdmVjMyBmcm9tIFwiLi92ZWMzLmpzXCI7XG5pbXBvcnQgKiBhcyB2ZWM0IGZyb20gXCIuL3ZlYzQuanNcIjtcbi8qKlxyXG4gKiBRdWF0ZXJuaW9uXHJcbiAqIEBtb2R1bGUgcXVhdFxyXG4gKi9cblxuLyoqXHJcbiAqIENyZWF0ZXMgYSBuZXcgaWRlbnRpdHkgcXVhdFxyXG4gKlxyXG4gKiBAcmV0dXJucyB7cXVhdH0gYSBuZXcgcXVhdGVybmlvblxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgdmFyIG91dCA9IG5ldyBnbE1hdHJpeC5BUlJBWV9UWVBFKDQpO1xuXG4gIGlmIChnbE1hdHJpeC5BUlJBWV9UWVBFICE9IEZsb2F0MzJBcnJheSkge1xuICAgIG91dFswXSA9IDA7XG4gICAgb3V0WzFdID0gMDtcbiAgICBvdXRbMl0gPSAwO1xuICB9XG5cbiAgb3V0WzNdID0gMTtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxyXG4gKiBTZXQgYSBxdWF0IHRvIHRoZSBpZGVudGl0eSBxdWF0ZXJuaW9uXHJcbiAqXHJcbiAqIEBwYXJhbSB7cXVhdH0gb3V0IHRoZSByZWNlaXZpbmcgcXVhdGVybmlvblxyXG4gKiBAcmV0dXJucyB7cXVhdH0gb3V0XHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gaWRlbnRpdHkob3V0KSB7XG4gIG91dFswXSA9IDA7XG4gIG91dFsxXSA9IDA7XG4gIG91dFsyXSA9IDA7XG4gIG91dFszXSA9IDE7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcclxuICogU2V0cyBhIHF1YXQgZnJvbSB0aGUgZ2l2ZW4gYW5nbGUgYW5kIHJvdGF0aW9uIGF4aXMsXHJcbiAqIHRoZW4gcmV0dXJucyBpdC5cclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgdGhlIHJlY2VpdmluZyBxdWF0ZXJuaW9uXHJcbiAqIEBwYXJhbSB7dmVjM30gYXhpcyB0aGUgYXhpcyBhcm91bmQgd2hpY2ggdG8gcm90YXRlXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSByYWQgdGhlIGFuZ2xlIGluIHJhZGlhbnNcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKiovXG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRBeGlzQW5nbGUob3V0LCBheGlzLCByYWQpIHtcbiAgcmFkID0gcmFkICogMC41O1xuICB2YXIgcyA9IE1hdGguc2luKHJhZCk7XG4gIG91dFswXSA9IHMgKiBheGlzWzBdO1xuICBvdXRbMV0gPSBzICogYXhpc1sxXTtcbiAgb3V0WzJdID0gcyAqIGF4aXNbMl07XG4gIG91dFszXSA9IE1hdGguY29zKHJhZCk7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcclxuICogR2V0cyB0aGUgcm90YXRpb24gYXhpcyBhbmQgYW5nbGUgZm9yIGEgZ2l2ZW5cclxuICogIHF1YXRlcm5pb24uIElmIGEgcXVhdGVybmlvbiBpcyBjcmVhdGVkIHdpdGhcclxuICogIHNldEF4aXNBbmdsZSwgdGhpcyBtZXRob2Qgd2lsbCByZXR1cm4gdGhlIHNhbWVcclxuICogIHZhbHVlcyBhcyBwcm92aWRpZWQgaW4gdGhlIG9yaWdpbmFsIHBhcmFtZXRlciBsaXN0XHJcbiAqICBPUiBmdW5jdGlvbmFsbHkgZXF1aXZhbGVudCB2YWx1ZXMuXHJcbiAqIEV4YW1wbGU6IFRoZSBxdWF0ZXJuaW9uIGZvcm1lZCBieSBheGlzIFswLCAwLCAxXSBhbmRcclxuICogIGFuZ2xlIC05MCBpcyB0aGUgc2FtZSBhcyB0aGUgcXVhdGVybmlvbiBmb3JtZWQgYnlcclxuICogIFswLCAwLCAxXSBhbmQgMjcwLiBUaGlzIG1ldGhvZCBmYXZvcnMgdGhlIGxhdHRlci5cclxuICogQHBhcmFtICB7dmVjM30gb3V0X2F4aXMgIFZlY3RvciByZWNlaXZpbmcgdGhlIGF4aXMgb2Ygcm90YXRpb25cclxuICogQHBhcmFtICB7cXVhdH0gcSAgICAgUXVhdGVybmlvbiB0byBiZSBkZWNvbXBvc2VkXHJcbiAqIEByZXR1cm4ge051bWJlcn0gICAgIEFuZ2xlLCBpbiByYWRpYW5zLCBvZiB0aGUgcm90YXRpb25cclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBeGlzQW5nbGUob3V0X2F4aXMsIHEpIHtcbiAgdmFyIHJhZCA9IE1hdGguYWNvcyhxWzNdKSAqIDIuMDtcbiAgdmFyIHMgPSBNYXRoLnNpbihyYWQgLyAyLjApO1xuXG4gIGlmIChzID4gZ2xNYXRyaXguRVBTSUxPTikge1xuICAgIG91dF9heGlzWzBdID0gcVswXSAvIHM7XG4gICAgb3V0X2F4aXNbMV0gPSBxWzFdIC8gcztcbiAgICBvdXRfYXhpc1syXSA9IHFbMl0gLyBzO1xuICB9IGVsc2Uge1xuICAgIC8vIElmIHMgaXMgemVybywgcmV0dXJuIGFueSBheGlzIChubyByb3RhdGlvbiAtIGF4aXMgZG9lcyBub3QgbWF0dGVyKVxuICAgIG91dF9heGlzWzBdID0gMTtcbiAgICBvdXRfYXhpc1sxXSA9IDA7XG4gICAgb3V0X2F4aXNbMl0gPSAwO1xuICB9XG5cbiAgcmV0dXJuIHJhZDtcbn1cbi8qKlxyXG4gKiBHZXRzIHRoZSBhbmd1bGFyIGRpc3RhbmNlIGJldHdlZW4gdHdvIHVuaXQgcXVhdGVybmlvbnNcclxuICpcclxuICogQHBhcmFtICB7cXVhdH0gYSAgICAgT3JpZ2luIHVuaXQgcXVhdGVybmlvbiBcclxuICogQHBhcmFtICB7cXVhdH0gYiAgICAgRGVzdGluYXRpb24gdW5pdCBxdWF0ZXJuaW9uXHJcbiAqIEByZXR1cm4ge051bWJlcn0gICAgIEFuZ2xlLCBpbiByYWRpYW5zLCBiZXR3ZWVuIHRoZSB0d28gcXVhdGVybmlvbnNcclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBbmdsZShhLCBiKSB7XG4gIHZhciBkb3Rwcm9kdWN0ID0gZG90KGEsIGIpO1xuICByZXR1cm4gTWF0aC5hY29zKDIgKiBkb3Rwcm9kdWN0ICogZG90cHJvZHVjdCAtIDEpO1xufVxuLyoqXHJcbiAqIE11bHRpcGxpZXMgdHdvIHF1YXQnc1xyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb25cclxuICogQHBhcmFtIHtxdWF0fSBhIHRoZSBmaXJzdCBvcGVyYW5kXHJcbiAqIEBwYXJhbSB7cXVhdH0gYiB0aGUgc2Vjb25kIG9wZXJhbmRcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIG11bHRpcGx5KG91dCwgYSwgYikge1xuICB2YXIgYXggPSBhWzBdLFxuICAgICAgYXkgPSBhWzFdLFxuICAgICAgYXogPSBhWzJdLFxuICAgICAgYXcgPSBhWzNdO1xuICB2YXIgYnggPSBiWzBdLFxuICAgICAgYnkgPSBiWzFdLFxuICAgICAgYnogPSBiWzJdLFxuICAgICAgYncgPSBiWzNdO1xuICBvdXRbMF0gPSBheCAqIGJ3ICsgYXcgKiBieCArIGF5ICogYnogLSBheiAqIGJ5O1xuICBvdXRbMV0gPSBheSAqIGJ3ICsgYXcgKiBieSArIGF6ICogYnggLSBheCAqIGJ6O1xuICBvdXRbMl0gPSBheiAqIGJ3ICsgYXcgKiBieiArIGF4ICogYnkgLSBheSAqIGJ4O1xuICBvdXRbM10gPSBhdyAqIGJ3IC0gYXggKiBieCAtIGF5ICogYnkgLSBheiAqIGJ6O1xuICByZXR1cm4gb3V0O1xufVxuLyoqXHJcbiAqIFJvdGF0ZXMgYSBxdWF0ZXJuaW9uIGJ5IHRoZSBnaXZlbiBhbmdsZSBhYm91dCB0aGUgWCBheGlzXHJcbiAqXHJcbiAqIEBwYXJhbSB7cXVhdH0gb3V0IHF1YXQgcmVjZWl2aW5nIG9wZXJhdGlvbiByZXN1bHRcclxuICogQHBhcmFtIHtxdWF0fSBhIHF1YXQgdG8gcm90YXRlXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSByYWQgYW5nbGUgKGluIHJhZGlhbnMpIHRvIHJvdGF0ZVxyXG4gKiBAcmV0dXJucyB7cXVhdH0gb3V0XHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gcm90YXRlWChvdXQsIGEsIHJhZCkge1xuICByYWQgKj0gMC41O1xuICB2YXIgYXggPSBhWzBdLFxuICAgICAgYXkgPSBhWzFdLFxuICAgICAgYXogPSBhWzJdLFxuICAgICAgYXcgPSBhWzNdO1xuICB2YXIgYnggPSBNYXRoLnNpbihyYWQpLFxuICAgICAgYncgPSBNYXRoLmNvcyhyYWQpO1xuICBvdXRbMF0gPSBheCAqIGJ3ICsgYXcgKiBieDtcbiAgb3V0WzFdID0gYXkgKiBidyArIGF6ICogYng7XG4gIG91dFsyXSA9IGF6ICogYncgLSBheSAqIGJ4O1xuICBvdXRbM10gPSBhdyAqIGJ3IC0gYXggKiBieDtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxyXG4gKiBSb3RhdGVzIGEgcXVhdGVybmlvbiBieSB0aGUgZ2l2ZW4gYW5nbGUgYWJvdXQgdGhlIFkgYXhpc1xyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCBxdWF0IHJlY2VpdmluZyBvcGVyYXRpb24gcmVzdWx0XHJcbiAqIEBwYXJhbSB7cXVhdH0gYSBxdWF0IHRvIHJvdGF0ZVxyXG4gKiBAcGFyYW0ge251bWJlcn0gcmFkIGFuZ2xlIChpbiByYWRpYW5zKSB0byByb3RhdGVcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIHJvdGF0ZVkob3V0LCBhLCByYWQpIHtcbiAgcmFkICo9IDAuNTtcbiAgdmFyIGF4ID0gYVswXSxcbiAgICAgIGF5ID0gYVsxXSxcbiAgICAgIGF6ID0gYVsyXSxcbiAgICAgIGF3ID0gYVszXTtcbiAgdmFyIGJ5ID0gTWF0aC5zaW4ocmFkKSxcbiAgICAgIGJ3ID0gTWF0aC5jb3MocmFkKTtcbiAgb3V0WzBdID0gYXggKiBidyAtIGF6ICogYnk7XG4gIG91dFsxXSA9IGF5ICogYncgKyBhdyAqIGJ5O1xuICBvdXRbMl0gPSBheiAqIGJ3ICsgYXggKiBieTtcbiAgb3V0WzNdID0gYXcgKiBidyAtIGF5ICogYnk7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcclxuICogUm90YXRlcyBhIHF1YXRlcm5pb24gYnkgdGhlIGdpdmVuIGFuZ2xlIGFib3V0IHRoZSBaIGF4aXNcclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgcXVhdCByZWNlaXZpbmcgb3BlcmF0aW9uIHJlc3VsdFxyXG4gKiBAcGFyYW0ge3F1YXR9IGEgcXVhdCB0byByb3RhdGVcclxuICogQHBhcmFtIHtudW1iZXJ9IHJhZCBhbmdsZSAoaW4gcmFkaWFucykgdG8gcm90YXRlXHJcbiAqIEByZXR1cm5zIHtxdWF0fSBvdXRcclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiByb3RhdGVaKG91dCwgYSwgcmFkKSB7XG4gIHJhZCAqPSAwLjU7XG4gIHZhciBheCA9IGFbMF0sXG4gICAgICBheSA9IGFbMV0sXG4gICAgICBheiA9IGFbMl0sXG4gICAgICBhdyA9IGFbM107XG4gIHZhciBieiA9IE1hdGguc2luKHJhZCksXG4gICAgICBidyA9IE1hdGguY29zKHJhZCk7XG4gIG91dFswXSA9IGF4ICogYncgKyBheSAqIGJ6O1xuICBvdXRbMV0gPSBheSAqIGJ3IC0gYXggKiBiejtcbiAgb3V0WzJdID0gYXogKiBidyArIGF3ICogYno7XG4gIG91dFszXSA9IGF3ICogYncgLSBheiAqIGJ6O1xuICByZXR1cm4gb3V0O1xufVxuLyoqXHJcbiAqIENhbGN1bGF0ZXMgdGhlIFcgY29tcG9uZW50IG9mIGEgcXVhdCBmcm9tIHRoZSBYLCBZLCBhbmQgWiBjb21wb25lbnRzLlxyXG4gKiBBc3N1bWVzIHRoYXQgcXVhdGVybmlvbiBpcyAxIHVuaXQgaW4gbGVuZ3RoLlxyXG4gKiBBbnkgZXhpc3RpbmcgVyBjb21wb25lbnQgd2lsbCBiZSBpZ25vcmVkLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb25cclxuICogQHBhcmFtIHtxdWF0fSBhIHF1YXQgdG8gY2FsY3VsYXRlIFcgY29tcG9uZW50IG9mXHJcbiAqIEByZXR1cm5zIHtxdWF0fSBvdXRcclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVXKG91dCwgYSkge1xuICB2YXIgeCA9IGFbMF0sXG4gICAgICB5ID0gYVsxXSxcbiAgICAgIHogPSBhWzJdO1xuICBvdXRbMF0gPSB4O1xuICBvdXRbMV0gPSB5O1xuICBvdXRbMl0gPSB6O1xuICBvdXRbM10gPSBNYXRoLnNxcnQoTWF0aC5hYnMoMS4wIC0geCAqIHggLSB5ICogeSAtIHogKiB6KSk7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcclxuICogQ2FsY3VsYXRlIHRoZSBleHBvbmVudGlhbCBvZiBhIHVuaXQgcXVhdGVybmlvbi5cclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgdGhlIHJlY2VpdmluZyBxdWF0ZXJuaW9uXHJcbiAqIEBwYXJhbSB7cXVhdH0gYSBxdWF0IHRvIGNhbGN1bGF0ZSB0aGUgZXhwb25lbnRpYWwgb2ZcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGV4cChvdXQsIGEpIHtcbiAgdmFyIHggPSBhWzBdLFxuICAgICAgeSA9IGFbMV0sXG4gICAgICB6ID0gYVsyXSxcbiAgICAgIHcgPSBhWzNdO1xuICB2YXIgciA9IE1hdGguc3FydCh4ICogeCArIHkgKiB5ICsgeiAqIHopO1xuICB2YXIgZXQgPSBNYXRoLmV4cCh3KTtcbiAgdmFyIHMgPSByID4gMCA/IGV0ICogTWF0aC5zaW4ocikgLyByIDogMDtcbiAgb3V0WzBdID0geCAqIHM7XG4gIG91dFsxXSA9IHkgKiBzO1xuICBvdXRbMl0gPSB6ICogcztcbiAgb3V0WzNdID0gZXQgKiBNYXRoLmNvcyhyKTtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxyXG4gKiBDYWxjdWxhdGUgdGhlIG5hdHVyYWwgbG9nYXJpdGhtIG9mIGEgdW5pdCBxdWF0ZXJuaW9uLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb25cclxuICogQHBhcmFtIHtxdWF0fSBhIHF1YXQgdG8gY2FsY3VsYXRlIHRoZSBleHBvbmVudGlhbCBvZlxyXG4gKiBAcmV0dXJucyB7cXVhdH0gb3V0XHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gbG4ob3V0LCBhKSB7XG4gIHZhciB4ID0gYVswXSxcbiAgICAgIHkgPSBhWzFdLFxuICAgICAgeiA9IGFbMl0sXG4gICAgICB3ID0gYVszXTtcbiAgdmFyIHIgPSBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSArIHogKiB6KTtcbiAgdmFyIHQgPSByID4gMCA/IE1hdGguYXRhbjIociwgdykgLyByIDogMDtcbiAgb3V0WzBdID0geCAqIHQ7XG4gIG91dFsxXSA9IHkgKiB0O1xuICBvdXRbMl0gPSB6ICogdDtcbiAgb3V0WzNdID0gMC41ICogTWF0aC5sb2coeCAqIHggKyB5ICogeSArIHogKiB6ICsgdyAqIHcpO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXHJcbiAqIENhbGN1bGF0ZSB0aGUgc2NhbGFyIHBvd2VyIG9mIGEgdW5pdCBxdWF0ZXJuaW9uLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb25cclxuICogQHBhcmFtIHtxdWF0fSBhIHF1YXQgdG8gY2FsY3VsYXRlIHRoZSBleHBvbmVudGlhbCBvZlxyXG4gKiBAcGFyYW0ge051bWJlcn0gYiBhbW91bnQgdG8gc2NhbGUgdGhlIHF1YXRlcm5pb24gYnlcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIHBvdyhvdXQsIGEsIGIpIHtcbiAgbG4ob3V0LCBhKTtcbiAgc2NhbGUob3V0LCBvdXQsIGIpO1xuICBleHAob3V0LCBvdXQpO1xuICByZXR1cm4gb3V0O1xufVxuLyoqXHJcbiAqIFBlcmZvcm1zIGEgc3BoZXJpY2FsIGxpbmVhciBpbnRlcnBvbGF0aW9uIGJldHdlZW4gdHdvIHF1YXRcclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgdGhlIHJlY2VpdmluZyBxdWF0ZXJuaW9uXHJcbiAqIEBwYXJhbSB7cXVhdH0gYSB0aGUgZmlyc3Qgb3BlcmFuZFxyXG4gKiBAcGFyYW0ge3F1YXR9IGIgdGhlIHNlY29uZCBvcGVyYW5kXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB0IGludGVycG9sYXRpb24gYW1vdW50LCBpbiB0aGUgcmFuZ2UgWzAtMV0sIGJldHdlZW4gdGhlIHR3byBpbnB1dHNcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIHNsZXJwKG91dCwgYSwgYiwgdCkge1xuICAvLyBiZW5jaG1hcmtzOlxuICAvLyAgICBodHRwOi8vanNwZXJmLmNvbS9xdWF0ZXJuaW9uLXNsZXJwLWltcGxlbWVudGF0aW9uc1xuICB2YXIgYXggPSBhWzBdLFxuICAgICAgYXkgPSBhWzFdLFxuICAgICAgYXogPSBhWzJdLFxuICAgICAgYXcgPSBhWzNdO1xuICB2YXIgYnggPSBiWzBdLFxuICAgICAgYnkgPSBiWzFdLFxuICAgICAgYnogPSBiWzJdLFxuICAgICAgYncgPSBiWzNdO1xuICB2YXIgb21lZ2EsIGNvc29tLCBzaW5vbSwgc2NhbGUwLCBzY2FsZTE7IC8vIGNhbGMgY29zaW5lXG5cbiAgY29zb20gPSBheCAqIGJ4ICsgYXkgKiBieSArIGF6ICogYnogKyBhdyAqIGJ3OyAvLyBhZGp1c3Qgc2lnbnMgKGlmIG5lY2Vzc2FyeSlcblxuICBpZiAoY29zb20gPCAwLjApIHtcbiAgICBjb3NvbSA9IC1jb3NvbTtcbiAgICBieCA9IC1ieDtcbiAgICBieSA9IC1ieTtcbiAgICBieiA9IC1iejtcbiAgICBidyA9IC1idztcbiAgfSAvLyBjYWxjdWxhdGUgY29lZmZpY2llbnRzXG5cblxuICBpZiAoMS4wIC0gY29zb20gPiBnbE1hdHJpeC5FUFNJTE9OKSB7XG4gICAgLy8gc3RhbmRhcmQgY2FzZSAoc2xlcnApXG4gICAgb21lZ2EgPSBNYXRoLmFjb3MoY29zb20pO1xuICAgIHNpbm9tID0gTWF0aC5zaW4ob21lZ2EpO1xuICAgIHNjYWxlMCA9IE1hdGguc2luKCgxLjAgLSB0KSAqIG9tZWdhKSAvIHNpbm9tO1xuICAgIHNjYWxlMSA9IE1hdGguc2luKHQgKiBvbWVnYSkgLyBzaW5vbTtcbiAgfSBlbHNlIHtcbiAgICAvLyBcImZyb21cIiBhbmQgXCJ0b1wiIHF1YXRlcm5pb25zIGFyZSB2ZXJ5IGNsb3NlXG4gICAgLy8gIC4uLiBzbyB3ZSBjYW4gZG8gYSBsaW5lYXIgaW50ZXJwb2xhdGlvblxuICAgIHNjYWxlMCA9IDEuMCAtIHQ7XG4gICAgc2NhbGUxID0gdDtcbiAgfSAvLyBjYWxjdWxhdGUgZmluYWwgdmFsdWVzXG5cblxuICBvdXRbMF0gPSBzY2FsZTAgKiBheCArIHNjYWxlMSAqIGJ4O1xuICBvdXRbMV0gPSBzY2FsZTAgKiBheSArIHNjYWxlMSAqIGJ5O1xuICBvdXRbMl0gPSBzY2FsZTAgKiBheiArIHNjYWxlMSAqIGJ6O1xuICBvdXRbM10gPSBzY2FsZTAgKiBhdyArIHNjYWxlMSAqIGJ3O1xuICByZXR1cm4gb3V0O1xufVxuLyoqXHJcbiAqIEdlbmVyYXRlcyBhIHJhbmRvbSB1bml0IHF1YXRlcm5pb25cclxuICogXHJcbiAqIEBwYXJhbSB7cXVhdH0gb3V0IHRoZSByZWNlaXZpbmcgcXVhdGVybmlvblxyXG4gKiBAcmV0dXJucyB7cXVhdH0gb3V0XHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tKG91dCkge1xuICAvLyBJbXBsZW1lbnRhdGlvbiBvZiBodHRwOi8vcGxhbm5pbmcuY3MudWl1Yy5lZHUvbm9kZTE5OC5odG1sXG4gIC8vIFRPRE86IENhbGxpbmcgcmFuZG9tIDMgdGltZXMgaXMgcHJvYmFibHkgbm90IHRoZSBmYXN0ZXN0IHNvbHV0aW9uXG4gIHZhciB1MSA9IGdsTWF0cml4LlJBTkRPTSgpO1xuICB2YXIgdTIgPSBnbE1hdHJpeC5SQU5ET00oKTtcbiAgdmFyIHUzID0gZ2xNYXRyaXguUkFORE9NKCk7XG4gIHZhciBzcXJ0MU1pbnVzVTEgPSBNYXRoLnNxcnQoMSAtIHUxKTtcbiAgdmFyIHNxcnRVMSA9IE1hdGguc3FydCh1MSk7XG4gIG91dFswXSA9IHNxcnQxTWludXNVMSAqIE1hdGguc2luKDIuMCAqIE1hdGguUEkgKiB1Mik7XG4gIG91dFsxXSA9IHNxcnQxTWludXNVMSAqIE1hdGguY29zKDIuMCAqIE1hdGguUEkgKiB1Mik7XG4gIG91dFsyXSA9IHNxcnRVMSAqIE1hdGguc2luKDIuMCAqIE1hdGguUEkgKiB1Myk7XG4gIG91dFszXSA9IHNxcnRVMSAqIE1hdGguY29zKDIuMCAqIE1hdGguUEkgKiB1Myk7XG4gIHJldHVybiBvdXQ7XG59XG4vKipcclxuICogQ2FsY3VsYXRlcyB0aGUgaW52ZXJzZSBvZiBhIHF1YXRcclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgdGhlIHJlY2VpdmluZyBxdWF0ZXJuaW9uXHJcbiAqIEBwYXJhbSB7cXVhdH0gYSBxdWF0IHRvIGNhbGN1bGF0ZSBpbnZlcnNlIG9mXHJcbiAqIEByZXR1cm5zIHtxdWF0fSBvdXRcclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnQob3V0LCBhKSB7XG4gIHZhciBhMCA9IGFbMF0sXG4gICAgICBhMSA9IGFbMV0sXG4gICAgICBhMiA9IGFbMl0sXG4gICAgICBhMyA9IGFbM107XG4gIHZhciBkb3QgPSBhMCAqIGEwICsgYTEgKiBhMSArIGEyICogYTIgKyBhMyAqIGEzO1xuICB2YXIgaW52RG90ID0gZG90ID8gMS4wIC8gZG90IDogMDsgLy8gVE9ETzogV291bGQgYmUgZmFzdGVyIHRvIHJldHVybiBbMCwwLDAsMF0gaW1tZWRpYXRlbHkgaWYgZG90ID09IDBcblxuICBvdXRbMF0gPSAtYTAgKiBpbnZEb3Q7XG4gIG91dFsxXSA9IC1hMSAqIGludkRvdDtcbiAgb3V0WzJdID0gLWEyICogaW52RG90O1xuICBvdXRbM10gPSBhMyAqIGludkRvdDtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxyXG4gKiBDYWxjdWxhdGVzIHRoZSBjb25qdWdhdGUgb2YgYSBxdWF0XHJcbiAqIElmIHRoZSBxdWF0ZXJuaW9uIGlzIG5vcm1hbGl6ZWQsIHRoaXMgZnVuY3Rpb24gaXMgZmFzdGVyIHRoYW4gcXVhdC5pbnZlcnNlIGFuZCBwcm9kdWNlcyB0aGUgc2FtZSByZXN1bHQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7cXVhdH0gb3V0IHRoZSByZWNlaXZpbmcgcXVhdGVybmlvblxyXG4gKiBAcGFyYW0ge3F1YXR9IGEgcXVhdCB0byBjYWxjdWxhdGUgY29uanVnYXRlIG9mXHJcbiAqIEByZXR1cm5zIHtxdWF0fSBvdXRcclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25qdWdhdGUob3V0LCBhKSB7XG4gIG91dFswXSA9IC1hWzBdO1xuICBvdXRbMV0gPSAtYVsxXTtcbiAgb3V0WzJdID0gLWFbMl07XG4gIG91dFszXSA9IGFbM107XG4gIHJldHVybiBvdXQ7XG59XG4vKipcclxuICogQ3JlYXRlcyBhIHF1YXRlcm5pb24gZnJvbSB0aGUgZ2l2ZW4gM3gzIHJvdGF0aW9uIG1hdHJpeC5cclxuICpcclxuICogTk9URTogVGhlIHJlc3VsdGFudCBxdWF0ZXJuaW9uIGlzIG5vdCBub3JtYWxpemVkLCBzbyB5b3Ugc2hvdWxkIGJlIHN1cmVcclxuICogdG8gcmVub3JtYWxpemUgdGhlIHF1YXRlcm5pb24geW91cnNlbGYgd2hlcmUgbmVjZXNzYXJ5LlxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb25cclxuICogQHBhcmFtIHttYXQzfSBtIHJvdGF0aW9uIG1hdHJpeFxyXG4gKiBAcmV0dXJucyB7cXVhdH0gb3V0XHJcbiAqIEBmdW5jdGlvblxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGZyb21NYXQzKG91dCwgbSkge1xuICAvLyBBbGdvcml0aG0gaW4gS2VuIFNob2VtYWtlJ3MgYXJ0aWNsZSBpbiAxOTg3IFNJR0dSQVBIIGNvdXJzZSBub3Rlc1xuICAvLyBhcnRpY2xlIFwiUXVhdGVybmlvbiBDYWxjdWx1cyBhbmQgRmFzdCBBbmltYXRpb25cIi5cbiAgdmFyIGZUcmFjZSA9IG1bMF0gKyBtWzRdICsgbVs4XTtcbiAgdmFyIGZSb290O1xuXG4gIGlmIChmVHJhY2UgPiAwLjApIHtcbiAgICAvLyB8d3wgPiAxLzIsIG1heSBhcyB3ZWxsIGNob29zZSB3ID4gMS8yXG4gICAgZlJvb3QgPSBNYXRoLnNxcnQoZlRyYWNlICsgMS4wKTsgLy8gMndcblxuICAgIG91dFszXSA9IDAuNSAqIGZSb290O1xuICAgIGZSb290ID0gMC41IC8gZlJvb3Q7IC8vIDEvKDR3KVxuXG4gICAgb3V0WzBdID0gKG1bNV0gLSBtWzddKSAqIGZSb290O1xuICAgIG91dFsxXSA9IChtWzZdIC0gbVsyXSkgKiBmUm9vdDtcbiAgICBvdXRbMl0gPSAobVsxXSAtIG1bM10pICogZlJvb3Q7XG4gIH0gZWxzZSB7XG4gICAgLy8gfHd8IDw9IDEvMlxuICAgIHZhciBpID0gMDtcbiAgICBpZiAobVs0XSA+IG1bMF0pIGkgPSAxO1xuICAgIGlmIChtWzhdID4gbVtpICogMyArIGldKSBpID0gMjtcbiAgICB2YXIgaiA9IChpICsgMSkgJSAzO1xuICAgIHZhciBrID0gKGkgKyAyKSAlIDM7XG4gICAgZlJvb3QgPSBNYXRoLnNxcnQobVtpICogMyArIGldIC0gbVtqICogMyArIGpdIC0gbVtrICogMyArIGtdICsgMS4wKTtcbiAgICBvdXRbaV0gPSAwLjUgKiBmUm9vdDtcbiAgICBmUm9vdCA9IDAuNSAvIGZSb290O1xuICAgIG91dFszXSA9IChtW2ogKiAzICsga10gLSBtW2sgKiAzICsgal0pICogZlJvb3Q7XG4gICAgb3V0W2pdID0gKG1baiAqIDMgKyBpXSArIG1baSAqIDMgKyBqXSkgKiBmUm9vdDtcbiAgICBvdXRba10gPSAobVtrICogMyArIGldICsgbVtpICogMyArIGtdKSAqIGZSb290O1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxyXG4gKiBDcmVhdGVzIGEgcXVhdGVybmlvbiBmcm9tIHRoZSBnaXZlbiBldWxlciBhbmdsZSB4LCB5LCB6LlxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb25cclxuICogQHBhcmFtIHt4fSBBbmdsZSB0byByb3RhdGUgYXJvdW5kIFggYXhpcyBpbiBkZWdyZWVzLlxyXG4gKiBAcGFyYW0ge3l9IEFuZ2xlIHRvIHJvdGF0ZSBhcm91bmQgWSBheGlzIGluIGRlZ3JlZXMuXHJcbiAqIEBwYXJhbSB7en0gQW5nbGUgdG8gcm90YXRlIGFyb3VuZCBaIGF4aXMgaW4gZGVncmVlcy5cclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBmcm9tRXVsZXIob3V0LCB4LCB5LCB6KSB7XG4gIHZhciBoYWxmVG9SYWQgPSAwLjUgKiBNYXRoLlBJIC8gMTgwLjA7XG4gIHggKj0gaGFsZlRvUmFkO1xuICB5ICo9IGhhbGZUb1JhZDtcbiAgeiAqPSBoYWxmVG9SYWQ7XG4gIHZhciBzeCA9IE1hdGguc2luKHgpO1xuICB2YXIgY3ggPSBNYXRoLmNvcyh4KTtcbiAgdmFyIHN5ID0gTWF0aC5zaW4oeSk7XG4gIHZhciBjeSA9IE1hdGguY29zKHkpO1xuICB2YXIgc3ogPSBNYXRoLnNpbih6KTtcbiAgdmFyIGN6ID0gTWF0aC5jb3Moeik7XG4gIG91dFswXSA9IHN4ICogY3kgKiBjeiAtIGN4ICogc3kgKiBzejtcbiAgb3V0WzFdID0gY3ggKiBzeSAqIGN6ICsgc3ggKiBjeSAqIHN6O1xuICBvdXRbMl0gPSBjeCAqIGN5ICogc3ogLSBzeCAqIHN5ICogY3o7XG4gIG91dFszXSA9IGN4ICogY3kgKiBjeiArIHN4ICogc3kgKiBzejtcbiAgcmV0dXJuIG91dDtcbn1cbi8qKlxyXG4gKiBSZXR1cm5zIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGEgcXVhdGVuaW9uXHJcbiAqXHJcbiAqIEBwYXJhbSB7cXVhdH0gYSB2ZWN0b3IgdG8gcmVwcmVzZW50IGFzIGEgc3RyaW5nXHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9IHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgdmVjdG9yXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyKGEpIHtcbiAgcmV0dXJuICdxdWF0KCcgKyBhWzBdICsgJywgJyArIGFbMV0gKyAnLCAnICsgYVsyXSArICcsICcgKyBhWzNdICsgJyknO1xufVxuLyoqXHJcbiAqIENyZWF0ZXMgYSBuZXcgcXVhdCBpbml0aWFsaXplZCB3aXRoIHZhbHVlcyBmcm9tIGFuIGV4aXN0aW5nIHF1YXRlcm5pb25cclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBhIHF1YXRlcm5pb24gdG8gY2xvbmVcclxuICogQHJldHVybnMge3F1YXR9IGEgbmV3IHF1YXRlcm5pb25cclxuICogQGZ1bmN0aW9uXHJcbiAqL1xuXG5leHBvcnQgdmFyIGNsb25lID0gdmVjNC5jbG9uZTtcbi8qKlxyXG4gKiBDcmVhdGVzIGEgbmV3IHF1YXQgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgZ2l2ZW4gdmFsdWVzXHJcbiAqXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB4IFggY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB5IFkgY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB6IFogY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB3IFcgY29tcG9uZW50XHJcbiAqIEByZXR1cm5zIHtxdWF0fSBhIG5ldyBxdWF0ZXJuaW9uXHJcbiAqIEBmdW5jdGlvblxyXG4gKi9cblxuZXhwb3J0IHZhciBmcm9tVmFsdWVzID0gdmVjNC5mcm9tVmFsdWVzO1xuLyoqXHJcbiAqIENvcHkgdGhlIHZhbHVlcyBmcm9tIG9uZSBxdWF0IHRvIGFub3RoZXJcclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgdGhlIHJlY2VpdmluZyBxdWF0ZXJuaW9uXHJcbiAqIEBwYXJhbSB7cXVhdH0gYSB0aGUgc291cmNlIHF1YXRlcm5pb25cclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgY29weSA9IHZlYzQuY29weTtcbi8qKlxyXG4gKiBTZXQgdGhlIGNvbXBvbmVudHMgb2YgYSBxdWF0IHRvIHRoZSBnaXZlbiB2YWx1ZXNcclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgdGhlIHJlY2VpdmluZyBxdWF0ZXJuaW9uXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB4IFggY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB5IFkgY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB6IFogY29tcG9uZW50XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB3IFcgY29tcG9uZW50XHJcbiAqIEByZXR1cm5zIHtxdWF0fSBvdXRcclxuICogQGZ1bmN0aW9uXHJcbiAqL1xuXG5leHBvcnQgdmFyIHNldCA9IHZlYzQuc2V0O1xuLyoqXHJcbiAqIEFkZHMgdHdvIHF1YXQnc1xyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb25cclxuICogQHBhcmFtIHtxdWF0fSBhIHRoZSBmaXJzdCBvcGVyYW5kXHJcbiAqIEBwYXJhbSB7cXVhdH0gYiB0aGUgc2Vjb25kIG9wZXJhbmRcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgYWRkID0gdmVjNC5hZGQ7XG4vKipcclxuICogQWxpYXMgZm9yIHtAbGluayBxdWF0Lm11bHRpcGx5fVxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgbXVsID0gbXVsdGlwbHk7XG4vKipcclxuICogU2NhbGVzIGEgcXVhdCBieSBhIHNjYWxhciBudW1iZXJcclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgdGhlIHJlY2VpdmluZyB2ZWN0b3JcclxuICogQHBhcmFtIHtxdWF0fSBhIHRoZSB2ZWN0b3IgdG8gc2NhbGVcclxuICogQHBhcmFtIHtOdW1iZXJ9IGIgYW1vdW50IHRvIHNjYWxlIHRoZSB2ZWN0b3IgYnlcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgc2NhbGUgPSB2ZWM0LnNjYWxlO1xuLyoqXHJcbiAqIENhbGN1bGF0ZXMgdGhlIGRvdCBwcm9kdWN0IG9mIHR3byBxdWF0J3NcclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBhIHRoZSBmaXJzdCBvcGVyYW5kXHJcbiAqIEBwYXJhbSB7cXVhdH0gYiB0aGUgc2Vjb25kIG9wZXJhbmRcclxuICogQHJldHVybnMge051bWJlcn0gZG90IHByb2R1Y3Qgb2YgYSBhbmQgYlxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgZG90ID0gdmVjNC5kb3Q7XG4vKipcclxuICogUGVyZm9ybXMgYSBsaW5lYXIgaW50ZXJwb2xhdGlvbiBiZXR3ZWVuIHR3byBxdWF0J3NcclxuICpcclxuICogQHBhcmFtIHtxdWF0fSBvdXQgdGhlIHJlY2VpdmluZyBxdWF0ZXJuaW9uXHJcbiAqIEBwYXJhbSB7cXVhdH0gYSB0aGUgZmlyc3Qgb3BlcmFuZFxyXG4gKiBAcGFyYW0ge3F1YXR9IGIgdGhlIHNlY29uZCBvcGVyYW5kXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSB0IGludGVycG9sYXRpb24gYW1vdW50LCBpbiB0aGUgcmFuZ2UgWzAtMV0sIGJldHdlZW4gdGhlIHR3byBpbnB1dHNcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgbGVycCA9IHZlYzQubGVycDtcbi8qKlxyXG4gKiBDYWxjdWxhdGVzIHRoZSBsZW5ndGggb2YgYSBxdWF0XHJcbiAqXHJcbiAqIEBwYXJhbSB7cXVhdH0gYSB2ZWN0b3IgdG8gY2FsY3VsYXRlIGxlbmd0aCBvZlxyXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBsZW5ndGggb2YgYVxyXG4gKi9cblxuZXhwb3J0IHZhciBsZW5ndGggPSB2ZWM0Lmxlbmd0aDtcbi8qKlxyXG4gKiBBbGlhcyBmb3Ige0BsaW5rIHF1YXQubGVuZ3RofVxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgbGVuID0gbGVuZ3RoO1xuLyoqXHJcbiAqIENhbGN1bGF0ZXMgdGhlIHNxdWFyZWQgbGVuZ3RoIG9mIGEgcXVhdFxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IGEgdmVjdG9yIHRvIGNhbGN1bGF0ZSBzcXVhcmVkIGxlbmd0aCBvZlxyXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBzcXVhcmVkIGxlbmd0aCBvZiBhXHJcbiAqIEBmdW5jdGlvblxyXG4gKi9cblxuZXhwb3J0IHZhciBzcXVhcmVkTGVuZ3RoID0gdmVjNC5zcXVhcmVkTGVuZ3RoO1xuLyoqXHJcbiAqIEFsaWFzIGZvciB7QGxpbmsgcXVhdC5zcXVhcmVkTGVuZ3RofVxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgc3FyTGVuID0gc3F1YXJlZExlbmd0aDtcbi8qKlxyXG4gKiBOb3JtYWxpemUgYSBxdWF0XHJcbiAqXHJcbiAqIEBwYXJhbSB7cXVhdH0gb3V0IHRoZSByZWNlaXZpbmcgcXVhdGVybmlvblxyXG4gKiBAcGFyYW0ge3F1YXR9IGEgcXVhdGVybmlvbiB0byBub3JtYWxpemVcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKiBAZnVuY3Rpb25cclxuICovXG5cbmV4cG9ydCB2YXIgbm9ybWFsaXplID0gdmVjNC5ub3JtYWxpemU7XG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIG9yIG5vdCB0aGUgcXVhdGVybmlvbnMgaGF2ZSBleGFjdGx5IHRoZSBzYW1lIGVsZW1lbnRzIGluIHRoZSBzYW1lIHBvc2l0aW9uICh3aGVuIGNvbXBhcmVkIHdpdGggPT09KVxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IGEgVGhlIGZpcnN0IHF1YXRlcm5pb24uXHJcbiAqIEBwYXJhbSB7cXVhdH0gYiBUaGUgc2Vjb25kIHF1YXRlcm5pb24uXHJcbiAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmIHRoZSB2ZWN0b3JzIGFyZSBlcXVhbCwgZmFsc2Ugb3RoZXJ3aXNlLlxyXG4gKi9cblxuZXhwb3J0IHZhciBleGFjdEVxdWFscyA9IHZlYzQuZXhhY3RFcXVhbHM7XG4vKipcclxuICogUmV0dXJucyB3aGV0aGVyIG9yIG5vdCB0aGUgcXVhdGVybmlvbnMgaGF2ZSBhcHByb3hpbWF0ZWx5IHRoZSBzYW1lIGVsZW1lbnRzIGluIHRoZSBzYW1lIHBvc2l0aW9uLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IGEgVGhlIGZpcnN0IHZlY3Rvci5cclxuICogQHBhcmFtIHtxdWF0fSBiIFRoZSBzZWNvbmQgdmVjdG9yLlxyXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZiB0aGUgdmVjdG9ycyBhcmUgZXF1YWwsIGZhbHNlIG90aGVyd2lzZS5cclxuICovXG5cbmV4cG9ydCB2YXIgZXF1YWxzID0gdmVjNC5lcXVhbHM7XG4vKipcclxuICogU2V0cyBhIHF1YXRlcm5pb24gdG8gcmVwcmVzZW50IHRoZSBzaG9ydGVzdCByb3RhdGlvbiBmcm9tIG9uZVxyXG4gKiB2ZWN0b3IgdG8gYW5vdGhlci5cclxuICpcclxuICogQm90aCB2ZWN0b3JzIGFyZSBhc3N1bWVkIHRvIGJlIHVuaXQgbGVuZ3RoLlxyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb24uXHJcbiAqIEBwYXJhbSB7dmVjM30gYSB0aGUgaW5pdGlhbCB2ZWN0b3JcclxuICogQHBhcmFtIHt2ZWMzfSBiIHRoZSBkZXN0aW5hdGlvbiB2ZWN0b3JcclxuICogQHJldHVybnMge3F1YXR9IG91dFxyXG4gKi9cblxuZXhwb3J0IHZhciByb3RhdGlvblRvID0gZnVuY3Rpb24gKCkge1xuICB2YXIgdG1wdmVjMyA9IHZlYzMuY3JlYXRlKCk7XG4gIHZhciB4VW5pdFZlYzMgPSB2ZWMzLmZyb21WYWx1ZXMoMSwgMCwgMCk7XG4gIHZhciB5VW5pdFZlYzMgPSB2ZWMzLmZyb21WYWx1ZXMoMCwgMSwgMCk7XG4gIHJldHVybiBmdW5jdGlvbiAob3V0LCBhLCBiKSB7XG4gICAgdmFyIGRvdCA9IHZlYzMuZG90KGEsIGIpO1xuXG4gICAgaWYgKGRvdCA8IC0wLjk5OTk5OSkge1xuICAgICAgdmVjMy5jcm9zcyh0bXB2ZWMzLCB4VW5pdFZlYzMsIGEpO1xuICAgICAgaWYgKHZlYzMubGVuKHRtcHZlYzMpIDwgMC4wMDAwMDEpIHZlYzMuY3Jvc3ModG1wdmVjMywgeVVuaXRWZWMzLCBhKTtcbiAgICAgIHZlYzMubm9ybWFsaXplKHRtcHZlYzMsIHRtcHZlYzMpO1xuICAgICAgc2V0QXhpc0FuZ2xlKG91dCwgdG1wdmVjMywgTWF0aC5QSSk7XG4gICAgICByZXR1cm4gb3V0O1xuICAgIH0gZWxzZSBpZiAoZG90ID4gMC45OTk5OTkpIHtcbiAgICAgIG91dFswXSA9IDA7XG4gICAgICBvdXRbMV0gPSAwO1xuICAgICAgb3V0WzJdID0gMDtcbiAgICAgIG91dFszXSA9IDE7XG4gICAgICByZXR1cm4gb3V0O1xuICAgIH0gZWxzZSB7XG4gICAgICB2ZWMzLmNyb3NzKHRtcHZlYzMsIGEsIGIpO1xuICAgICAgb3V0WzBdID0gdG1wdmVjM1swXTtcbiAgICAgIG91dFsxXSA9IHRtcHZlYzNbMV07XG4gICAgICBvdXRbMl0gPSB0bXB2ZWMzWzJdO1xuICAgICAgb3V0WzNdID0gMSArIGRvdDtcbiAgICAgIHJldHVybiBub3JtYWxpemUob3V0LCBvdXQpO1xuICAgIH1cbiAgfTtcbn0oKTtcbi8qKlxyXG4gKiBQZXJmb3JtcyBhIHNwaGVyaWNhbCBsaW5lYXIgaW50ZXJwb2xhdGlvbiB3aXRoIHR3byBjb250cm9sIHBvaW50c1xyXG4gKlxyXG4gKiBAcGFyYW0ge3F1YXR9IG91dCB0aGUgcmVjZWl2aW5nIHF1YXRlcm5pb25cclxuICogQHBhcmFtIHtxdWF0fSBhIHRoZSBmaXJzdCBvcGVyYW5kXHJcbiAqIEBwYXJhbSB7cXVhdH0gYiB0aGUgc2Vjb25kIG9wZXJhbmRcclxuICogQHBhcmFtIHtxdWF0fSBjIHRoZSB0aGlyZCBvcGVyYW5kXHJcbiAqIEBwYXJhbSB7cXVhdH0gZCB0aGUgZm91cnRoIG9wZXJhbmRcclxuICogQHBhcmFtIHtOdW1iZXJ9IHQgaW50ZXJwb2xhdGlvbiBhbW91bnQsIGluIHRoZSByYW5nZSBbMC0xXSwgYmV0d2VlbiB0aGUgdHdvIGlucHV0c1xyXG4gKiBAcmV0dXJucyB7cXVhdH0gb3V0XHJcbiAqL1xuXG5leHBvcnQgdmFyIHNxbGVycCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRlbXAxID0gY3JlYXRlKCk7XG4gIHZhciB0ZW1wMiA9IGNyZWF0ZSgpO1xuICByZXR1cm4gZnVuY3Rpb24gKG91dCwgYSwgYiwgYywgZCwgdCkge1xuICAgIHNsZXJwKHRlbXAxLCBhLCBkLCB0KTtcbiAgICBzbGVycCh0ZW1wMiwgYiwgYywgdCk7XG4gICAgc2xlcnAob3V0LCB0ZW1wMSwgdGVtcDIsIDIgKiB0ICogKDEgLSB0KSk7XG4gICAgcmV0dXJuIG91dDtcbiAgfTtcbn0oKTtcbi8qKlxyXG4gKiBTZXRzIHRoZSBzcGVjaWZpZWQgcXVhdGVybmlvbiB3aXRoIHZhbHVlcyBjb3JyZXNwb25kaW5nIHRvIHRoZSBnaXZlblxyXG4gKiBheGVzLiBFYWNoIGF4aXMgaXMgYSB2ZWMzIGFuZCBpcyBleHBlY3RlZCB0byBiZSB1bml0IGxlbmd0aCBhbmRcclxuICogcGVycGVuZGljdWxhciB0byBhbGwgb3RoZXIgc3BlY2lmaWVkIGF4ZXMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7dmVjM30gdmlldyAgdGhlIHZlY3RvciByZXByZXNlbnRpbmcgdGhlIHZpZXdpbmcgZGlyZWN0aW9uXHJcbiAqIEBwYXJhbSB7dmVjM30gcmlnaHQgdGhlIHZlY3RvciByZXByZXNlbnRpbmcgdGhlIGxvY2FsIFwicmlnaHRcIiBkaXJlY3Rpb25cclxuICogQHBhcmFtIHt2ZWMzfSB1cCAgICB0aGUgdmVjdG9yIHJlcHJlc2VudGluZyB0aGUgbG9jYWwgXCJ1cFwiIGRpcmVjdGlvblxyXG4gKiBAcmV0dXJucyB7cXVhdH0gb3V0XHJcbiAqL1xuXG5leHBvcnQgdmFyIHNldEF4ZXMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBtYXRyID0gbWF0My5jcmVhdGUoKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChvdXQsIHZpZXcsIHJpZ2h0LCB1cCkge1xuICAgIG1hdHJbMF0gPSByaWdodFswXTtcbiAgICBtYXRyWzNdID0gcmlnaHRbMV07XG4gICAgbWF0cls2XSA9IHJpZ2h0WzJdO1xuICAgIG1hdHJbMV0gPSB1cFswXTtcbiAgICBtYXRyWzRdID0gdXBbMV07XG4gICAgbWF0cls3XSA9IHVwWzJdO1xuICAgIG1hdHJbMl0gPSAtdmlld1swXTtcbiAgICBtYXRyWzVdID0gLXZpZXdbMV07XG4gICAgbWF0cls4XSA9IC12aWV3WzJdO1xuICAgIHJldHVybiBub3JtYWxpemUob3V0LCBmcm9tTWF0MyhvdXQsIG1hdHIpKTtcbiAgfTtcbn0oKTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/quat.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/quat2.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/quat2.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"fromRotationTranslationValues\": () => (/* binding */ fromRotationTranslationValues),\n/* harmony export */   \"fromRotationTranslation\": () => (/* binding */ fromRotationTranslation),\n/* harmony export */   \"fromTranslation\": () => (/* binding */ fromTranslation),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromMat4\": () => (/* binding */ fromMat4),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"getReal\": () => (/* binding */ getReal),\n/* harmony export */   \"getDual\": () => (/* binding */ getDual),\n/* harmony export */   \"setReal\": () => (/* binding */ setReal),\n/* harmony export */   \"setDual\": () => (/* binding */ setDual),\n/* harmony export */   \"getTranslation\": () => (/* binding */ getTranslation),\n/* harmony export */   \"translate\": () => (/* binding */ translate),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"rotateByQuatAppend\": () => (/* binding */ rotateByQuatAppend),\n/* harmony export */   \"rotateByQuatPrepend\": () => (/* binding */ rotateByQuatPrepend),\n/* harmony export */   \"rotateAroundAxis\": () => (/* binding */ rotateAroundAxis),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"conjugate\": () => (/* binding */ conjugate),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quat.js */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4.js */ \"./node_modules/gl-matrix/esm/mat4.js\");\n\n\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nfunction create() {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(8);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction clone(a) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q a normalized quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = _quat_js__WEBPACK_IMPORTED_MODULE_1__.create();\n  _mat4_js__WEBPACK_IMPORTED_MODULE_2__.getRotation(outer, a);\n  var t = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  _mat4_js__WEBPACK_IMPORTED_MODULE_2__.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nvar getReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nvar setReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot = _quat_js__WEBPACK_IMPORTED_MODULE_1__.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nvar length = _quat_js__WEBPACK_IMPORTED_MODULE_1__.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength = _quat_js__WEBPACK_IMPORTED_MODULE_1__.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nfunction str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/quat2.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec2.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec2.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"transformMat2\": () => (/* binding */ transformMat2),\n/* harmony export */   \"transformMat2d\": () => (/* binding */ transformMat2d),\n/* harmony export */   \"transformMat3\": () => (/* binding */ transformMat3),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"angle\": () => (/* binding */ angle),\n/* harmony export */   \"zero\": () => (/* binding */ zero),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction fromValues(x, y) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nfunction rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/vec2.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"hermite\": () => (/* binding */ hermite),\n/* harmony export */   \"bezier\": () => (/* binding */ bezier),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"transformMat3\": () => (/* binding */ transformMat3),\n/* harmony export */   \"transformQuat\": () => (/* binding */ transformQuat),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"angle\": () => (/* binding */ angle),\n/* harmony export */   \"zero\": () => (/* binding */ zero),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction fromValues(x, y, z) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/vec3.js\n");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"transformQuat\": () => (/* binding */ transformQuat),\n/* harmony export */   \"zero\": () => (/* binding */ zero),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction fromValues(x, y, z, w) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gl-matrix/esm/vec4.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./node_modules/@zappar/zappar-cv/lib/worker.js");
/******/ 	
/******/ })()
;